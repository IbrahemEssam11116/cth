//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using SStorm.CTH.DAL.EntityClasses;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.FactoryClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END


	/// <summary>general base class for the generated factories</summary>
	[Serializable]
	public partial class EntityFactoryBase2<TEntity> : EntityFactoryCore2
		where TEntity : EntityBase2, IEntity2
	{
		private readonly SStorm.CTH.DAL.EntityType _typeOfEntity;
		private readonly bool _isInHierarchy;

		/// <summary>CTor</summary>
		/// <param name="entityName">Name of the entity.</param>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <param name="isInHierarchy">If true, the entity of this factory is in an inheritance hierarchy, false otherwise</param>
		public EntityFactoryBase2(string entityName, SStorm.CTH.DAL.EntityType typeOfEntity, bool isInHierarchy) : base(entityName)
		{
			_typeOfEntity = typeOfEntity;
			_isInHierarchy = isInHierarchy;
		}
		
		/// <inheritdoc/>
		public override IEntityFields2 CreateFields() { return ModelInfoProviderSingleton.GetInstance().GetEntityFields(this.ForEntityName); }
		
		/// <inheritdoc/>
		public override IEntity2 CreateEntityFromEntityTypeValue(int entityTypeValue) {	return GeneralEntityFactory.Create((SStorm.CTH.DAL.EntityType)entityTypeValue); }

		/// <inheritdoc/>
		public override IRelationCollection CreateHierarchyRelations(string objectAlias) { return ModelInfoProviderSingleton.GetInstance().GetHierarchyRelations(this.ForEntityName, objectAlias); }

		/// <inheritdoc/>
		public override IEntityFactory2 GetEntityFactory(object[] fieldValues, Dictionary<string, int> entityFieldStartIndexesPerEntity) 
		{
			return (IEntityFactory2)ModelInfoProviderSingleton.GetInstance().GetEntityFactory(this.ForEntityName, fieldValues, entityFieldStartIndexesPerEntity) ?? this;
		}
		
		/// <inheritdoc/>
		public override IPredicateExpression GetEntityTypeFilter(bool negate, string objectAlias) {	return ModelInfoProviderSingleton.GetInstance().GetEntityTypeFilter(this.ForEntityName, objectAlias, negate);	}
						
		/// <inheritdoc/>
		public override IEntityCollection2 CreateEntityCollection()	{ return new EntityCollection<TEntity>(this); }
		
		/// <inheritdoc/>
		public override IEntityFields2 CreateHierarchyFields() 
		{
			return _isInHierarchy ? new EntityFields2(ModelInfoProviderSingleton.GetInstance().GetHierarchyFields(this.ForEntityName), ModelInfoProviderSingleton.GetInstance(), null) : base.CreateHierarchyFields();
		}
		
		/// <inheritdoc/>
		protected override Type ForEntityType { get { return typeof(TEntity); } }
	}

	/// <summary>Factory to create new, empty CTHCancerGradeEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerGradeEntityFactory : EntityFactoryBase2<CTHCancerGradeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerGradeEntityFactory() : base("CTHCancerGradeEntity", SStorm.CTH.DAL.EntityType.CTHCancerGradeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerGradeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCancerHistologicEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerHistologicEntityFactory : EntityFactoryBase2<CTHCancerHistologicEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerHistologicEntityFactory() : base("CTHCancerHistologicEntity", SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerHistologicEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCancerMolecularEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerMolecularEntityFactory : EntityFactoryBase2<CTHCancerMolecularEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerMolecularEntityFactory() : base("CTHCancerMolecularEntity", SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerMolecularEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCancerSideEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerSideEntityFactory : EntityFactoryBase2<CTHCancerSideEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerSideEntityFactory() : base("CTHCancerSideEntity", SStorm.CTH.DAL.EntityType.CTHCancerSideEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerSideEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCancerStagingEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerStagingEntityFactory : EntityFactoryBase2<CTHCancerStagingEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerStagingEntityFactory() : base("CTHCancerStagingEntity", SStorm.CTH.DAL.EntityType.CTHCancerStagingEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerStagingEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCancerTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHCancerTypeEntityFactory : EntityFactoryBase2<CTHCancerTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCancerTypeEntityFactory() : base("CTHCancerTypeEntity", SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCancerTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHChemoLabEntity objects.</summary>
	[Serializable]
	public partial class CTHChemoLabEntityFactory : EntityFactoryBase2<CTHChemoLabEntity> 
	{
		/// <summary>CTor</summary>
		public CTHChemoLabEntityFactory() : base("CTHChemoLabEntity", SStorm.CTH.DAL.EntityType.CTHChemoLabEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHChemoLabEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHChemotherapyProtocolEntity objects.</summary>
	[Serializable]
	public partial class CTHChemotherapyProtocolEntityFactory : EntityFactoryBase2<CTHChemotherapyProtocolEntity> 
	{
		/// <summary>CTor</summary>
		public CTHChemotherapyProtocolEntityFactory() : base("CTHChemotherapyProtocolEntity", SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHChemotherapyProtocolEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCycleDrugEntity objects.</summary>
	[Serializable]
	public partial class CTHCycleDrugEntityFactory : EntityFactoryBase2<CTHCycleDrugEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCycleDrugEntityFactory() : base("CTHCycleDrugEntity", SStorm.CTH.DAL.EntityType.CTHCycleDrugEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCycleDrugEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHCycleLabEntity objects.</summary>
	[Serializable]
	public partial class CTHCycleLabEntityFactory : EntityFactoryBase2<CTHCycleLabEntity> 
	{
		/// <summary>CTor</summary>
		public CTHCycleLabEntityFactory() : base("CTHCycleLabEntity", SStorm.CTH.DAL.EntityType.CTHCycleLabEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHCycleLabEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDoctorEntity objects.</summary>
	[Serializable]
	public partial class CTHDoctorEntityFactory : EntityFactoryBase2<CTHDoctorEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDoctorEntityFactory() : base("CTHDoctorEntity", SStorm.CTH.DAL.EntityType.CTHDoctorEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDoctorEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDoseUnitEntity objects.</summary>
	[Serializable]
	public partial class CTHDoseUnitEntityFactory : EntityFactoryBase2<CTHDoseUnitEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDoseUnitEntityFactory() : base("CTHDoseUnitEntity", SStorm.CTH.DAL.EntityType.CTHDoseUnitEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDoseUnitEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDrugEntity objects.</summary>
	[Serializable]
	public partial class CTHDrugEntityFactory : EntityFactoryBase2<CTHDrugEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDrugEntityFactory() : base("CTHDrugEntity", SStorm.CTH.DAL.EntityType.CTHDrugEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDrugEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDrugAttachmentEntity objects.</summary>
	[Serializable]
	public partial class CTHDrugAttachmentEntityFactory : EntityFactoryBase2<CTHDrugAttachmentEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDrugAttachmentEntityFactory() : base("CTHDrugAttachmentEntity", SStorm.CTH.DAL.EntityType.CTHDrugAttachmentEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDrugAttachmentEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDrugDayEntity objects.</summary>
	[Serializable]
	public partial class CTHDrugDayEntityFactory : EntityFactoryBase2<CTHDrugDayEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDrugDayEntityFactory() : base("CTHDrugDayEntity", SStorm.CTH.DAL.EntityType.CTHDrugDayEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDrugDayEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHDrugSymptomEntity objects.</summary>
	[Serializable]
	public partial class CTHDrugSymptomEntityFactory : EntityFactoryBase2<CTHDrugSymptomEntity> 
	{
		/// <summary>CTor</summary>
		public CTHDrugSymptomEntityFactory() : base("CTHDrugSymptomEntity", SStorm.CTH.DAL.EntityType.CTHDrugSymptomEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHDrugSymptomEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHImagingEntity objects.</summary>
	[Serializable]
	public partial class CTHImagingEntityFactory : EntityFactoryBase2<CTHImagingEntity> 
	{
		/// <summary>CTor</summary>
		public CTHImagingEntityFactory() : base("CTHImagingEntity", SStorm.CTH.DAL.EntityType.CTHImagingEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHImagingEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHKimoSurveyEntity objects.</summary>
	[Serializable]
	public partial class CTHKimoSurveyEntityFactory : EntityFactoryBase2<CTHKimoSurveyEntity> 
	{
		/// <summary>CTor</summary>
		public CTHKimoSurveyEntityFactory() : base("CTHKimoSurveyEntity", SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHKimoSurveyEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHLabEntity objects.</summary>
	[Serializable]
	public partial class CTHLabEntityFactory : EntityFactoryBase2<CTHLabEntity> 
	{
		/// <summary>CTor</summary>
		public CTHLabEntityFactory() : base("CTHLabEntity", SStorm.CTH.DAL.EntityType.CTHLabEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHLabEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHLabDetailEntity objects.</summary>
	[Serializable]
	public partial class CTHLabDetailEntityFactory : EntityFactoryBase2<CTHLabDetailEntity> 
	{
		/// <summary>CTor</summary>
		public CTHLabDetailEntityFactory() : base("CTHLabDetailEntity", SStorm.CTH.DAL.EntityType.CTHLabDetailEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHLabDetailEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHLabDetailConditionEntity objects.</summary>
	[Serializable]
	public partial class CTHLabDetailConditionEntityFactory : EntityFactoryBase2<CTHLabDetailConditionEntity> 
	{
		/// <summary>CTor</summary>
		public CTHLabDetailConditionEntityFactory() : base("CTHLabDetailConditionEntity", SStorm.CTH.DAL.EntityType.CTHLabDetailConditionEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHLabDetailConditionEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHLabGroupEntity objects.</summary>
	[Serializable]
	public partial class CTHLabGroupEntityFactory : EntityFactoryBase2<CTHLabGroupEntity> 
	{
		/// <summary>CTor</summary>
		public CTHLabGroupEntityFactory() : base("CTHLabGroupEntity", SStorm.CTH.DAL.EntityType.CTHLabGroupEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHLabGroupEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHLabGroupLabEntity objects.</summary>
	[Serializable]
	public partial class CTHLabGroupLabEntityFactory : EntityFactoryBase2<CTHLabGroupLabEntity> 
	{
		/// <summary>CTor</summary>
		public CTHLabGroupLabEntityFactory() : base("CTHLabGroupLabEntity", SStorm.CTH.DAL.EntityType.CTHLabGroupLabEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHLabGroupLabEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHMainCancerImageEntity objects.</summary>
	[Serializable]
	public partial class CTHMainCancerImageEntityFactory : EntityFactoryBase2<CTHMainCancerImageEntity> 
	{
		/// <summary>CTor</summary>
		public CTHMainCancerImageEntityFactory() : base("CTHMainCancerImageEntity", SStorm.CTH.DAL.EntityType.CTHMainCancerImageEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHMainCancerImageEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHNotificationEntity objects.</summary>
	[Serializable]
	public partial class CTHNotificationEntityFactory : EntityFactoryBase2<CTHNotificationEntity> 
	{
		/// <summary>CTor</summary>
		public CTHNotificationEntityFactory() : base("CTHNotificationEntity", SStorm.CTH.DAL.EntityType.CTHNotificationEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHNotificationEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHOperatorEntity objects.</summary>
	[Serializable]
	public partial class CTHOperatorEntityFactory : EntityFactoryBase2<CTHOperatorEntity> 
	{
		/// <summary>CTor</summary>
		public CTHOperatorEntityFactory() : base("CTHOperatorEntity", SStorm.CTH.DAL.EntityType.CTHOperatorEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHOperatorEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPathologyReportTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHPathologyReportTypeEntityFactory : EntityFactoryBase2<CTHPathologyReportTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPathologyReportTypeEntityFactory() : base("CTHPathologyReportTypeEntity", SStorm.CTH.DAL.EntityType.CTHPathologyReportTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPathologyReportTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientEntityFactory : EntityFactoryBase2<CTHPatientEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientEntityFactory() : base("CTHPatientEntity", SStorm.CTH.DAL.EntityType.CTHPatientEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientAssessmentEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientAssessmentEntityFactory : EntityFactoryBase2<CTHPatientAssessmentEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientAssessmentEntityFactory() : base("CTHPatientAssessmentEntity", SStorm.CTH.DAL.EntityType.CTHPatientAssessmentEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientAssessmentEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientClinicalDataEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientClinicalDataEntityFactory : EntityFactoryBase2<CTHPatientClinicalDataEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientClinicalDataEntityFactory() : base("CTHPatientClinicalDataEntity", SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientClinicalDataEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientDrugEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientDrugEntityFactory : EntityFactoryBase2<CTHPatientDrugEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientDrugEntityFactory() : base("CTHPatientDrugEntity", SStorm.CTH.DAL.EntityType.CTHPatientDrugEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientDrugEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientImagingEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientImagingEntityFactory : EntityFactoryBase2<CTHPatientImagingEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientImagingEntityFactory() : base("CTHPatientImagingEntity", SStorm.CTH.DAL.EntityType.CTHPatientImagingEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientImagingEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientIntialLabEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientIntialLabEntityFactory : EntityFactoryBase2<CTHPatientIntialLabEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientIntialLabEntityFactory() : base("CTHPatientIntialLabEntity", SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientIntialLabEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientPathologyReportEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientPathologyReportEntityFactory : EntityFactoryBase2<CTHPatientPathologyReportEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientPathologyReportEntityFactory() : base("CTHPatientPathologyReportEntity", SStorm.CTH.DAL.EntityType.CTHPatientPathologyReportEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientPathologyReportEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientSurgeryEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientSurgeryEntityFactory : EntityFactoryBase2<CTHPatientSurgeryEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientSurgeryEntityFactory() : base("CTHPatientSurgeryEntity", SStorm.CTH.DAL.EntityType.CTHPatientSurgeryEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientSurgeryEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPatientSymptomEntity objects.</summary>
	[Serializable]
	public partial class CTHPatientSymptomEntityFactory : EntityFactoryBase2<CTHPatientSymptomEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPatientSymptomEntityFactory() : base("CTHPatientSymptomEntity", SStorm.CTH.DAL.EntityType.CTHPatientSymptomEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPatientSymptomEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPaymentTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHPaymentTypeEntityFactory : EntityFactoryBase2<CTHPaymentTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPaymentTypeEntityFactory() : base("CTHPaymentTypeEntity", SStorm.CTH.DAL.EntityType.CTHPaymentTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPaymentTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPermissionEntity objects.</summary>
	[Serializable]
	public partial class CTHPermissionEntityFactory : EntityFactoryBase2<CTHPermissionEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPermissionEntityFactory() : base("CTHPermissionEntity", SStorm.CTH.DAL.EntityType.CTHPermissionEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPermissionEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPermissionGroupEntity objects.</summary>
	[Serializable]
	public partial class CTHPermissionGroupEntityFactory : EntityFactoryBase2<CTHPermissionGroupEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPermissionGroupEntityFactory() : base("CTHPermissionGroupEntity", SStorm.CTH.DAL.EntityType.CTHPermissionGroupEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPermissionGroupEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHPreMedicationEntity objects.</summary>
	[Serializable]
	public partial class CTHPreMedicationEntityFactory : EntityFactoryBase2<CTHPreMedicationEntity> 
	{
		/// <summary>CTor</summary>
		public CTHPreMedicationEntityFactory() : base("CTHPreMedicationEntity", SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHPreMedicationEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHProtocolCycleEntity objects.</summary>
	[Serializable]
	public partial class CTHProtocolCycleEntityFactory : EntityFactoryBase2<CTHProtocolCycleEntity> 
	{
		/// <summary>CTor</summary>
		public CTHProtocolCycleEntityFactory() : base("CTHProtocolCycleEntity", SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHProtocolCycleEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHRoleEntity objects.</summary>
	[Serializable]
	public partial class CTHRoleEntityFactory : EntityFactoryBase2<CTHRoleEntity> 
	{
		/// <summary>CTor</summary>
		public CTHRoleEntityFactory() : base("CTHRoleEntity", SStorm.CTH.DAL.EntityType.CTHRoleEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHRoleEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHRolePermissionEntity objects.</summary>
	[Serializable]
	public partial class CTHRolePermissionEntityFactory : EntityFactoryBase2<CTHRolePermissionEntity> 
	{
		/// <summary>CTor</summary>
		public CTHRolePermissionEntityFactory() : base("CTHRolePermissionEntity", SStorm.CTH.DAL.EntityType.CTHRolePermissionEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHRolePermissionEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSolutionEntity objects.</summary>
	[Serializable]
	public partial class CTHSolutionEntityFactory : EntityFactoryBase2<CTHSolutionEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSolutionEntityFactory() : base("CTHSolutionEntity", SStorm.CTH.DAL.EntityType.CTHSolutionEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSolutionEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSpecialCaseEntity objects.</summary>
	[Serializable]
	public partial class CTHSpecialCaseEntityFactory : EntityFactoryBase2<CTHSpecialCaseEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSpecialCaseEntityFactory() : base("CTHSpecialCaseEntity", SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSpecialCaseEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSpecialCasePartEntity objects.</summary>
	[Serializable]
	public partial class CTHSpecialCasePartEntityFactory : EntityFactoryBase2<CTHSpecialCasePartEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSpecialCasePartEntityFactory() : base("CTHSpecialCasePartEntity", SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSpecialCasePartEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHStagingEntity objects.</summary>
	[Serializable]
	public partial class CTHStagingEntityFactory : EntityFactoryBase2<CTHStagingEntity> 
	{
		/// <summary>CTor</summary>
		public CTHStagingEntityFactory() : base("CTHStagingEntity", SStorm.CTH.DAL.EntityType.CTHStagingEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHStagingEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSurgeryTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHSurgeryTypeEntityFactory : EntityFactoryBase2<CTHSurgeryTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSurgeryTypeEntityFactory() : base("CTHSurgeryTypeEntity", SStorm.CTH.DAL.EntityType.CTHSurgeryTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSurgeryTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSymptomEntity objects.</summary>
	[Serializable]
	public partial class CTHSymptomEntityFactory : EntityFactoryBase2<CTHSymptomEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSymptomEntityFactory() : base("CTHSymptomEntity", SStorm.CTH.DAL.EntityType.CTHSymptomEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSymptomEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHSymptomDrugEntity objects.</summary>
	[Serializable]
	public partial class CTHSymptomDrugEntityFactory : EntityFactoryBase2<CTHSymptomDrugEntity> 
	{
		/// <summary>CTor</summary>
		public CTHSymptomDrugEntityFactory() : base("CTHSymptomDrugEntity", SStorm.CTH.DAL.EntityType.CTHSymptomDrugEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHSymptomDrugEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHTNMStagingEntity objects.</summary>
	[Serializable]
	public partial class CTHTNMStagingEntityFactory : EntityFactoryBase2<CTHTNMStagingEntity> 
	{
		/// <summary>CTor</summary>
		public CTHTNMStagingEntityFactory() : base("CTHTNMStagingEntity", SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHTNMStagingEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHTNMStagingMatrixEntity objects.</summary>
	[Serializable]
	public partial class CTHTNMStagingMatrixEntityFactory : EntityFactoryBase2<CTHTNMStagingMatrixEntity> 
	{
		/// <summary>CTor</summary>
		public CTHTNMStagingMatrixEntityFactory() : base("CTHTNMStagingMatrixEntity", SStorm.CTH.DAL.EntityType.CTHTNMStagingMatrixEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHTNMStagingMatrixEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHTNMTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHTNMTypeEntityFactory : EntityFactoryBase2<CTHTNMTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHTNMTypeEntityFactory() : base("CTHTNMTypeEntity", SStorm.CTH.DAL.EntityType.CTHTNMTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHTNMTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHTreatmentTypeEntity objects.</summary>
	[Serializable]
	public partial class CTHTreatmentTypeEntityFactory : EntityFactoryBase2<CTHTreatmentTypeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHTreatmentTypeEntityFactory() : base("CTHTreatmentTypeEntity", SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHTreatmentTypeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHTumorGradeEntity objects.</summary>
	[Serializable]
	public partial class CTHTumorGradeEntityFactory : EntityFactoryBase2<CTHTumorGradeEntity> 
	{
		/// <summary>CTor</summary>
		public CTHTumorGradeEntityFactory() : base("CTHTumorGradeEntity", SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHTumorGradeEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHUserEntity objects.</summary>
	[Serializable]
	public partial class CTHUserEntityFactory : EntityFactoryBase2<CTHUserEntity> 
	{
		/// <summary>CTor</summary>
		public CTHUserEntityFactory() : base("CTHUserEntity", SStorm.CTH.DAL.EntityType.CTHUserEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHUserEntity(fields); }
	}

	/// <summary>Factory to create new, empty CTHUserRoleEntity objects.</summary>
	[Serializable]
	public partial class CTHUserRoleEntityFactory : EntityFactoryBase2<CTHUserRoleEntity> 
	{
		/// <summary>CTor</summary>
		public CTHUserRoleEntityFactory() : base("CTHUserRoleEntity", SStorm.CTH.DAL.EntityType.CTHUserRoleEntity, false) { }
		/// <inheritdoc/>
		protected override IEntity2 CreateImpl(IEntityFields2 fields) { return new CTHUserRoleEntity(fields); }
	}

	/// <summary>Factory to create new, empty Entity objects based on the entity type specified. Uses  entity specific factory objects</summary>
	[Serializable]
	public partial class GeneralEntityFactory
	{
		/// <summary>Creates a new, empty Entity object of the type specified</summary>
		/// <param name="entityTypeToCreate">The entity type to create.</param>
		/// <returns>A new, empty Entity object.</returns>
		public static IEntity2 Create(SStorm.CTH.DAL.EntityType entityTypeToCreate)
		{
			var factoryToUse = EntityFactoryFactory.GetFactory(entityTypeToCreate);
			IEntity2 toReturn = null;
			if(factoryToUse != null)
			{
				toReturn = factoryToUse.Create();
			}
			return toReturn;
		}		
	}
		
	/// <summary>Class which is used to obtain the entity factory based on the .NET type of the entity. </summary>
	[Serializable]
	public static class EntityFactoryFactory
	{
		private static Dictionary<Type, IEntityFactory2> _factoryPerType = new Dictionary<Type, IEntityFactory2>();

		/// <summary>Initializes the <see cref="EntityFactoryFactory"/> class.</summary>
		static EntityFactoryFactory()
		{
			foreach(int entityTypeValue in Enum.GetValues(typeof(SStorm.CTH.DAL.EntityType)))
			{
				var factory = GetFactory((SStorm.CTH.DAL.EntityType)entityTypeValue);
				_factoryPerType.Add(factory.ForEntityType ?? factory.Create().GetType(), factory);
			}
		}

		/// <summary>Gets the factory of the entity with the .NET type specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory2 GetFactory(Type typeOfEntity) { return _factoryPerType.GetValue(typeOfEntity); }

		/// <summary>Gets the factory of the entity with the SStorm.CTH.DAL.EntityType specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory2 GetFactory(SStorm.CTH.DAL.EntityType typeOfEntity)
		{
			switch(typeOfEntity)
			{
				case SStorm.CTH.DAL.EntityType.CTHCancerGradeEntity:
					return new CTHCancerGradeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity:
					return new CTHCancerHistologicEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity:
					return new CTHCancerMolecularEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCancerSideEntity:
					return new CTHCancerSideEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCancerStagingEntity:
					return new CTHCancerStagingEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity:
					return new CTHCancerTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHChemoLabEntity:
					return new CTHChemoLabEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity:
					return new CTHChemotherapyProtocolEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCycleDrugEntity:
					return new CTHCycleDrugEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHCycleLabEntity:
					return new CTHCycleLabEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDoctorEntity:
					return new CTHDoctorEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDoseUnitEntity:
					return new CTHDoseUnitEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDrugEntity:
					return new CTHDrugEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDrugAttachmentEntity:
					return new CTHDrugAttachmentEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDrugDayEntity:
					return new CTHDrugDayEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHDrugSymptomEntity:
					return new CTHDrugSymptomEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHImagingEntity:
					return new CTHImagingEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity:
					return new CTHKimoSurveyEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHLabEntity:
					return new CTHLabEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHLabDetailEntity:
					return new CTHLabDetailEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHLabDetailConditionEntity:
					return new CTHLabDetailConditionEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHLabGroupEntity:
					return new CTHLabGroupEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHLabGroupLabEntity:
					return new CTHLabGroupLabEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHMainCancerImageEntity:
					return new CTHMainCancerImageEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHNotificationEntity:
					return new CTHNotificationEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHOperatorEntity:
					return new CTHOperatorEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPathologyReportTypeEntity:
					return new CTHPathologyReportTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientEntity:
					return new CTHPatientEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientAssessmentEntity:
					return new CTHPatientAssessmentEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity:
					return new CTHPatientClinicalDataEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientDrugEntity:
					return new CTHPatientDrugEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientImagingEntity:
					return new CTHPatientImagingEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity:
					return new CTHPatientIntialLabEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientPathologyReportEntity:
					return new CTHPatientPathologyReportEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientSurgeryEntity:
					return new CTHPatientSurgeryEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPatientSymptomEntity:
					return new CTHPatientSymptomEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPaymentTypeEntity:
					return new CTHPaymentTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPermissionEntity:
					return new CTHPermissionEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPermissionGroupEntity:
					return new CTHPermissionGroupEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity:
					return new CTHPreMedicationEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity:
					return new CTHProtocolCycleEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHRoleEntity:
					return new CTHRoleEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHRolePermissionEntity:
					return new CTHRolePermissionEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSolutionEntity:
					return new CTHSolutionEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity:
					return new CTHSpecialCaseEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity:
					return new CTHSpecialCasePartEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHStagingEntity:
					return new CTHStagingEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSurgeryTypeEntity:
					return new CTHSurgeryTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSymptomEntity:
					return new CTHSymptomEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHSymptomDrugEntity:
					return new CTHSymptomDrugEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity:
					return new CTHTNMStagingEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHTNMStagingMatrixEntity:
					return new CTHTNMStagingMatrixEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHTNMTypeEntity:
					return new CTHTNMTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity:
					return new CTHTreatmentTypeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity:
					return new CTHTumorGradeEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHUserEntity:
					return new CTHUserEntityFactory();
				case SStorm.CTH.DAL.EntityType.CTHUserRoleEntity:
					return new CTHUserRoleEntityFactory();
				default:
					return null;
			}
		}
	}
		
	/// <summary>Element creator for creating project elements from somewhere else, like inside Linq providers.</summary>
	public class ElementCreator : ElementCreatorBase, IElementCreator2
	{
		/// <summary>Gets the factory of the Entity type with the SStorm.CTH.DAL.EntityType value passed in</summary>
		/// <param name="entityTypeValue">The entity type value.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory2 GetFactory(int entityTypeValue) { return (IEntityFactory2)this.GetFactoryImpl(entityTypeValue); }
		
		/// <summary>Gets the factory of the Entity type with the .NET type passed in</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory2 GetFactory(Type typeOfEntity) { return (IEntityFactory2)this.GetFactoryImpl(typeOfEntity); }

		/// <summary>Creates a new resultset fields object with the number of field slots reserved as specified</summary>
		/// <param name="numberOfFields">The number of fields.</param>
		/// <returns>ready to use resultsetfields object</returns>
		public IEntityFields2 CreateResultsetFields(int numberOfFields) { return new ResultsetFields(numberOfFields); }
		
		/// <inheritdoc/>
		public override IInheritanceInfoProvider ObtainInheritanceInfoProviderInstance() { return ModelInfoProviderSingleton.GetInstance(); }

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand) { return new DynamicRelation(leftOperand); }

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, string aliasLeftOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, aliasLeftOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (SStorm.CTH.DAL.EntityType)Enum.Parse(typeof(SStorm.CTH.DAL.EntityType), rightOperandEntityName, false), aliasRightOperand, onClause);
		}

		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(string leftOperandEntityName, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation((SStorm.CTH.DAL.EntityType)Enum.Parse(typeof(SStorm.CTH.DAL.EntityType), leftOperandEntityName, false), joinType, (SStorm.CTH.DAL.EntityType)Enum.Parse(typeof(SStorm.CTH.DAL.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <inheritdoc/>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (SStorm.CTH.DAL.EntityType)Enum.Parse(typeof(SStorm.CTH.DAL.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <inheritdoc/>
		protected override IEntityFactoryCore GetFactoryImpl(int entityTypeValue) { return EntityFactoryFactory.GetFactory((SStorm.CTH.DAL.EntityType)entityTypeValue); }

		/// <inheritdoc/>
		protected override IEntityFactoryCore GetFactoryImpl(Type typeOfEntity) { return EntityFactoryFactory.GetFactory(typeOfEntity);	}

	}
}
