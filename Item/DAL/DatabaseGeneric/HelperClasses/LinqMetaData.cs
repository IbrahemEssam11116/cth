//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Linq;
using System.Collections.Generic;
using SD.LLBLGen.Pro.LinqSupportClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SStorm.CTH.DAL.EntityClasses;
using SStorm.CTH.DAL.FactoryClasses;

namespace SStorm.CTH.DAL.Linq
{
	/// <summary>Meta-data class for the construction of Linq queries which are to be executed using LLBLGen Pro code.</summary>
	public partial class LinqMetaData: ILinqMetaData
	{
		/// <summary>CTor. Using this ctor will leave the IDataAccessAdapter object to use empty. To be able to execute the query, an IDataAccessAdapter instance
		/// is required, and has to be set on the LLBLGenProProvider2 object in the query to execute. </summary>
		public LinqMetaData() : this(null, null) { }
		
		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse) : this (adapterToUse, null) { }

		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <param name="customFunctionMappings">The custom function mappings to use. These take higher precedence than the ones in the DQE to use.</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse, FunctionMappingStore customFunctionMappings)
		{
			this.AdapterToUse = adapterToUse;
			this.CustomFunctionMappings = customFunctionMappings;
		}
	
		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <param name="typeOfEntity">the type of the entity to get the datasource for</param>
		/// <returns>the requested datasource</returns>
		public IDataSource GetQueryableForEntity(int typeOfEntity)
		{
			switch((SStorm.CTH.DAL.EntityType)typeOfEntity)
			{
				case SStorm.CTH.DAL.EntityType.CTHCancerGradeEntity:
					return this.CTHCancerGrade;
				case SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity:
					return this.CTHCancerHistologic;
				case SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity:
					return this.CTHCancerMolecular;
				case SStorm.CTH.DAL.EntityType.CTHCancerSideEntity:
					return this.CTHCancerSide;
				case SStorm.CTH.DAL.EntityType.CTHCancerStagingEntity:
					return this.CTHCancerStaging;
				case SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity:
					return this.CTHCancerType;
				case SStorm.CTH.DAL.EntityType.CTHChemoLabEntity:
					return this.CTHChemoLab;
				case SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity:
					return this.CTHChemotherapyProtocol;
				case SStorm.CTH.DAL.EntityType.CTHCycleDrugEntity:
					return this.CTHCycleDrug;
				case SStorm.CTH.DAL.EntityType.CTHCycleLabEntity:
					return this.CTHCycleLab;
				case SStorm.CTH.DAL.EntityType.CTHDoctorEntity:
					return this.CTHDoctor;
				case SStorm.CTH.DAL.EntityType.CTHDoseUnitEntity:
					return this.CTHDoseUnit;
				case SStorm.CTH.DAL.EntityType.CTHDrugEntity:
					return this.CTHDrug;
				case SStorm.CTH.DAL.EntityType.CTHDrugAttachmentEntity:
					return this.CTHDrugAttachment;
				case SStorm.CTH.DAL.EntityType.CTHDrugDayEntity:
					return this.CTHDrugDay;
				case SStorm.CTH.DAL.EntityType.CTHDrugSymptomEntity:
					return this.CTHDrugSymptom;
				case SStorm.CTH.DAL.EntityType.CTHImagingEntity:
					return this.CTHImaging;
				case SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity:
					return this.CTHKimoSurvey;
				case SStorm.CTH.DAL.EntityType.CTHLabEntity:
					return this.CTHLab;
				case SStorm.CTH.DAL.EntityType.CTHLabDetailEntity:
					return this.CTHLabDetail;
				case SStorm.CTH.DAL.EntityType.CTHLabDetailConditionEntity:
					return this.CTHLabDetailCondition;
				case SStorm.CTH.DAL.EntityType.CTHLabGroupEntity:
					return this.CTHLabGroup;
				case SStorm.CTH.DAL.EntityType.CTHLabGroupLabEntity:
					return this.CTHLabGroupLab;
				case SStorm.CTH.DAL.EntityType.CTHMainCancerImageEntity:
					return this.CTHMainCancerImage;
				case SStorm.CTH.DAL.EntityType.CTHNotificationEntity:
					return this.CTHNotification;
				case SStorm.CTH.DAL.EntityType.CTHOperatorEntity:
					return this.CTHOperator;
				case SStorm.CTH.DAL.EntityType.CTHPathologyReportTypeEntity:
					return this.CTHPathologyReportType;
				case SStorm.CTH.DAL.EntityType.CTHPatientEntity:
					return this.CTHPatient;
				case SStorm.CTH.DAL.EntityType.CTHPatientAssessmentEntity:
					return this.CTHPatientAssessment;
				case SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity:
					return this.CTHPatientClinicalData;
				case SStorm.CTH.DAL.EntityType.CTHPatientDrugEntity:
					return this.CTHPatientDrug;
				case SStorm.CTH.DAL.EntityType.CTHPatientImagingEntity:
					return this.CTHPatientImaging;
				case SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity:
					return this.CTHPatientIntialLab;
				case SStorm.CTH.DAL.EntityType.CTHPatientPathologyReportEntity:
					return this.CTHPatientPathologyReport;
				case SStorm.CTH.DAL.EntityType.CTHPatientSurgeryEntity:
					return this.CTHPatientSurgery;
				case SStorm.CTH.DAL.EntityType.CTHPatientSymptomEntity:
					return this.CTHPatientSymptom;
				case SStorm.CTH.DAL.EntityType.CTHPaymentTypeEntity:
					return this.CTHPaymentType;
				case SStorm.CTH.DAL.EntityType.CTHPermissionEntity:
					return this.CTHPermission;
				case SStorm.CTH.DAL.EntityType.CTHPermissionGroupEntity:
					return this.CTHPermissionGroup;
				case SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity:
					return this.CTHPreMedication;
				case SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity:
					return this.CTHProtocolCycle;
				case SStorm.CTH.DAL.EntityType.CTHRoleEntity:
					return this.CTHRole;
				case SStorm.CTH.DAL.EntityType.CTHRolePermissionEntity:
					return this.CTHRolePermission;
				case SStorm.CTH.DAL.EntityType.CTHSolutionEntity:
					return this.CTHSolution;
				case SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity:
					return this.CTHSpecialCase;
				case SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity:
					return this.CTHSpecialCasePart;
				case SStorm.CTH.DAL.EntityType.CTHStagingEntity:
					return this.CTHStaging;
				case SStorm.CTH.DAL.EntityType.CTHSurgeryTypeEntity:
					return this.CTHSurgeryType;
				case SStorm.CTH.DAL.EntityType.CTHSymptomEntity:
					return this.CTHSymptom;
				case SStorm.CTH.DAL.EntityType.CTHSymptomDrugEntity:
					return this.CTHSymptomDrug;
				case SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity:
					return this.CTHTNMStaging;
				case SStorm.CTH.DAL.EntityType.CTHTNMStagingMatrixEntity:
					return this.CTHTNMStagingMatrix;
				case SStorm.CTH.DAL.EntityType.CTHTNMTypeEntity:
					return this.CTHTNMType;
				case SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity:
					return this.CTHTreatmentType;
				case SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity:
					return this.CTHTumorGrade;
				case SStorm.CTH.DAL.EntityType.CTHUserEntity:
					return this.CTHUser;
				case SStorm.CTH.DAL.EntityType.CTHUserRoleEntity:
					return this.CTHUserRole;
				default:
					return null;
			}
		}

		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <typeparam name="TEntity">the type of the entity to get the datasource for</typeparam>
		/// <returns>the requested datasource</returns>
		public DataSource2<TEntity> GetQueryableForEntity<TEntity>()
				where TEntity : class
		{
			return new DataSource2<TEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse);
		}

		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerGradeEntity instances in the database.</summary>
		public DataSource2<CTHCancerGradeEntity> CTHCancerGrade {	get { return new DataSource2<CTHCancerGradeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerHistologicEntity instances in the database.</summary>
		public DataSource2<CTHCancerHistologicEntity> CTHCancerHistologic {	get { return new DataSource2<CTHCancerHistologicEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerMolecularEntity instances in the database.</summary>
		public DataSource2<CTHCancerMolecularEntity> CTHCancerMolecular {	get { return new DataSource2<CTHCancerMolecularEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerSideEntity instances in the database.</summary>
		public DataSource2<CTHCancerSideEntity> CTHCancerSide {	get { return new DataSource2<CTHCancerSideEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerStagingEntity instances in the database.</summary>
		public DataSource2<CTHCancerStagingEntity> CTHCancerStaging {	get { return new DataSource2<CTHCancerStagingEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCancerTypeEntity instances in the database.</summary>
		public DataSource2<CTHCancerTypeEntity> CTHCancerType {	get { return new DataSource2<CTHCancerTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHChemoLabEntity instances in the database.</summary>
		public DataSource2<CTHChemoLabEntity> CTHChemoLab {	get { return new DataSource2<CTHChemoLabEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHChemotherapyProtocolEntity instances in the database.</summary>
		public DataSource2<CTHChemotherapyProtocolEntity> CTHChemotherapyProtocol {	get { return new DataSource2<CTHChemotherapyProtocolEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCycleDrugEntity instances in the database.</summary>
		public DataSource2<CTHCycleDrugEntity> CTHCycleDrug {	get { return new DataSource2<CTHCycleDrugEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHCycleLabEntity instances in the database.</summary>
		public DataSource2<CTHCycleLabEntity> CTHCycleLab {	get { return new DataSource2<CTHCycleLabEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDoctorEntity instances in the database.</summary>
		public DataSource2<CTHDoctorEntity> CTHDoctor {	get { return new DataSource2<CTHDoctorEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDoseUnitEntity instances in the database.</summary>
		public DataSource2<CTHDoseUnitEntity> CTHDoseUnit {	get { return new DataSource2<CTHDoseUnitEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDrugEntity instances in the database.</summary>
		public DataSource2<CTHDrugEntity> CTHDrug {	get { return new DataSource2<CTHDrugEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDrugAttachmentEntity instances in the database.</summary>
		public DataSource2<CTHDrugAttachmentEntity> CTHDrugAttachment {	get { return new DataSource2<CTHDrugAttachmentEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDrugDayEntity instances in the database.</summary>
		public DataSource2<CTHDrugDayEntity> CTHDrugDay {	get { return new DataSource2<CTHDrugDayEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHDrugSymptomEntity instances in the database.</summary>
		public DataSource2<CTHDrugSymptomEntity> CTHDrugSymptom {	get { return new DataSource2<CTHDrugSymptomEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHImagingEntity instances in the database.</summary>
		public DataSource2<CTHImagingEntity> CTHImaging {	get { return new DataSource2<CTHImagingEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHKimoSurveyEntity instances in the database.</summary>
		public DataSource2<CTHKimoSurveyEntity> CTHKimoSurvey {	get { return new DataSource2<CTHKimoSurveyEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHLabEntity instances in the database.</summary>
		public DataSource2<CTHLabEntity> CTHLab {	get { return new DataSource2<CTHLabEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHLabDetailEntity instances in the database.</summary>
		public DataSource2<CTHLabDetailEntity> CTHLabDetail {	get { return new DataSource2<CTHLabDetailEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHLabDetailConditionEntity instances in the database.</summary>
		public DataSource2<CTHLabDetailConditionEntity> CTHLabDetailCondition {	get { return new DataSource2<CTHLabDetailConditionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHLabGroupEntity instances in the database.</summary>
		public DataSource2<CTHLabGroupEntity> CTHLabGroup {	get { return new DataSource2<CTHLabGroupEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHLabGroupLabEntity instances in the database.</summary>
		public DataSource2<CTHLabGroupLabEntity> CTHLabGroupLab {	get { return new DataSource2<CTHLabGroupLabEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHMainCancerImageEntity instances in the database.</summary>
		public DataSource2<CTHMainCancerImageEntity> CTHMainCancerImage {	get { return new DataSource2<CTHMainCancerImageEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHNotificationEntity instances in the database.</summary>
		public DataSource2<CTHNotificationEntity> CTHNotification {	get { return new DataSource2<CTHNotificationEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHOperatorEntity instances in the database.</summary>
		public DataSource2<CTHOperatorEntity> CTHOperator {	get { return new DataSource2<CTHOperatorEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPathologyReportTypeEntity instances in the database.</summary>
		public DataSource2<CTHPathologyReportTypeEntity> CTHPathologyReportType {	get { return new DataSource2<CTHPathologyReportTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientEntity instances in the database.</summary>
		public DataSource2<CTHPatientEntity> CTHPatient {	get { return new DataSource2<CTHPatientEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientAssessmentEntity instances in the database.</summary>
		public DataSource2<CTHPatientAssessmentEntity> CTHPatientAssessment {	get { return new DataSource2<CTHPatientAssessmentEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientClinicalDataEntity instances in the database.</summary>
		public DataSource2<CTHPatientClinicalDataEntity> CTHPatientClinicalData {	get { return new DataSource2<CTHPatientClinicalDataEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientDrugEntity instances in the database.</summary>
		public DataSource2<CTHPatientDrugEntity> CTHPatientDrug {	get { return new DataSource2<CTHPatientDrugEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientImagingEntity instances in the database.</summary>
		public DataSource2<CTHPatientImagingEntity> CTHPatientImaging {	get { return new DataSource2<CTHPatientImagingEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientIntialLabEntity instances in the database.</summary>
		public DataSource2<CTHPatientIntialLabEntity> CTHPatientIntialLab {	get { return new DataSource2<CTHPatientIntialLabEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientPathologyReportEntity instances in the database.</summary>
		public DataSource2<CTHPatientPathologyReportEntity> CTHPatientPathologyReport {	get { return new DataSource2<CTHPatientPathologyReportEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientSurgeryEntity instances in the database.</summary>
		public DataSource2<CTHPatientSurgeryEntity> CTHPatientSurgery {	get { return new DataSource2<CTHPatientSurgeryEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPatientSymptomEntity instances in the database.</summary>
		public DataSource2<CTHPatientSymptomEntity> CTHPatientSymptom {	get { return new DataSource2<CTHPatientSymptomEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPaymentTypeEntity instances in the database.</summary>
		public DataSource2<CTHPaymentTypeEntity> CTHPaymentType {	get { return new DataSource2<CTHPaymentTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPermissionEntity instances in the database.</summary>
		public DataSource2<CTHPermissionEntity> CTHPermission {	get { return new DataSource2<CTHPermissionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPermissionGroupEntity instances in the database.</summary>
		public DataSource2<CTHPermissionGroupEntity> CTHPermissionGroup {	get { return new DataSource2<CTHPermissionGroupEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHPreMedicationEntity instances in the database.</summary>
		public DataSource2<CTHPreMedicationEntity> CTHPreMedication {	get { return new DataSource2<CTHPreMedicationEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHProtocolCycleEntity instances in the database.</summary>
		public DataSource2<CTHProtocolCycleEntity> CTHProtocolCycle {	get { return new DataSource2<CTHProtocolCycleEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHRoleEntity instances in the database.</summary>
		public DataSource2<CTHRoleEntity> CTHRole {	get { return new DataSource2<CTHRoleEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHRolePermissionEntity instances in the database.</summary>
		public DataSource2<CTHRolePermissionEntity> CTHRolePermission {	get { return new DataSource2<CTHRolePermissionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSolutionEntity instances in the database.</summary>
		public DataSource2<CTHSolutionEntity> CTHSolution {	get { return new DataSource2<CTHSolutionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSpecialCaseEntity instances in the database.</summary>
		public DataSource2<CTHSpecialCaseEntity> CTHSpecialCase {	get { return new DataSource2<CTHSpecialCaseEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSpecialCasePartEntity instances in the database.</summary>
		public DataSource2<CTHSpecialCasePartEntity> CTHSpecialCasePart {	get { return new DataSource2<CTHSpecialCasePartEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHStagingEntity instances in the database.</summary>
		public DataSource2<CTHStagingEntity> CTHStaging {	get { return new DataSource2<CTHStagingEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSurgeryTypeEntity instances in the database.</summary>
		public DataSource2<CTHSurgeryTypeEntity> CTHSurgeryType {	get { return new DataSource2<CTHSurgeryTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSymptomEntity instances in the database.</summary>
		public DataSource2<CTHSymptomEntity> CTHSymptom {	get { return new DataSource2<CTHSymptomEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHSymptomDrugEntity instances in the database.</summary>
		public DataSource2<CTHSymptomDrugEntity> CTHSymptomDrug {	get { return new DataSource2<CTHSymptomDrugEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHTNMStagingEntity instances in the database.</summary>
		public DataSource2<CTHTNMStagingEntity> CTHTNMStaging {	get { return new DataSource2<CTHTNMStagingEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHTNMStagingMatrixEntity instances in the database.</summary>
		public DataSource2<CTHTNMStagingMatrixEntity> CTHTNMStagingMatrix {	get { return new DataSource2<CTHTNMStagingMatrixEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHTNMTypeEntity instances in the database.</summary>
		public DataSource2<CTHTNMTypeEntity> CTHTNMType {	get { return new DataSource2<CTHTNMTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHTreatmentTypeEntity instances in the database.</summary>
		public DataSource2<CTHTreatmentTypeEntity> CTHTreatmentType {	get { return new DataSource2<CTHTreatmentTypeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHTumorGradeEntity instances in the database.</summary>
		public DataSource2<CTHTumorGradeEntity> CTHTumorGrade {	get { return new DataSource2<CTHTumorGradeEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHUserEntity instances in the database.</summary>
		public DataSource2<CTHUserEntity> CTHUser {	get { return new DataSource2<CTHUserEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting CTHUserRoleEntity instances in the database.</summary>
		public DataSource2<CTHUserRoleEntity> CTHUserRole {	get { return new DataSource2<CTHUserRoleEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		


		/// <summary> Gets / sets the IDataAccessAdapter to use for the queries created with this meta data object.</summary>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data
		/// till they go out of scope.</remarks>
		public IDataAccessAdapter AdapterToUse { get; set; }
		
		/// <summary>Gets or sets the custom function mappings to use. These take higher precedence than the ones in the DQE to use</summary>
		public FunctionMappingStore CustomFunctionMappings { get; set; }
		
		/// <summary>Gets or sets the Context instance to use for entity fetches.</summary>
		public Context ContextToUse { get; set; }
	}
}