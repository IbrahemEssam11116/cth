//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHChemotherapyProtocol'.<br/><br/></summary>
	[Serializable]
	public partial class CTHChemotherapyProtocolEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHDrugEntity> _cTHDrugCollection;
		private EntityCollection<CTHKimoSurveyEntity> _cTHKimoSurveyCollection;
		private EntityCollection<CTHLabEntity> _cTHLabCollection;
		private EntityCollection<CTHProtocolCycleEntity> _cTHProtocolCycleCollection;
		private EntityCollection<CTHDoseUnitEntity> _cTHDoseUnitCollectionViaCTHDrug;
		private EntityCollection<CTHPatientClinicalDataEntity> _cTHPatientClinicalDataCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHProtocolCycleEntity> _cTHProtocolCycleCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHSolutionEntity> _cTHSolutionCollectionViaCTHDrug;
		private EntityCollection<CTHSpecialCaseEntity> _cTHSpecialCaseCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHSpecialCasePartEntity> _cTHSpecialCasePartCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHTreatmentTypeEntity> _cTHTreatmentTypeCollectionViaCTHKimoSurvey;
		private CTHCancerTypeEntity _cTHCancerTypeItem;
		private CTHPreMedicationEntity _cTHPreMedicationItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHChemotherapyProtocolEntityStaticMetaData _staticMetaData = new CTHChemotherapyProtocolEntityStaticMetaData();
		private static CTHChemotherapyProtocolRelations _relationsFactory = new CTHChemotherapyProtocolRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHCancerTypeItem</summary>
			public static readonly string CTHCancerTypeItem = "CTHCancerTypeItem";
			/// <summary>Member name CTHPreMedicationItem</summary>
			public static readonly string CTHPreMedicationItem = "CTHPreMedicationItem";
			/// <summary>Member name CTHDrugCollection</summary>
			public static readonly string CTHDrugCollection = "CTHDrugCollection";
			/// <summary>Member name CTHKimoSurveyCollection</summary>
			public static readonly string CTHKimoSurveyCollection = "CTHKimoSurveyCollection";
			/// <summary>Member name CTHLabCollection</summary>
			public static readonly string CTHLabCollection = "CTHLabCollection";
			/// <summary>Member name CTHProtocolCycleCollection</summary>
			public static readonly string CTHProtocolCycleCollection = "CTHProtocolCycleCollection";
			/// <summary>Member name CTHDoseUnitCollectionViaCTHDrug</summary>
			public static readonly string CTHDoseUnitCollectionViaCTHDrug = "CTHDoseUnitCollectionViaCTHDrug";
			/// <summary>Member name CTHPatientClinicalDataCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHPatientClinicalDataCollectionViaCTHKimoSurvey = "CTHPatientClinicalDataCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHProtocolCycleCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHProtocolCycleCollectionViaCTHKimoSurvey = "CTHProtocolCycleCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHSolutionCollectionViaCTHDrug</summary>
			public static readonly string CTHSolutionCollectionViaCTHDrug = "CTHSolutionCollectionViaCTHDrug";
			/// <summary>Member name CTHSpecialCaseCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHSpecialCaseCollectionViaCTHKimoSurvey = "CTHSpecialCaseCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHSpecialCasePartCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHSpecialCasePartCollectionViaCTHKimoSurvey = "CTHSpecialCasePartCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHTreatmentTypeCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHTreatmentTypeCollectionViaCTHKimoSurvey = "CTHTreatmentTypeCollectionViaCTHKimoSurvey";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHChemotherapyProtocolEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHChemotherapyProtocolEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHChemotherapyProtocolEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity, typeof(CTHChemotherapyProtocolEntity), typeof(CTHChemotherapyProtocolEntityFactory), false);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHDrugEntity>>("CTHDrugCollection", a => a._cTHDrugCollection, (a, b) => a._cTHDrugCollection = b, a => a.CTHDrugCollection, () => new CTHChemotherapyProtocolRelations().CTHDrugEntityUsingProtocolID, typeof(CTHDrugEntity), (int)SStorm.CTH.DAL.EntityType.CTHDrugEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHKimoSurveyEntity>>("CTHKimoSurveyCollection", a => a._cTHKimoSurveyCollection, (a, b) => a._cTHKimoSurveyCollection = b, a => a.CTHKimoSurveyCollection, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, typeof(CTHKimoSurveyEntity), (int)SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHLabEntity>>("CTHLabCollection", a => a._cTHLabCollection, (a, b) => a._cTHLabCollection = b, a => a.CTHLabCollection, () => new CTHChemotherapyProtocolRelations().CTHLabEntityUsingProtocolID, typeof(CTHLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHProtocolCycleEntity>>("CTHProtocolCycleCollection", a => a._cTHProtocolCycleCollection, (a, b) => a._cTHProtocolCycleCollection = b, a => a.CTHProtocolCycleCollection, () => new CTHChemotherapyProtocolRelations().CTHProtocolCycleEntityUsingProtocolID, typeof(CTHProtocolCycleEntity), (int)SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, CTHCancerTypeEntity>("CTHCancerTypeItem", "CTHChemotherapyProtocolCollection", (a, b) => a._cTHCancerTypeItem = b, a => a._cTHCancerTypeItem, (a, b) => a.CTHCancerTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHChemotherapyProtocolRelations.CTHCancerTypeEntityUsingCancerTypeIDStatic, ()=>new CTHChemotherapyProtocolRelations().CTHCancerTypeEntityUsingCancerTypeID, null, new int[] { (int)CTHChemotherapyProtocolFieldIndex.CancerTypeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, CTHPreMedicationEntity>("CTHPreMedicationItem", "CTHChemotherapyProtocolCollection", (a, b) => a._cTHPreMedicationItem = b, a => a._cTHPreMedicationItem, (a, b) => a.CTHPreMedicationItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHChemotherapyProtocolRelations.CTHPreMedicationEntityUsingPremedicationIDStatic, ()=>new CTHChemotherapyProtocolRelations().CTHPreMedicationEntityUsingPremedicationID, null, new int[] { (int)CTHChemotherapyProtocolFieldIndex.PremedicationID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHDoseUnitEntity>>("CTHDoseUnitCollectionViaCTHDrug", a => a._cTHDoseUnitCollectionViaCTHDrug, (a, b) => a._cTHDoseUnitCollectionViaCTHDrug = b, a => a.CTHDoseUnitCollectionViaCTHDrug, () => new CTHChemotherapyProtocolRelations().CTHDrugEntityUsingProtocolID, () => new CTHDrugRelations().CTHDoseUnitEntityUsingDoseUnitID, "CTHChemotherapyProtocolEntity__", "CTHDrug_", typeof(CTHDoseUnitEntity), (int)SStorm.CTH.DAL.EntityType.CTHDoseUnitEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHPatientClinicalDataEntity>>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", a => a._cTHPatientClinicalDataCollectionViaCTHKimoSurvey, (a, b) => a._cTHPatientClinicalDataCollectionViaCTHKimoSurvey = b, a => a.CTHPatientClinicalDataCollectionViaCTHKimoSurvey, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, () => new CTHKimoSurveyRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID, "CTHChemotherapyProtocolEntity__", "CTHKimoSurvey_", typeof(CTHPatientClinicalDataEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHProtocolCycleEntity>>("CTHProtocolCycleCollectionViaCTHKimoSurvey", a => a._cTHProtocolCycleCollectionViaCTHKimoSurvey, (a, b) => a._cTHProtocolCycleCollectionViaCTHKimoSurvey = b, a => a.CTHProtocolCycleCollectionViaCTHKimoSurvey, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, () => new CTHKimoSurveyRelations().CTHProtocolCycleEntityUsingCycleID, "CTHChemotherapyProtocolEntity__", "CTHKimoSurvey_", typeof(CTHProtocolCycleEntity), (int)SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHSolutionEntity>>("CTHSolutionCollectionViaCTHDrug", a => a._cTHSolutionCollectionViaCTHDrug, (a, b) => a._cTHSolutionCollectionViaCTHDrug = b, a => a.CTHSolutionCollectionViaCTHDrug, () => new CTHChemotherapyProtocolRelations().CTHDrugEntityUsingProtocolID, () => new CTHDrugRelations().CTHSolutionEntityUsingSolutionID, "CTHChemotherapyProtocolEntity__", "CTHDrug_", typeof(CTHSolutionEntity), (int)SStorm.CTH.DAL.EntityType.CTHSolutionEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHSpecialCaseEntity>>("CTHSpecialCaseCollectionViaCTHKimoSurvey", a => a._cTHSpecialCaseCollectionViaCTHKimoSurvey, (a, b) => a._cTHSpecialCaseCollectionViaCTHKimoSurvey = b, a => a.CTHSpecialCaseCollectionViaCTHKimoSurvey, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, () => new CTHKimoSurveyRelations().CTHSpecialCaseEntityUsingSpecialCaseID, "CTHChemotherapyProtocolEntity__", "CTHKimoSurvey_", typeof(CTHSpecialCaseEntity), (int)SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHSpecialCasePartEntity>>("CTHSpecialCasePartCollectionViaCTHKimoSurvey", a => a._cTHSpecialCasePartCollectionViaCTHKimoSurvey, (a, b) => a._cTHSpecialCasePartCollectionViaCTHKimoSurvey = b, a => a.CTHSpecialCasePartCollectionViaCTHKimoSurvey, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, () => new CTHKimoSurveyRelations().CTHSpecialCasePartEntityUsingSpecialCasePartID, "CTHChemotherapyProtocolEntity__", "CTHKimoSurvey_", typeof(CTHSpecialCasePartEntity), (int)SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity);
				AddNavigatorMetaData<CTHChemotherapyProtocolEntity, EntityCollection<CTHTreatmentTypeEntity>>("CTHTreatmentTypeCollectionViaCTHKimoSurvey", a => a._cTHTreatmentTypeCollectionViaCTHKimoSurvey, (a, b) => a._cTHTreatmentTypeCollectionViaCTHKimoSurvey = b, a => a.CTHTreatmentTypeCollectionViaCTHKimoSurvey, () => new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID, () => new CTHKimoSurveyRelations().CTHTreatmentTypeEntityUsingTreatementTypeID, "CTHChemotherapyProtocolEntity__", "CTHKimoSurvey_", typeof(CTHTreatmentTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHChemotherapyProtocolEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHChemotherapyProtocolEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHChemotherapyProtocolEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHChemotherapyProtocolEntity</param>
		public CTHChemotherapyProtocolEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHChemotherapyProtocol which data should be fetched into this CTHChemotherapyProtocol object</param>
		public CTHChemotherapyProtocolEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHChemotherapyProtocol which data should be fetched into this CTHChemotherapyProtocol object</param>
		/// <param name="validator">The custom validator object for this CTHChemotherapyProtocolEntity</param>
		public CTHChemotherapyProtocolEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHChemotherapyProtocolEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHDrug' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHDrugCollection() { return CreateRelationInfoForNavigator("CTHDrugCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHKimoSurvey' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHKimoSurveyCollection() { return CreateRelationInfoForNavigator("CTHKimoSurveyCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabCollection() { return CreateRelationInfoForNavigator("CTHLabCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHProtocolCycle' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHProtocolCycleCollection() { return CreateRelationInfoForNavigator("CTHProtocolCycleCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHDoseUnit' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHDoseUnitCollectionViaCTHDrug() { return CreateRelationInfoForNavigator("CTHDoseUnitCollectionViaCTHDrug"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHProtocolCycle' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHProtocolCycleCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHProtocolCycleCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSolution' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSolutionCollectionViaCTHDrug() { return CreateRelationInfoForNavigator("CTHSolutionCollectionViaCTHDrug"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSpecialCase' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCaseCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHSpecialCaseCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSpecialCasePart' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCasePartCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHSpecialCasePartCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTreatmentType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTreatmentTypeCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHTreatmentTypeCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeItem() { return CreateRelationInfoForNavigator("CTHCancerTypeItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHPreMedication' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPreMedicationItem() { return CreateRelationInfoForNavigator("CTHPreMedicationItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHChemotherapyProtocolEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHChemotherapyProtocolRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHDrug' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHDrugCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHDrugCollection", CommonEntityBase.CreateEntityCollection<CTHDrugEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHKimoSurvey' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHKimoSurveyCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHKimoSurveyCollection", CommonEntityBase.CreateEntityCollection<CTHKimoSurveyEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHLabCollection", CommonEntityBase.CreateEntityCollection<CTHLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHProtocolCycle' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHProtocolCycleCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHProtocolCycleCollection", CommonEntityBase.CreateEntityCollection<CTHProtocolCycleEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHDoseUnit' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHDoseUnitCollectionViaCTHDrug { get { return _staticMetaData.GetPrefetchPathElement("CTHDoseUnitCollectionViaCTHDrug", CommonEntityBase.CreateEntityCollection<CTHDoseUnitEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHProtocolCycle' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHProtocolCycleCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHProtocolCycleCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHProtocolCycleEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSolution' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSolutionCollectionViaCTHDrug { get { return _staticMetaData.GetPrefetchPathElement("CTHSolutionCollectionViaCTHDrug", CommonEntityBase.CreateEntityCollection<CTHSolutionEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCase' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCaseCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCaseCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHSpecialCaseEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCasePart' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCasePartCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCasePartCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHSpecialCasePartEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTreatmentType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTreatmentTypeCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHTreatmentTypeCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHTreatmentTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeItem", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPreMedication' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPreMedicationItem { get { return _staticMetaData.GetPrefetchPathElement("CTHPreMedicationItem", CommonEntityBase.CreateEntityCollection<CTHPreMedicationEntity>()); } }

		/// <summary>The AntimicrobialDrug property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."AntimicrobialDrug".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AntimicrobialDrug
		{
			get { return (System.String)GetValue((int)CTHChemotherapyProtocolFieldIndex.AntimicrobialDrug, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.AntimicrobialDrug, value); }
		}

		/// <summary>The ArProtocolName property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."ArProtocolName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArProtocolName
		{
			get { return (System.String)GetValue((int)CTHChemotherapyProtocolFieldIndex.ArProtocolName, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.ArProtocolName, value); }
		}

		/// <summary>The CancerTypeID property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."CancerTypeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerTypeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHChemotherapyProtocolFieldIndex.CancerTypeID, false); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.CancerTypeID, value); }
		}

		/// <summary>The Days property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."Days".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> Days
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHChemotherapyProtocolFieldIndex.Days, false); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.Days, value); }
		}

		/// <summary>The EmetodenicRiskID property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."EmetodenicRiskID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> EmetodenicRiskID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHChemotherapyProtocolFieldIndex.EmetodenicRiskID, false); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.EmetodenicRiskID, value); }
		}

		/// <summary>The GrowthFactorDrug property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."GrowthFactorDrug".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String GrowthFactorDrug
		{
			get { return (System.String)GetValue((int)CTHChemotherapyProtocolFieldIndex.GrowthFactorDrug, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.GrowthFactorDrug, value); }
		}

		/// <summary>The ID property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHChemotherapyProtocolFieldIndex.ID, true); }
			set { SetValue((int)CTHChemotherapyProtocolFieldIndex.ID, value); }		}

		/// <summary>The IsAntimicrobial property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."IsAntimicrobial".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsAntimicrobial
		{
			get { return (System.Boolean)GetValue((int)CTHChemotherapyProtocolFieldIndex.IsAntimicrobial, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.IsAntimicrobial, value); }
		}

		/// <summary>The IsGrowthFactor property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."IsGrowthFactor".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsGrowthFactor
		{
			get { return (System.Boolean)GetValue((int)CTHChemotherapyProtocolFieldIndex.IsGrowthFactor, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.IsGrowthFactor, value); }
		}

		/// <summary>The PremedicationID property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."PremedicationID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> PremedicationID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHChemotherapyProtocolFieldIndex.PremedicationID, false); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.PremedicationID, value); }
		}

		/// <summary>The ProtocolName property of the Entity CTHChemotherapyProtocol<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHChemotherapyProtocol"."ProtocolName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ProtocolName
		{
			get { return (System.String)GetValue((int)CTHChemotherapyProtocolFieldIndex.ProtocolName, true); }
			set	{ SetValue((int)CTHChemotherapyProtocolFieldIndex.ProtocolName, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHDrugEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHDrugEntity))]
		public virtual EntityCollection<CTHDrugEntity> CTHDrugCollection { get { return GetOrCreateEntityCollection<CTHDrugEntity, CTHDrugEntityFactory>("CTHChemotherapyProtocolItem", true, false, ref _cTHDrugCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHKimoSurveyEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHKimoSurveyEntity))]
		public virtual EntityCollection<CTHKimoSurveyEntity> CTHKimoSurveyCollection { get { return GetOrCreateEntityCollection<CTHKimoSurveyEntity, CTHKimoSurveyEntityFactory>("CTHChemotherapyProtocolItem", true, false, ref _cTHKimoSurveyCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabEntity))]
		public virtual EntityCollection<CTHLabEntity> CTHLabCollection { get { return GetOrCreateEntityCollection<CTHLabEntity, CTHLabEntityFactory>("CTHChemotherapyProtocolItem", true, false, ref _cTHLabCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHProtocolCycleEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHProtocolCycleEntity))]
		public virtual EntityCollection<CTHProtocolCycleEntity> CTHProtocolCycleCollection { get { return GetOrCreateEntityCollection<CTHProtocolCycleEntity, CTHProtocolCycleEntityFactory>("CTHChemotherapyProtocolItem", true, false, ref _cTHProtocolCycleCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHDoseUnitEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHDoseUnitEntity))]
		public virtual EntityCollection<CTHDoseUnitEntity> CTHDoseUnitCollectionViaCTHDrug { get { return GetOrCreateEntityCollection<CTHDoseUnitEntity, CTHDoseUnitEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHDrug", false, true, ref _cTHDoseUnitCollectionViaCTHDrug); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientClinicalDataEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientClinicalDataEntity))]
		public virtual EntityCollection<CTHPatientClinicalDataEntity> CTHPatientClinicalDataCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHPatientClinicalDataEntity, CTHPatientClinicalDataEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", false, true, ref _cTHPatientClinicalDataCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHProtocolCycleEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHProtocolCycleEntity))]
		public virtual EntityCollection<CTHProtocolCycleEntity> CTHProtocolCycleCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHProtocolCycleEntity, CTHProtocolCycleEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", false, true, ref _cTHProtocolCycleCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSolutionEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSolutionEntity))]
		public virtual EntityCollection<CTHSolutionEntity> CTHSolutionCollectionViaCTHDrug { get { return GetOrCreateEntityCollection<CTHSolutionEntity, CTHSolutionEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHDrug", false, true, ref _cTHSolutionCollectionViaCTHDrug); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSpecialCaseEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSpecialCaseEntity))]
		public virtual EntityCollection<CTHSpecialCaseEntity> CTHSpecialCaseCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHSpecialCaseEntity, CTHSpecialCaseEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", false, true, ref _cTHSpecialCaseCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSpecialCasePartEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSpecialCasePartEntity))]
		public virtual EntityCollection<CTHSpecialCasePartEntity> CTHSpecialCasePartCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHSpecialCasePartEntity, CTHSpecialCasePartEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", false, true, ref _cTHSpecialCasePartCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTreatmentTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTreatmentTypeEntity))]
		public virtual EntityCollection<CTHTreatmentTypeEntity> CTHTreatmentTypeCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHTreatmentTypeEntity, CTHTreatmentTypeEntityFactory>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", false, true, ref _cTHTreatmentTypeCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets / sets related entity of type 'CTHCancerTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerTypeEntity CTHCancerTypeItem
		{
			get { return _cTHCancerTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerTypeItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHPreMedicationEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHPreMedicationEntity CTHPreMedicationItem
		{
			get { return _cTHPreMedicationItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHPreMedicationItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHChemotherapyProtocolFieldIndex
	{
		///<summary>AntimicrobialDrug. </summary>
		AntimicrobialDrug,
		///<summary>ArProtocolName. </summary>
		ArProtocolName,
		///<summary>CancerTypeID. </summary>
		CancerTypeID,
		///<summary>Days. </summary>
		Days,
		///<summary>EmetodenicRiskID. </summary>
		EmetodenicRiskID,
		///<summary>GrowthFactorDrug. </summary>
		GrowthFactorDrug,
		///<summary>ID. </summary>
		ID,
		///<summary>IsAntimicrobial. </summary>
		IsAntimicrobial,
		///<summary>IsGrowthFactor. </summary>
		IsGrowthFactor,
		///<summary>PremedicationID. </summary>
		PremedicationID,
		///<summary>ProtocolName. </summary>
		ProtocolName,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHChemotherapyProtocol. </summary>
	public partial class CTHChemotherapyProtocolRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHDrugEntity over the 1:n relation they have, using the relation between the fields: CTHChemotherapyProtocol.ID - CTHDrug.ProtocolID</summary>
		public virtual IEntityRelation CTHDrugEntityUsingProtocolID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHDrugCollection", true, new[] { CTHChemotherapyProtocolFields.ID, CTHDrugFields.ProtocolID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHKimoSurveyEntity over the 1:n relation they have, using the relation between the fields: CTHChemotherapyProtocol.ID - CTHKimoSurvey.ProtocolID</summary>
		public virtual IEntityRelation CTHKimoSurveyEntityUsingProtocolID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHKimoSurveyCollection", true, new[] { CTHChemotherapyProtocolFields.ID, CTHKimoSurveyFields.ProtocolID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHLabEntity over the 1:n relation they have, using the relation between the fields: CTHChemotherapyProtocol.ID - CTHLab.ProtocolID</summary>
		public virtual IEntityRelation CTHLabEntityUsingProtocolID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHLabCollection", true, new[] { CTHChemotherapyProtocolFields.ID, CTHLabFields.ProtocolID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHProtocolCycleEntity over the 1:n relation they have, using the relation between the fields: CTHChemotherapyProtocol.ID - CTHProtocolCycle.ProtocolID</summary>
		public virtual IEntityRelation CTHProtocolCycleEntityUsingProtocolID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHProtocolCycleCollection", true, new[] { CTHChemotherapyProtocolFields.ID, CTHProtocolCycleFields.ProtocolID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHCancerTypeEntity over the m:1 relation they have, using the relation between the fields: CTHChemotherapyProtocol.CancerTypeID - CTHCancerType.ID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingCancerTypeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerTypeItem", false, new[] { CTHCancerTypeFields.ID, CTHChemotherapyProtocolFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHChemotherapyProtocolEntity and CTHPreMedicationEntity over the m:1 relation they have, using the relation between the fields: CTHChemotherapyProtocol.PremedicationID - CTHPreMedication.ID</summary>
		public virtual IEntityRelation CTHPreMedicationEntityUsingPremedicationID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHPreMedicationItem", false, new[] { CTHPreMedicationFields.ID, CTHChemotherapyProtocolFields.PremedicationID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHChemotherapyProtocolRelations
	{
		internal static readonly IEntityRelation CTHDrugEntityUsingProtocolIDStatic = new CTHChemotherapyProtocolRelations().CTHDrugEntityUsingProtocolID;
		internal static readonly IEntityRelation CTHKimoSurveyEntityUsingProtocolIDStatic = new CTHChemotherapyProtocolRelations().CTHKimoSurveyEntityUsingProtocolID;
		internal static readonly IEntityRelation CTHLabEntityUsingProtocolIDStatic = new CTHChemotherapyProtocolRelations().CTHLabEntityUsingProtocolID;
		internal static readonly IEntityRelation CTHProtocolCycleEntityUsingProtocolIDStatic = new CTHChemotherapyProtocolRelations().CTHProtocolCycleEntityUsingProtocolID;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingCancerTypeIDStatic = new CTHChemotherapyProtocolRelations().CTHCancerTypeEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHPreMedicationEntityUsingPremedicationIDStatic = new CTHChemotherapyProtocolRelations().CTHPreMedicationEntityUsingPremedicationID;

		/// <summary>CTor</summary>
		static StaticCTHChemotherapyProtocolRelations() { }
	}
}
