//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHOperator'.<br/><br/></summary>
	[Serializable]
	public partial class CTHOperatorEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHLabDetailConditionEntity> _cTHLabDetailConditionCollection;
		private EntityCollection<CTHLabDetailEntity> _cTHLabDetailCollectionViaCTHLabDetailCondition;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHOperatorEntityStaticMetaData _staticMetaData = new CTHOperatorEntityStaticMetaData();
		private static CTHOperatorRelations _relationsFactory = new CTHOperatorRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHLabDetailConditionCollection</summary>
			public static readonly string CTHLabDetailConditionCollection = "CTHLabDetailConditionCollection";
			/// <summary>Member name CTHLabDetailCollectionViaCTHLabDetailCondition</summary>
			public static readonly string CTHLabDetailCollectionViaCTHLabDetailCondition = "CTHLabDetailCollectionViaCTHLabDetailCondition";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHOperatorEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHOperatorEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHOperatorEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHOperatorEntity, typeof(CTHOperatorEntity), typeof(CTHOperatorEntityFactory), false);
				AddNavigatorMetaData<CTHOperatorEntity, EntityCollection<CTHLabDetailConditionEntity>>("CTHLabDetailConditionCollection", a => a._cTHLabDetailConditionCollection, (a, b) => a._cTHLabDetailConditionCollection = b, a => a.CTHLabDetailConditionCollection, () => new CTHOperatorRelations().CTHLabDetailConditionEntityUsingOpertorID, typeof(CTHLabDetailConditionEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabDetailConditionEntity);
				AddNavigatorMetaData<CTHOperatorEntity, EntityCollection<CTHLabDetailEntity>>("CTHLabDetailCollectionViaCTHLabDetailCondition", a => a._cTHLabDetailCollectionViaCTHLabDetailCondition, (a, b) => a._cTHLabDetailCollectionViaCTHLabDetailCondition = b, a => a.CTHLabDetailCollectionViaCTHLabDetailCondition, () => new CTHOperatorRelations().CTHLabDetailConditionEntityUsingOpertorID, () => new CTHLabDetailConditionRelations().CTHLabDetailEntityUsingLabDetailID, "CTHOperatorEntity__", "CTHLabDetailCondition_", typeof(CTHLabDetailEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabDetailEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHOperatorEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHOperatorEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHOperatorEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHOperatorEntity</param>
		public CTHOperatorEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHOperator which data should be fetched into this CTHOperator object</param>
		public CTHOperatorEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHOperator which data should be fetched into this CTHOperator object</param>
		/// <param name="validator">The custom validator object for this CTHOperatorEntity</param>
		public CTHOperatorEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHOperatorEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabDetailCondition' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabDetailConditionCollection() { return CreateRelationInfoForNavigator("CTHLabDetailConditionCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabDetailCollectionViaCTHLabDetailCondition() { return CreateRelationInfoForNavigator("CTHLabDetailCollectionViaCTHLabDetailCondition"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHOperatorEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHOperatorRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabDetailCondition' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabDetailConditionCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHLabDetailConditionCollection", CommonEntityBase.CreateEntityCollection<CTHLabDetailConditionEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabDetailCollectionViaCTHLabDetailCondition { get { return _staticMetaData.GetPrefetchPathElement("CTHLabDetailCollectionViaCTHLabDetailCondition", CommonEntityBase.CreateEntityCollection<CTHLabDetailEntity>()); } }

		/// <summary>The ArOperatorName property of the Entity CTHOperator<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHOperator"."ArOperatorName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArOperatorName
		{
			get { return (System.String)GetValue((int)CTHOperatorFieldIndex.ArOperatorName, true); }
			set	{ SetValue((int)CTHOperatorFieldIndex.ArOperatorName, value); }
		}

		/// <summary>The ID property of the Entity CTHOperator<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHOperator"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHOperatorFieldIndex.ID, true); }
			set	{ SetValue((int)CTHOperatorFieldIndex.ID, value); }
		}

		/// <summary>The OpertorIcon property of the Entity CTHOperator<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHOperator"."OpertorIcon".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String OpertorIcon
		{
			get { return (System.String)GetValue((int)CTHOperatorFieldIndex.OpertorIcon, true); }
			set	{ SetValue((int)CTHOperatorFieldIndex.OpertorIcon, value); }
		}

		/// <summary>The OpertorName property of the Entity CTHOperator<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHOperator"."OpertorName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String OpertorName
		{
			get { return (System.String)GetValue((int)CTHOperatorFieldIndex.OpertorName, true); }
			set	{ SetValue((int)CTHOperatorFieldIndex.OpertorName, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabDetailConditionEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabDetailConditionEntity))]
		public virtual EntityCollection<CTHLabDetailConditionEntity> CTHLabDetailConditionCollection { get { return GetOrCreateEntityCollection<CTHLabDetailConditionEntity, CTHLabDetailConditionEntityFactory>("CTHOperatorItem", true, false, ref _cTHLabDetailConditionCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabDetailEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabDetailEntity))]
		public virtual EntityCollection<CTHLabDetailEntity> CTHLabDetailCollectionViaCTHLabDetailCondition { get { return GetOrCreateEntityCollection<CTHLabDetailEntity, CTHLabDetailEntityFactory>("CTHOperatorCollectionViaCTHLabDetailCondition", false, true, ref _cTHLabDetailCollectionViaCTHLabDetailCondition); } }
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHOperatorFieldIndex
	{
		///<summary>ArOperatorName. </summary>
		ArOperatorName,
		///<summary>ID. </summary>
		ID,
		///<summary>OpertorIcon. </summary>
		OpertorIcon,
		///<summary>OpertorName. </summary>
		OpertorName,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHOperator. </summary>
	public partial class CTHOperatorRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHOperatorEntity and CTHLabDetailConditionEntity over the 1:n relation they have, using the relation between the fields: CTHOperator.ID - CTHLabDetailCondition.OpertorID</summary>
		public virtual IEntityRelation CTHLabDetailConditionEntityUsingOpertorID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHLabDetailConditionCollection", true, new[] { CTHOperatorFields.ID, CTHLabDetailConditionFields.OpertorID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHOperatorRelations
	{
		internal static readonly IEntityRelation CTHLabDetailConditionEntityUsingOpertorIDStatic = new CTHOperatorRelations().CTHLabDetailConditionEntityUsingOpertorID;

		/// <summary>CTor</summary>
		static StaticCTHOperatorRelations() { }
	}
}
