//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHStaging'.<br/><br/></summary>
	[Serializable]
	public partial class CTHStagingEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHPatientClinicalDataEntity> _cTHPatientClinicalDataCollection;
		private EntityCollection<CTHTNMStagingMatrixEntity> _cTHTNMStagingMatrixCollection;
		private EntityCollection<CTHCancerHistologicEntity> _cTHCancerHistologicCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerMolecularEntity> _cTHCancerMolecularCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerSideEntity> _cTHCancerSideCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollectionViaCTHTNMStagingMatrix;
		private EntityCollection<CTHPatientEntity> _cTHPatientCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix1;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix2;
		private EntityCollection<CTHTumorGradeEntity> _cTHTumorGradeCollectionViaCTHPatientClinicalData;
		private CTHCancerTypeEntity _cTHCancerTypeItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHStagingEntityStaticMetaData _staticMetaData = new CTHStagingEntityStaticMetaData();
		private static CTHStagingRelations _relationsFactory = new CTHStagingRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHCancerTypeItem</summary>
			public static readonly string CTHCancerTypeItem = "CTHCancerTypeItem";
			/// <summary>Member name CTHPatientClinicalDataCollection</summary>
			public static readonly string CTHPatientClinicalDataCollection = "CTHPatientClinicalDataCollection";
			/// <summary>Member name CTHTNMStagingMatrixCollection</summary>
			public static readonly string CTHTNMStagingMatrixCollection = "CTHTNMStagingMatrixCollection";
			/// <summary>Member name CTHCancerHistologicCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerHistologicCollectionViaCTHPatientClinicalData = "CTHCancerHistologicCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerMolecularCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerMolecularCollectionViaCTHPatientClinicalData = "CTHCancerMolecularCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerSideCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerSideCollectionViaCTHPatientClinicalData = "CTHCancerSideCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerTypeCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerTypeCollectionViaCTHPatientClinicalData = "CTHCancerTypeCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerTypeCollectionViaCTHTNMStagingMatrix</summary>
			public static readonly string CTHCancerTypeCollectionViaCTHTNMStagingMatrix = "CTHCancerTypeCollectionViaCTHTNMStagingMatrix";
			/// <summary>Member name CTHPatientCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHPatientCollectionViaCTHPatientClinicalData = "CTHPatientCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix1</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix1 = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix1";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix2</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix2 = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix2";
			/// <summary>Member name CTHTumorGradeCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHTumorGradeCollectionViaCTHPatientClinicalData = "CTHTumorGradeCollectionViaCTHPatientClinicalData";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHStagingEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHStagingEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHStagingEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity, typeof(CTHStagingEntity), typeof(CTHStagingEntityFactory), false);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHPatientClinicalDataEntity>>("CTHPatientClinicalDataCollection", a => a._cTHPatientClinicalDataCollection, (a, b) => a._cTHPatientClinicalDataCollection = b, a => a.CTHPatientClinicalDataCollection, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, typeof(CTHPatientClinicalDataEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHTNMStagingMatrixEntity>>("CTHTNMStagingMatrixCollection", a => a._cTHTNMStagingMatrixCollection, (a, b) => a._cTHTNMStagingMatrixCollection = b, a => a.CTHTNMStagingMatrixCollection, () => new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID, typeof(CTHTNMStagingMatrixEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingMatrixEntity);
				AddNavigatorMetaData<CTHStagingEntity, CTHCancerTypeEntity>("CTHCancerTypeItem", "CTHStagingCollection", (a, b) => a._cTHCancerTypeItem = b, a => a._cTHCancerTypeItem, (a, b) => a.CTHCancerTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHStagingRelations.CTHCancerTypeEntityUsingCancerTypeIDStatic, ()=>new CTHStagingRelations().CTHCancerTypeEntityUsingCancerTypeID, null, new int[] { (int)CTHStagingFieldIndex.CancerTypeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHCancerHistologicEntity>>("CTHCancerHistologicCollectionViaCTHPatientClinicalData", a => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerHistologicCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHCancerHistologicEntityUsingCancerHistologicalID, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHCancerHistologicEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHCancerMolecularEntity>>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", a => a._cTHCancerMolecularCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerMolecularCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerMolecularCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHCancerMolecularEntityUsingCancerMolecularID, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHCancerMolecularEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHCancerSideEntity>>("CTHCancerSideCollectionViaCTHPatientClinicalData", a => a._cTHCancerSideCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerSideCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerSideCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHCancerSideEntityUsingCancerSideId, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHCancerSideEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerSideEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollectionViaCTHPatientClinicalData", a => a._cTHCancerTypeCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerTypeCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerTypeCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHCancerTypeEntityUsingCancerTypeID, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollectionViaCTHTNMStagingMatrix", a => a._cTHCancerTypeCollectionViaCTHTNMStagingMatrix, (a, b) => a._cTHCancerTypeCollectionViaCTHTNMStagingMatrix = b, a => a.CTHCancerTypeCollectionViaCTHTNMStagingMatrix, () => new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID, () => new CTHTNMStagingMatrixRelations().CTHCancerTypeEntityUsingCancerTypeID, "CTHStagingEntity__", "CTHTNMStagingMatrix_", typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHPatientEntity>>("CTHPatientCollectionViaCTHPatientClinicalData", a => a._cTHPatientCollectionViaCTHPatientClinicalData, (a, b) => a._cTHPatientCollectionViaCTHPatientClinicalData = b, a => a.CTHPatientCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHPatientEntityUsingPatientID, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHPatientEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix, () => new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingMID, "CTHStagingEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix1, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix1 = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix1, () => new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingNID, "CTHStagingEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix2, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix2 = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix2, () => new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingTID, "CTHStagingEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHStagingEntity, EntityCollection<CTHTumorGradeEntity>>("CTHTumorGradeCollectionViaCTHPatientClinicalData", a => a._cTHTumorGradeCollectionViaCTHPatientClinicalData, (a, b) => a._cTHTumorGradeCollectionViaCTHPatientClinicalData = b, a => a.CTHTumorGradeCollectionViaCTHPatientClinicalData, () => new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID, () => new CTHPatientClinicalDataRelations().CTHTumorGradeEntityUsingTumorGradeID, "CTHStagingEntity__", "CTHPatientClinicalData_", typeof(CTHTumorGradeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHStagingEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHStagingEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHStagingEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHStagingEntity</param>
		public CTHStagingEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHStaging which data should be fetched into this CTHStaging object</param>
		public CTHStagingEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHStaging which data should be fetched into this CTHStaging object</param>
		/// <param name="validator">The custom validator object for this CTHStagingEntity</param>
		public CTHStagingEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHStagingEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataCollection() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStagingMatrix' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingMatrixCollection() { return CreateRelationInfoForNavigator("CTHTNMStagingMatrixCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerHistologicCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerMolecularCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerSide' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerSideCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerSideCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerTypeCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollectionViaCTHTNMStagingMatrix() { return CreateRelationInfoForNavigator("CTHCancerTypeCollectionViaCTHTNMStagingMatrix"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHPatientCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix1() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix2() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTumorGrade' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTumorGradeCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHTumorGradeCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeItem() { return CreateRelationInfoForNavigator("CTHCancerTypeItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHStagingEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHStagingRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataCollection", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStagingMatrix' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingMatrixCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingMatrixCollection", CommonEntityBase.CreateEntityCollection<CTHTNMStagingMatrixEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerSide' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerSideCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerSideCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerSideEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollectionViaCTHTNMStagingMatrix { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollectionViaCTHTNMStagingMatrix", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix1 { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix2 { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTumorGrade' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTumorGradeCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHTumorGradeCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHTumorGradeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeItem", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>The ArName property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."ArName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArName
		{
			get { return (System.String)GetValue((int)CTHStagingFieldIndex.ArName, true); }
			set	{ SetValue((int)CTHStagingFieldIndex.ArName, value); }
		}

		/// <summary>The ArRemarks property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."ArRemarks".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArRemarks
		{
			get { return (System.String)GetValue((int)CTHStagingFieldIndex.ArRemarks, true); }
			set	{ SetValue((int)CTHStagingFieldIndex.ArRemarks, value); }
		}

		/// <summary>The CancerTypeID property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."CancerTypeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerTypeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHStagingFieldIndex.CancerTypeID, false); }
			set	{ SetValue((int)CTHStagingFieldIndex.CancerTypeID, value); }
		}

		/// <summary>The ID property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHStagingFieldIndex.ID, true); }
			set { SetValue((int)CTHStagingFieldIndex.ID, value); }		}

		/// <summary>The Name property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)CTHStagingFieldIndex.Name, true); }
			set	{ SetValue((int)CTHStagingFieldIndex.Name, value); }
		}

		/// <summary>The Number property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."Number".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> Number
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHStagingFieldIndex.Number, false); }
			set	{ SetValue((int)CTHStagingFieldIndex.Number, value); }
		}

		/// <summary>The Remarks property of the Entity CTHStaging<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHStaging"."Remarks".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Remarks
		{
			get { return (System.String)GetValue((int)CTHStagingFieldIndex.Remarks, true); }
			set	{ SetValue((int)CTHStagingFieldIndex.Remarks, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientClinicalDataEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientClinicalDataEntity))]
		public virtual EntityCollection<CTHPatientClinicalDataEntity> CTHPatientClinicalDataCollection { get { return GetOrCreateEntityCollection<CTHPatientClinicalDataEntity, CTHPatientClinicalDataEntityFactory>("CTHStagingItem", true, false, ref _cTHPatientClinicalDataCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingMatrixEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingMatrixEntity))]
		public virtual EntityCollection<CTHTNMStagingMatrixEntity> CTHTNMStagingMatrixCollection { get { return GetOrCreateEntityCollection<CTHTNMStagingMatrixEntity, CTHTNMStagingMatrixEntityFactory>("CTHStagingItem", true, false, ref _cTHTNMStagingMatrixCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerHistologicEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerHistologicEntity))]
		public virtual EntityCollection<CTHCancerHistologicEntity> CTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerHistologicEntity, CTHCancerHistologicEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerHistologicCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerMolecularEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerMolecularEntity))]
		public virtual EntityCollection<CTHCancerMolecularEntity> CTHCancerMolecularCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerMolecularEntity, CTHCancerMolecularEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerMolecularCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerSideEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerSideEntity))]
		public virtual EntityCollection<CTHCancerSideEntity> CTHCancerSideCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerSideEntity, CTHCancerSideEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerSideCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerTypeCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollectionViaCTHTNMStagingMatrix { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHStagingCollectionViaCTHTNMStagingMatrix", false, true, ref _cTHCancerTypeCollectionViaCTHTNMStagingMatrix); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientEntity))]
		public virtual EntityCollection<CTHPatientEntity> CTHPatientCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHPatientEntity, CTHPatientEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHPatientCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHStagingCollectionViaCTHTNMStagingMatrix", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix1 { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHStagingCollectionViaCTHTNMStagingMatrix1", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix1); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix2 { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHStagingCollectionViaCTHTNMStagingMatrix2", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix2); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTumorGradeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTumorGradeEntity))]
		public virtual EntityCollection<CTHTumorGradeEntity> CTHTumorGradeCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHTumorGradeEntity, CTHTumorGradeEntityFactory>("CTHStagingCollectionViaCTHPatientClinicalData", false, true, ref _cTHTumorGradeCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets / sets related entity of type 'CTHCancerTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerTypeEntity CTHCancerTypeItem
		{
			get { return _cTHCancerTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerTypeItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHStagingFieldIndex
	{
		///<summary>ArName. </summary>
		ArName,
		///<summary>ArRemarks. </summary>
		ArRemarks,
		///<summary>CancerTypeID. </summary>
		CancerTypeID,
		///<summary>ID. </summary>
		ID,
		///<summary>Name. </summary>
		Name,
		///<summary>Number. </summary>
		Number,
		///<summary>Remarks. </summary>
		Remarks,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHStaging. </summary>
	public partial class CTHStagingRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHStagingEntity and CTHPatientClinicalDataEntity over the 1:n relation they have, using the relation between the fields: CTHStaging.ID - CTHPatientClinicalData.StageGradeID</summary>
		public virtual IEntityRelation CTHPatientClinicalDataEntityUsingStageGradeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientClinicalDataCollection", true, new[] { CTHStagingFields.ID, CTHPatientClinicalDataFields.StageGradeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHStagingEntity and CTHTNMStagingMatrixEntity over the 1:n relation they have, using the relation between the fields: CTHStaging.ID - CTHTNMStagingMatrix.StageID</summary>
		public virtual IEntityRelation CTHTNMStagingMatrixEntityUsingStageID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHTNMStagingMatrixCollection", true, new[] { CTHStagingFields.ID, CTHTNMStagingMatrixFields.StageID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHStagingEntity and CTHCancerTypeEntity over the m:1 relation they have, using the relation between the fields: CTHStaging.CancerTypeID - CTHCancerType.ID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingCancerTypeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerTypeItem", false, new[] { CTHCancerTypeFields.ID, CTHStagingFields.CancerTypeID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHStagingRelations
	{
		internal static readonly IEntityRelation CTHPatientClinicalDataEntityUsingStageGradeIDStatic = new CTHStagingRelations().CTHPatientClinicalDataEntityUsingStageGradeID;
		internal static readonly IEntityRelation CTHTNMStagingMatrixEntityUsingStageIDStatic = new CTHStagingRelations().CTHTNMStagingMatrixEntityUsingStageID;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingCancerTypeIDStatic = new CTHStagingRelations().CTHCancerTypeEntityUsingCancerTypeID;

		/// <summary>CTor</summary>
		static StaticCTHStagingRelations() { }
	}
}
