//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHPreMedication'.<br/><br/></summary>
	[Serializable]
	public partial class CTHPreMedicationEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHChemotherapyProtocolEntity> _cTHChemotherapyProtocolCollection;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollectionViaCTHChemotherapyProtocol;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHPreMedicationEntityStaticMetaData _staticMetaData = new CTHPreMedicationEntityStaticMetaData();
		private static CTHPreMedicationRelations _relationsFactory = new CTHPreMedicationRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHChemotherapyProtocolCollection</summary>
			public static readonly string CTHChemotherapyProtocolCollection = "CTHChemotherapyProtocolCollection";
			/// <summary>Member name CTHCancerTypeCollectionViaCTHChemotherapyProtocol</summary>
			public static readonly string CTHCancerTypeCollectionViaCTHChemotherapyProtocol = "CTHCancerTypeCollectionViaCTHChemotherapyProtocol";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHPreMedicationEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHPreMedicationEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHPreMedicationEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity, typeof(CTHPreMedicationEntity), typeof(CTHPreMedicationEntityFactory), false);
				AddNavigatorMetaData<CTHPreMedicationEntity, EntityCollection<CTHChemotherapyProtocolEntity>>("CTHChemotherapyProtocolCollection", a => a._cTHChemotherapyProtocolCollection, (a, b) => a._cTHChemotherapyProtocolCollection = b, a => a.CTHChemotherapyProtocolCollection, () => new CTHPreMedicationRelations().CTHChemotherapyProtocolEntityUsingPremedicationID, typeof(CTHChemotherapyProtocolEntity), (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity);
				AddNavigatorMetaData<CTHPreMedicationEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollectionViaCTHChemotherapyProtocol", a => a._cTHCancerTypeCollectionViaCTHChemotherapyProtocol, (a, b) => a._cTHCancerTypeCollectionViaCTHChemotherapyProtocol = b, a => a.CTHCancerTypeCollectionViaCTHChemotherapyProtocol, () => new CTHPreMedicationRelations().CTHChemotherapyProtocolEntityUsingPremedicationID, () => new CTHChemotherapyProtocolRelations().CTHCancerTypeEntityUsingCancerTypeID, "CTHPreMedicationEntity__", "CTHChemotherapyProtocol_", typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHPreMedicationEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHPreMedicationEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHPreMedicationEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHPreMedicationEntity</param>
		public CTHPreMedicationEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPreMedication which data should be fetched into this CTHPreMedication object</param>
		public CTHPreMedicationEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPreMedication which data should be fetched into this CTHPreMedication object</param>
		/// <param name="validator">The custom validator object for this CTHPreMedicationEntity</param>
		public CTHPreMedicationEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHPreMedicationEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHChemotherapyProtocol' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemotherapyProtocolCollection() { return CreateRelationInfoForNavigator("CTHChemotherapyProtocolCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollectionViaCTHChemotherapyProtocol() { return CreateRelationInfoForNavigator("CTHCancerTypeCollectionViaCTHChemotherapyProtocol"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHPreMedicationEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHPreMedicationRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemotherapyProtocol' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemotherapyProtocolCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHChemotherapyProtocolCollection", CommonEntityBase.CreateEntityCollection<CTHChemotherapyProtocolEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollectionViaCTHChemotherapyProtocol { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollectionViaCTHChemotherapyProtocol", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>The ArDescription property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."ArDescription".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArDescription
		{
			get { return (System.String)GetValue((int)CTHPreMedicationFieldIndex.ArDescription, true); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.ArDescription, value); }
		}

		/// <summary>The ArTitle property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."ArTitle".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArTitle
		{
			get { return (System.String)GetValue((int)CTHPreMedicationFieldIndex.ArTitle, true); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.ArTitle, value); }
		}

		/// <summary>The Description property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."Description".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Description
		{
			get { return (System.String)GetValue((int)CTHPreMedicationFieldIndex.Description, true); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.Description, value); }
		}

		/// <summary>The EmetogenicID property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."EmetogenicID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> EmetogenicID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPreMedicationFieldIndex.EmetogenicID, false); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.EmetogenicID, value); }
		}

		/// <summary>The ID property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHPreMedicationFieldIndex.ID, true); }
			set { SetValue((int)CTHPreMedicationFieldIndex.ID, value); }		}

		/// <summary>The Number property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."Number".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> Number
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPreMedicationFieldIndex.Number, false); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.Number, value); }
		}

		/// <summary>The Title property of the Entity CTHPreMedication<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPreMedication"."Title".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Title
		{
			get { return (System.String)GetValue((int)CTHPreMedicationFieldIndex.Title, true); }
			set	{ SetValue((int)CTHPreMedicationFieldIndex.Title, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHChemotherapyProtocolEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHChemotherapyProtocolEntity))]
		public virtual EntityCollection<CTHChemotherapyProtocolEntity> CTHChemotherapyProtocolCollection { get { return GetOrCreateEntityCollection<CTHChemotherapyProtocolEntity, CTHChemotherapyProtocolEntityFactory>("CTHPreMedicationItem", true, false, ref _cTHChemotherapyProtocolCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollectionViaCTHChemotherapyProtocol { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHPreMedicationCollectionViaCTHChemotherapyProtocol", false, true, ref _cTHCancerTypeCollectionViaCTHChemotherapyProtocol); } }
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHPreMedicationFieldIndex
	{
		///<summary>ArDescription. </summary>
		ArDescription,
		///<summary>ArTitle. </summary>
		ArTitle,
		///<summary>Description. </summary>
		Description,
		///<summary>EmetogenicID. </summary>
		EmetogenicID,
		///<summary>ID. </summary>
		ID,
		///<summary>Number. </summary>
		Number,
		///<summary>Title. </summary>
		Title,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHPreMedication. </summary>
	public partial class CTHPreMedicationRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHPreMedicationEntity and CTHChemotherapyProtocolEntity over the 1:n relation they have, using the relation between the fields: CTHPreMedication.ID - CTHChemotherapyProtocol.PremedicationID</summary>
		public virtual IEntityRelation CTHChemotherapyProtocolEntityUsingPremedicationID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHChemotherapyProtocolCollection", true, new[] { CTHPreMedicationFields.ID, CTHChemotherapyProtocolFields.PremedicationID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHPreMedicationRelations
	{
		internal static readonly IEntityRelation CTHChemotherapyProtocolEntityUsingPremedicationIDStatic = new CTHPreMedicationRelations().CTHChemotherapyProtocolEntityUsingPremedicationID;

		/// <summary>CTor</summary>
		static StaticCTHPreMedicationRelations() { }
	}
}
