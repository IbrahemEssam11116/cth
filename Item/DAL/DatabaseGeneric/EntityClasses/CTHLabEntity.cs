//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHLab'.<br/><br/></summary>
	[Serializable]
	public partial class CTHLabEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHLabDetailEntity> _cTHLabDetailCollection;
		private EntityCollection<CTHLabGroupLabEntity> _cTHLabGroupLabCollection;
		private EntityCollection<CTHPatientIntialLabEntity> _cTHPatientIntialLabCollection;
		private EntityCollection<CTHLabGroupEntity> _cTHLabGroupCollectionViaCTHLabGroupLab;
		private EntityCollection<CTHPatientClinicalDataEntity> _cTHPatientClinicalDataCollectionViaCTHPatientIntialLab;
		private CTHChemotherapyProtocolEntity _cTHChemotherapyProtocolItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHLabEntityStaticMetaData _staticMetaData = new CTHLabEntityStaticMetaData();
		private static CTHLabRelations _relationsFactory = new CTHLabRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHChemotherapyProtocolItem</summary>
			public static readonly string CTHChemotherapyProtocolItem = "CTHChemotherapyProtocolItem";
			/// <summary>Member name CTHLabDetailCollection</summary>
			public static readonly string CTHLabDetailCollection = "CTHLabDetailCollection";
			/// <summary>Member name CTHLabGroupLabCollection</summary>
			public static readonly string CTHLabGroupLabCollection = "CTHLabGroupLabCollection";
			/// <summary>Member name CTHPatientIntialLabCollection</summary>
			public static readonly string CTHPatientIntialLabCollection = "CTHPatientIntialLabCollection";
			/// <summary>Member name CTHLabGroupCollectionViaCTHLabGroupLab</summary>
			public static readonly string CTHLabGroupCollectionViaCTHLabGroupLab = "CTHLabGroupCollectionViaCTHLabGroupLab";
			/// <summary>Member name CTHPatientClinicalDataCollectionViaCTHPatientIntialLab</summary>
			public static readonly string CTHPatientClinicalDataCollectionViaCTHPatientIntialLab = "CTHPatientClinicalDataCollectionViaCTHPatientIntialLab";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHLabEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHLabEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHLabEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHLabEntity, typeof(CTHLabEntity), typeof(CTHLabEntityFactory), false);
				AddNavigatorMetaData<CTHLabEntity, EntityCollection<CTHLabDetailEntity>>("CTHLabDetailCollection", a => a._cTHLabDetailCollection, (a, b) => a._cTHLabDetailCollection = b, a => a.CTHLabDetailCollection, () => new CTHLabRelations().CTHLabDetailEntityUsingLabID, typeof(CTHLabDetailEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabDetailEntity);
				AddNavigatorMetaData<CTHLabEntity, EntityCollection<CTHLabGroupLabEntity>>("CTHLabGroupLabCollection", a => a._cTHLabGroupLabCollection, (a, b) => a._cTHLabGroupLabCollection = b, a => a.CTHLabGroupLabCollection, () => new CTHLabRelations().CTHLabGroupLabEntityUsingLabID, typeof(CTHLabGroupLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabGroupLabEntity);
				AddNavigatorMetaData<CTHLabEntity, EntityCollection<CTHPatientIntialLabEntity>>("CTHPatientIntialLabCollection", a => a._cTHPatientIntialLabCollection, (a, b) => a._cTHPatientIntialLabCollection = b, a => a.CTHPatientIntialLabCollection, () => new CTHLabRelations().CTHPatientIntialLabEntityUsingLabID, typeof(CTHPatientIntialLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity);
				AddNavigatorMetaData<CTHLabEntity, CTHChemotherapyProtocolEntity>("CTHChemotherapyProtocolItem", "CTHLabCollection", (a, b) => a._cTHChemotherapyProtocolItem = b, a => a._cTHChemotherapyProtocolItem, (a, b) => a.CTHChemotherapyProtocolItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHLabRelations.CTHChemotherapyProtocolEntityUsingProtocolIDStatic, ()=>new CTHLabRelations().CTHChemotherapyProtocolEntityUsingProtocolID, null, new int[] { (int)CTHLabFieldIndex.ProtocolID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity);
				AddNavigatorMetaData<CTHLabEntity, EntityCollection<CTHLabGroupEntity>>("CTHLabGroupCollectionViaCTHLabGroupLab", a => a._cTHLabGroupCollectionViaCTHLabGroupLab, (a, b) => a._cTHLabGroupCollectionViaCTHLabGroupLab = b, a => a.CTHLabGroupCollectionViaCTHLabGroupLab, () => new CTHLabRelations().CTHLabGroupLabEntityUsingLabID, () => new CTHLabGroupLabRelations().CTHLabGroupEntityUsingLabGroupID, "CTHLabEntity__", "CTHLabGroupLab_", typeof(CTHLabGroupEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabGroupEntity);
				AddNavigatorMetaData<CTHLabEntity, EntityCollection<CTHPatientClinicalDataEntity>>("CTHPatientClinicalDataCollectionViaCTHPatientIntialLab", a => a._cTHPatientClinicalDataCollectionViaCTHPatientIntialLab, (a, b) => a._cTHPatientClinicalDataCollectionViaCTHPatientIntialLab = b, a => a.CTHPatientClinicalDataCollectionViaCTHPatientIntialLab, () => new CTHLabRelations().CTHPatientIntialLabEntityUsingLabID, () => new CTHPatientIntialLabRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID, "CTHLabEntity__", "CTHPatientIntialLab_", typeof(CTHPatientClinicalDataEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHLabEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHLabEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHLabEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHLabEntity</param>
		public CTHLabEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHLab which data should be fetched into this CTHLab object</param>
		public CTHLabEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHLab which data should be fetched into this CTHLab object</param>
		/// <param name="validator">The custom validator object for this CTHLabEntity</param>
		public CTHLabEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHLabEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabDetailCollection() { return CreateRelationInfoForNavigator("CTHLabDetailCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabGroupLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabGroupLabCollection() { return CreateRelationInfoForNavigator("CTHLabGroupLabCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientIntialLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientIntialLabCollection() { return CreateRelationInfoForNavigator("CTHPatientIntialLabCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabGroup' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabGroupCollectionViaCTHLabGroupLab() { return CreateRelationInfoForNavigator("CTHLabGroupCollectionViaCTHLabGroupLab"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataCollectionViaCTHPatientIntialLab() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataCollectionViaCTHPatientIntialLab"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHChemotherapyProtocol' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemotherapyProtocolItem() { return CreateRelationInfoForNavigator("CTHChemotherapyProtocolItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHLabEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHLabRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabDetailCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHLabDetailCollection", CommonEntityBase.CreateEntityCollection<CTHLabDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabGroupLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabGroupLabCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHLabGroupLabCollection", CommonEntityBase.CreateEntityCollection<CTHLabGroupLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientIntialLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientIntialLabCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientIntialLabCollection", CommonEntityBase.CreateEntityCollection<CTHPatientIntialLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabGroup' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabGroupCollectionViaCTHLabGroupLab { get { return _staticMetaData.GetPrefetchPathElement("CTHLabGroupCollectionViaCTHLabGroupLab", CommonEntityBase.CreateEntityCollection<CTHLabGroupEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataCollectionViaCTHPatientIntialLab { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataCollectionViaCTHPatientIntialLab", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemotherapyProtocol' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemotherapyProtocolItem { get { return _staticMetaData.GetPrefetchPathElement("CTHChemotherapyProtocolItem", CommonEntityBase.CreateEntityCollection<CTHChemotherapyProtocolEntity>()); } }

		/// <summary>The ArLabName property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."ArLabName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArLabName
		{
			get { return (System.String)GetValue((int)CTHLabFieldIndex.ArLabName, true); }
			set	{ SetValue((int)CTHLabFieldIndex.ArLabName, value); }
		}

		/// <summary>The ArRemarks property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."ArRemarks".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArRemarks
		{
			get { return (System.String)GetValue((int)CTHLabFieldIndex.ArRemarks, true); }
			set	{ SetValue((int)CTHLabFieldIndex.ArRemarks, value); }
		}

		/// <summary>The ID property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHLabFieldIndex.ID, true); }
			set { SetValue((int)CTHLabFieldIndex.ID, value); }		}

		/// <summary>The IsIntial property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."IsIntial".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsIntial
		{
			get { return (System.Boolean)GetValue((int)CTHLabFieldIndex.IsIntial, true); }
			set	{ SetValue((int)CTHLabFieldIndex.IsIntial, value); }
		}

		/// <summary>The IsMandatory property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."IsMandatory".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsMandatory
		{
			get { return (System.Boolean)GetValue((int)CTHLabFieldIndex.IsMandatory, true); }
			set	{ SetValue((int)CTHLabFieldIndex.IsMandatory, value); }
		}

		/// <summary>The LabName property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."LabName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String LabName
		{
			get { return (System.String)GetValue((int)CTHLabFieldIndex.LabName, true); }
			set	{ SetValue((int)CTHLabFieldIndex.LabName, value); }
		}

		/// <summary>The ProtocolID property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."ProtocolID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ProtocolID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHLabFieldIndex.ProtocolID, false); }
			set	{ SetValue((int)CTHLabFieldIndex.ProtocolID, value); }
		}

		/// <summary>The Remarks property of the Entity CTHLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHLab"."Remarks".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Remarks
		{
			get { return (System.String)GetValue((int)CTHLabFieldIndex.Remarks, true); }
			set	{ SetValue((int)CTHLabFieldIndex.Remarks, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabDetailEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabDetailEntity))]
		public virtual EntityCollection<CTHLabDetailEntity> CTHLabDetailCollection { get { return GetOrCreateEntityCollection<CTHLabDetailEntity, CTHLabDetailEntityFactory>("CTHLabItem", true, false, ref _cTHLabDetailCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabGroupLabEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabGroupLabEntity))]
		public virtual EntityCollection<CTHLabGroupLabEntity> CTHLabGroupLabCollection { get { return GetOrCreateEntityCollection<CTHLabGroupLabEntity, CTHLabGroupLabEntityFactory>("CTHLabItem", true, false, ref _cTHLabGroupLabCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientIntialLabEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientIntialLabEntity))]
		public virtual EntityCollection<CTHPatientIntialLabEntity> CTHPatientIntialLabCollection { get { return GetOrCreateEntityCollection<CTHPatientIntialLabEntity, CTHPatientIntialLabEntityFactory>("CTHLabItem", true, false, ref _cTHPatientIntialLabCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabGroupEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabGroupEntity))]
		public virtual EntityCollection<CTHLabGroupEntity> CTHLabGroupCollectionViaCTHLabGroupLab { get { return GetOrCreateEntityCollection<CTHLabGroupEntity, CTHLabGroupEntityFactory>("CTHLabCollectionViaCTHLabGroupLab", false, true, ref _cTHLabGroupCollectionViaCTHLabGroupLab); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientClinicalDataEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientClinicalDataEntity))]
		public virtual EntityCollection<CTHPatientClinicalDataEntity> CTHPatientClinicalDataCollectionViaCTHPatientIntialLab { get { return GetOrCreateEntityCollection<CTHPatientClinicalDataEntity, CTHPatientClinicalDataEntityFactory>("CTHLabCollectionViaCTHPatientIntialLab", false, true, ref _cTHPatientClinicalDataCollectionViaCTHPatientIntialLab); } }

		/// <summary>Gets / sets related entity of type 'CTHChemotherapyProtocolEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHChemotherapyProtocolEntity CTHChemotherapyProtocolItem
		{
			get { return _cTHChemotherapyProtocolItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHChemotherapyProtocolItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHLabFieldIndex
	{
		///<summary>ArLabName. </summary>
		ArLabName,
		///<summary>ArRemarks. </summary>
		ArRemarks,
		///<summary>ID. </summary>
		ID,
		///<summary>IsIntial. </summary>
		IsIntial,
		///<summary>IsMandatory. </summary>
		IsMandatory,
		///<summary>LabName. </summary>
		LabName,
		///<summary>ProtocolID. </summary>
		ProtocolID,
		///<summary>Remarks. </summary>
		Remarks,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHLab. </summary>
	public partial class CTHLabRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHLabEntity and CTHLabDetailEntity over the 1:n relation they have, using the relation between the fields: CTHLab.ID - CTHLabDetail.LabID</summary>
		public virtual IEntityRelation CTHLabDetailEntityUsingLabID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHLabDetailCollection", true, new[] { CTHLabFields.ID, CTHLabDetailFields.LabID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHLabEntity and CTHLabGroupLabEntity over the 1:n relation they have, using the relation between the fields: CTHLab.ID - CTHLabGroupLab.LabID</summary>
		public virtual IEntityRelation CTHLabGroupLabEntityUsingLabID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHLabGroupLabCollection", true, new[] { CTHLabFields.ID, CTHLabGroupLabFields.LabID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHLabEntity and CTHPatientIntialLabEntity over the 1:n relation they have, using the relation between the fields: CTHLab.ID - CTHPatientIntialLab.LabID</summary>
		public virtual IEntityRelation CTHPatientIntialLabEntityUsingLabID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientIntialLabCollection", true, new[] { CTHLabFields.ID, CTHPatientIntialLabFields.LabID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHLabEntity and CTHChemotherapyProtocolEntity over the m:1 relation they have, using the relation between the fields: CTHLab.ProtocolID - CTHChemotherapyProtocol.ID</summary>
		public virtual IEntityRelation CTHChemotherapyProtocolEntityUsingProtocolID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHChemotherapyProtocolItem", false, new[] { CTHChemotherapyProtocolFields.ID, CTHLabFields.ProtocolID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHLabRelations
	{
		internal static readonly IEntityRelation CTHLabDetailEntityUsingLabIDStatic = new CTHLabRelations().CTHLabDetailEntityUsingLabID;
		internal static readonly IEntityRelation CTHLabGroupLabEntityUsingLabIDStatic = new CTHLabRelations().CTHLabGroupLabEntityUsingLabID;
		internal static readonly IEntityRelation CTHPatientIntialLabEntityUsingLabIDStatic = new CTHLabRelations().CTHPatientIntialLabEntityUsingLabID;
		internal static readonly IEntityRelation CTHChemotherapyProtocolEntityUsingProtocolIDStatic = new CTHLabRelations().CTHChemotherapyProtocolEntityUsingProtocolID;

		/// <summary>CTor</summary>
		static StaticCTHLabRelations() { }
	}
}
