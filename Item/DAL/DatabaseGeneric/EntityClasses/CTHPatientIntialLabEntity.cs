//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHPatientIntialLab'.<br/><br/></summary>
	[Serializable]
	public partial class CTHPatientIntialLabEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private CTHLabEntity _cTHLabItem;
		private CTHPatientClinicalDataEntity _cTHPatientClinicalDataItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHPatientIntialLabEntityStaticMetaData _staticMetaData = new CTHPatientIntialLabEntityStaticMetaData();
		private static CTHPatientIntialLabRelations _relationsFactory = new CTHPatientIntialLabRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHLabItem</summary>
			public static readonly string CTHLabItem = "CTHLabItem";
			/// <summary>Member name CTHPatientClinicalDataItem</summary>
			public static readonly string CTHPatientClinicalDataItem = "CTHPatientClinicalDataItem";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHPatientIntialLabEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHPatientIntialLabEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHPatientIntialLabEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity, typeof(CTHPatientIntialLabEntity), typeof(CTHPatientIntialLabEntityFactory), false);
				AddNavigatorMetaData<CTHPatientIntialLabEntity, CTHLabEntity>("CTHLabItem", "CTHPatientIntialLabCollection", (a, b) => a._cTHLabItem = b, a => a._cTHLabItem, (a, b) => a.CTHLabItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientIntialLabRelations.CTHLabEntityUsingLabIDStatic, ()=>new CTHPatientIntialLabRelations().CTHLabEntityUsingLabID, null, new int[] { (int)CTHPatientIntialLabFieldIndex.LabID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHLabEntity);
				AddNavigatorMetaData<CTHPatientIntialLabEntity, CTHPatientClinicalDataEntity>("CTHPatientClinicalDataItem", "CTHPatientIntialLabCollection", (a, b) => a._cTHPatientClinicalDataItem = b, a => a._cTHPatientClinicalDataItem, (a, b) => a.CTHPatientClinicalDataItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientIntialLabRelations.CTHPatientClinicalDataEntityUsingPatientClinicalDataIDStatic, ()=>new CTHPatientIntialLabRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID, null, new int[] { (int)CTHPatientIntialLabFieldIndex.PatientClinicalDataID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHPatientIntialLabEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHPatientIntialLabEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHPatientIntialLabEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHPatientIntialLabEntity</param>
		public CTHPatientIntialLabEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPatientIntialLab which data should be fetched into this CTHPatientIntialLab object</param>
		public CTHPatientIntialLabEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPatientIntialLab which data should be fetched into this CTHPatientIntialLab object</param>
		/// <param name="validator">The custom validator object for this CTHPatientIntialLabEntity</param>
		public CTHPatientIntialLabEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHPatientIntialLabEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabItem() { return CreateRelationInfoForNavigator("CTHLabItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataItem() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHPatientIntialLabEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHPatientIntialLabRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabItem { get { return _staticMetaData.GetPrefetchPathElement("CTHLabItem", CommonEntityBase.CreateEntityCollection<CTHLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataItem { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataItem", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>The ArTextResult property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."ArTextResult".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArTextResult
		{
			get { return (System.String)GetValue((int)CTHPatientIntialLabFieldIndex.ArTextResult, true); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.ArTextResult, value); }
		}

		/// <summary>The AttachmentResult property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."AttachmentResult".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String AttachmentResult
		{
			get { return (System.String)GetValue((int)CTHPatientIntialLabFieldIndex.AttachmentResult, true); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.AttachmentResult, value); }
		}

		/// <summary>The ID property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHPatientIntialLabFieldIndex.ID, true); }
			set { SetValue((int)CTHPatientIntialLabFieldIndex.ID, value); }		}

		/// <summary>The LabID property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."LabID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LabID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientIntialLabFieldIndex.LabID, false); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.LabID, value); }
		}

		/// <summary>The PatientClinicalDataID property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."PatientClinicalDataID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> PatientClinicalDataID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientIntialLabFieldIndex.PatientClinicalDataID, false); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.PatientClinicalDataID, value); }
		}

		/// <summary>The PatientLabFile property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."PatientLabFile".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String PatientLabFile
		{
			get { return (System.String)GetValue((int)CTHPatientIntialLabFieldIndex.PatientLabFile, true); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.PatientLabFile, value); }
		}

		/// <summary>The TextResult property of the Entity CTHPatientIntialLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientIntialLab"."TextResult".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String TextResult
		{
			get { return (System.String)GetValue((int)CTHPatientIntialLabFieldIndex.TextResult, true); }
			set	{ SetValue((int)CTHPatientIntialLabFieldIndex.TextResult, value); }
		}

		/// <summary>Gets / sets related entity of type 'CTHLabEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHLabEntity CTHLabItem
		{
			get { return _cTHLabItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHLabItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHPatientClinicalDataEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHPatientClinicalDataEntity CTHPatientClinicalDataItem
		{
			get { return _cTHPatientClinicalDataItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHPatientClinicalDataItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHPatientIntialLabFieldIndex
	{
		///<summary>ArTextResult. </summary>
		ArTextResult,
		///<summary>AttachmentResult. </summary>
		AttachmentResult,
		///<summary>ID. </summary>
		ID,
		///<summary>LabID. </summary>
		LabID,
		///<summary>PatientClinicalDataID. </summary>
		PatientClinicalDataID,
		///<summary>PatientLabFile. </summary>
		PatientLabFile,
		///<summary>TextResult. </summary>
		TextResult,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHPatientIntialLab. </summary>
	public partial class CTHPatientIntialLabRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between CTHPatientIntialLabEntity and CTHLabEntity over the m:1 relation they have, using the relation between the fields: CTHPatientIntialLab.LabID - CTHLab.ID</summary>
		public virtual IEntityRelation CTHLabEntityUsingLabID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHLabItem", false, new[] { CTHLabFields.ID, CTHPatientIntialLabFields.LabID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientIntialLabEntity and CTHPatientClinicalDataEntity over the m:1 relation they have, using the relation between the fields: CTHPatientIntialLab.PatientClinicalDataID - CTHPatientClinicalData.ID</summary>
		public virtual IEntityRelation CTHPatientClinicalDataEntityUsingPatientClinicalDataID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHPatientClinicalDataItem", false, new[] { CTHPatientClinicalDataFields.ID, CTHPatientIntialLabFields.PatientClinicalDataID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHPatientIntialLabRelations
	{
		internal static readonly IEntityRelation CTHLabEntityUsingLabIDStatic = new CTHPatientIntialLabRelations().CTHLabEntityUsingLabID;
		internal static readonly IEntityRelation CTHPatientClinicalDataEntityUsingPatientClinicalDataIDStatic = new CTHPatientIntialLabRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID;

		/// <summary>CTor</summary>
		static StaticCTHPatientIntialLabRelations() { }
	}
}
