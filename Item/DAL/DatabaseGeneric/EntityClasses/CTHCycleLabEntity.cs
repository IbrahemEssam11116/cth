//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHCycleLab'.<br/><br/></summary>
	[Serializable]
	public partial class CTHCycleLabEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private CTHLabDetailEntity _cTHLabDetailItem;
		private CTHProtocolCycleEntity _cTHProtocolCycleItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHCycleLabEntityStaticMetaData _staticMetaData = new CTHCycleLabEntityStaticMetaData();
		private static CTHCycleLabRelations _relationsFactory = new CTHCycleLabRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHLabDetailItem</summary>
			public static readonly string CTHLabDetailItem = "CTHLabDetailItem";
			/// <summary>Member name CTHProtocolCycleItem</summary>
			public static readonly string CTHProtocolCycleItem = "CTHProtocolCycleItem";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHCycleLabEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHCycleLabEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHCycleLabEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHCycleLabEntity, typeof(CTHCycleLabEntity), typeof(CTHCycleLabEntityFactory), false);
				AddNavigatorMetaData<CTHCycleLabEntity, CTHLabDetailEntity>("CTHLabDetailItem", "CTHCycleLabCollection", (a, b) => a._cTHLabDetailItem = b, a => a._cTHLabDetailItem, (a, b) => a.CTHLabDetailItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHCycleLabRelations.CTHLabDetailEntityUsingLabIDStatic, ()=>new CTHCycleLabRelations().CTHLabDetailEntityUsingLabID, null, new int[] { (int)CTHCycleLabFieldIndex.LabID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHLabDetailEntity);
				AddNavigatorMetaData<CTHCycleLabEntity, CTHProtocolCycleEntity>("CTHProtocolCycleItem", "CTHCycleLabCollection", (a, b) => a._cTHProtocolCycleItem = b, a => a._cTHProtocolCycleItem, (a, b) => a.CTHProtocolCycleItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHCycleLabRelations.CTHProtocolCycleEntityUsingCycleIDStatic, ()=>new CTHCycleLabRelations().CTHProtocolCycleEntityUsingCycleID, null, new int[] { (int)CTHCycleLabFieldIndex.CycleID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHCycleLabEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHCycleLabEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHCycleLabEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHCycleLabEntity</param>
		public CTHCycleLabEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCycleLab which data should be fetched into this CTHCycleLab object</param>
		public CTHCycleLabEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCycleLab which data should be fetched into this CTHCycleLab object</param>
		/// <param name="validator">The custom validator object for this CTHCycleLabEntity</param>
		public CTHCycleLabEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHCycleLabEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHLabDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabDetailItem() { return CreateRelationInfoForNavigator("CTHLabDetailItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHProtocolCycle' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHProtocolCycleItem() { return CreateRelationInfoForNavigator("CTHProtocolCycleItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHCycleLabEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHCycleLabRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabDetailItem { get { return _staticMetaData.GetPrefetchPathElement("CTHLabDetailItem", CommonEntityBase.CreateEntityCollection<CTHLabDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHProtocolCycle' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHProtocolCycleItem { get { return _staticMetaData.GetPrefetchPathElement("CTHProtocolCycleItem", CommonEntityBase.CreateEntityCollection<CTHProtocolCycleEntity>()); } }

		/// <summary>The CycleID property of the Entity CTHCycleLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCycleLab"."CycleID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CycleID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHCycleLabFieldIndex.CycleID, false); }
			set	{ SetValue((int)CTHCycleLabFieldIndex.CycleID, value); }
		}

		/// <summary>The ID property of the Entity CTHCycleLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCycleLab"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHCycleLabFieldIndex.ID, true); }
			set { SetValue((int)CTHCycleLabFieldIndex.ID, value); }		}

		/// <summary>The LabID property of the Entity CTHCycleLab<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCycleLab"."LabID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> LabID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHCycleLabFieldIndex.LabID, false); }
			set	{ SetValue((int)CTHCycleLabFieldIndex.LabID, value); }
		}

		/// <summary>Gets / sets related entity of type 'CTHLabDetailEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHLabDetailEntity CTHLabDetailItem
		{
			get { return _cTHLabDetailItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHLabDetailItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHProtocolCycleEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHProtocolCycleEntity CTHProtocolCycleItem
		{
			get { return _cTHProtocolCycleItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHProtocolCycleItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHCycleLabFieldIndex
	{
		///<summary>CycleID. </summary>
		CycleID,
		///<summary>ID. </summary>
		ID,
		///<summary>LabID. </summary>
		LabID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHCycleLab. </summary>
	public partial class CTHCycleLabRelations: RelationFactory
	{

		/// <summary>Returns a new IEntityRelation object, between CTHCycleLabEntity and CTHLabDetailEntity over the m:1 relation they have, using the relation between the fields: CTHCycleLab.LabID - CTHLabDetail.ID</summary>
		public virtual IEntityRelation CTHLabDetailEntityUsingLabID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHLabDetailItem", false, new[] { CTHLabDetailFields.ID, CTHCycleLabFields.LabID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCycleLabEntity and CTHProtocolCycleEntity over the m:1 relation they have, using the relation between the fields: CTHCycleLab.CycleID - CTHProtocolCycle.ID</summary>
		public virtual IEntityRelation CTHProtocolCycleEntityUsingCycleID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHProtocolCycleItem", false, new[] { CTHProtocolCycleFields.ID, CTHCycleLabFields.CycleID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHCycleLabRelations
	{
		internal static readonly IEntityRelation CTHLabDetailEntityUsingLabIDStatic = new CTHCycleLabRelations().CTHLabDetailEntityUsingLabID;
		internal static readonly IEntityRelation CTHProtocolCycleEntityUsingCycleIDStatic = new CTHCycleLabRelations().CTHProtocolCycleEntityUsingCycleID;

		/// <summary>CTor</summary>
		static StaticCTHCycleLabRelations() { }
	}
}
