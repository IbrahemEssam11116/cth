//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHKimoSurvey'.<br/><br/></summary>
	[Serializable]
	public partial class CTHKimoSurveyEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHChemoLabEntity> _cTHChemoLabCollection;
		private EntityCollection<CTHNotificationEntity> _cTHNotificationCollection;
		private EntityCollection<CTHPatientDrugEntity> _cTHPatientDrugCollection;
		private EntityCollection<CTHPatientSymptomEntity> _cTHPatientSymptomCollection;
		private EntityCollection<CTHDoctorEntity> _cTHDoctorCollectionViaCTHNotification;
		private EntityCollection<CTHDrugEntity> _cTHDrugCollectionViaCTHPatientDrug;
		private EntityCollection<CTHDrugDayEntity> _cTHDrugDayCollectionViaCTHPatientDrug;
		private EntityCollection<CTHLabDetailEntity> _cTHLabDetailCollectionViaCTHChemoLab;
		private EntityCollection<CTHPatientEntity> _cTHPatientCollectionViaCTHNotification;
		private EntityCollection<CTHPatientEntity> _cTHPatientCollectionViaCTHPatientSymptom;
		private EntityCollection<CTHPatientSymptomEntity> _cTHPatientSymptomCollectionViaCTHNotification;
		private EntityCollection<CTHSymptomEntity> _cTHSymptomCollectionViaCTHPatientSymptom;
		private CTHChemotherapyProtocolEntity _cTHChemotherapyProtocolItem;
		private CTHPatientClinicalDataEntity _cTHPatientClinicalDataItem;
		private CTHProtocolCycleEntity _cTHProtocolCycleItem;
		private CTHSpecialCaseEntity _cTHSpecialCaseItem;
		private CTHSpecialCasePartEntity _cTHSpecialCasePartItem;
		private CTHTreatmentTypeEntity _cTHTreatmentTypeItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHKimoSurveyEntityStaticMetaData _staticMetaData = new CTHKimoSurveyEntityStaticMetaData();
		private static CTHKimoSurveyRelations _relationsFactory = new CTHKimoSurveyRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHChemotherapyProtocolItem</summary>
			public static readonly string CTHChemotherapyProtocolItem = "CTHChemotherapyProtocolItem";
			/// <summary>Member name CTHPatientClinicalDataItem</summary>
			public static readonly string CTHPatientClinicalDataItem = "CTHPatientClinicalDataItem";
			/// <summary>Member name CTHProtocolCycleItem</summary>
			public static readonly string CTHProtocolCycleItem = "CTHProtocolCycleItem";
			/// <summary>Member name CTHSpecialCaseItem</summary>
			public static readonly string CTHSpecialCaseItem = "CTHSpecialCaseItem";
			/// <summary>Member name CTHSpecialCasePartItem</summary>
			public static readonly string CTHSpecialCasePartItem = "CTHSpecialCasePartItem";
			/// <summary>Member name CTHTreatmentTypeItem</summary>
			public static readonly string CTHTreatmentTypeItem = "CTHTreatmentTypeItem";
			/// <summary>Member name CTHChemoLabCollection</summary>
			public static readonly string CTHChemoLabCollection = "CTHChemoLabCollection";
			/// <summary>Member name CTHNotificationCollection</summary>
			public static readonly string CTHNotificationCollection = "CTHNotificationCollection";
			/// <summary>Member name CTHPatientDrugCollection</summary>
			public static readonly string CTHPatientDrugCollection = "CTHPatientDrugCollection";
			/// <summary>Member name CTHPatientSymptomCollection</summary>
			public static readonly string CTHPatientSymptomCollection = "CTHPatientSymptomCollection";
			/// <summary>Member name CTHDoctorCollectionViaCTHNotification</summary>
			public static readonly string CTHDoctorCollectionViaCTHNotification = "CTHDoctorCollectionViaCTHNotification";
			/// <summary>Member name CTHDrugCollectionViaCTHPatientDrug</summary>
			public static readonly string CTHDrugCollectionViaCTHPatientDrug = "CTHDrugCollectionViaCTHPatientDrug";
			/// <summary>Member name CTHDrugDayCollectionViaCTHPatientDrug</summary>
			public static readonly string CTHDrugDayCollectionViaCTHPatientDrug = "CTHDrugDayCollectionViaCTHPatientDrug";
			/// <summary>Member name CTHLabDetailCollectionViaCTHChemoLab</summary>
			public static readonly string CTHLabDetailCollectionViaCTHChemoLab = "CTHLabDetailCollectionViaCTHChemoLab";
			/// <summary>Member name CTHPatientCollectionViaCTHNotification</summary>
			public static readonly string CTHPatientCollectionViaCTHNotification = "CTHPatientCollectionViaCTHNotification";
			/// <summary>Member name CTHPatientCollectionViaCTHPatientSymptom</summary>
			public static readonly string CTHPatientCollectionViaCTHPatientSymptom = "CTHPatientCollectionViaCTHPatientSymptom";
			/// <summary>Member name CTHPatientSymptomCollectionViaCTHNotification</summary>
			public static readonly string CTHPatientSymptomCollectionViaCTHNotification = "CTHPatientSymptomCollectionViaCTHNotification";
			/// <summary>Member name CTHSymptomCollectionViaCTHPatientSymptom</summary>
			public static readonly string CTHSymptomCollectionViaCTHPatientSymptom = "CTHSymptomCollectionViaCTHPatientSymptom";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHKimoSurveyEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHKimoSurveyEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHKimoSurveyEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity, typeof(CTHKimoSurveyEntity), typeof(CTHKimoSurveyEntityFactory), false);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHChemoLabEntity>>("CTHChemoLabCollection", a => a._cTHChemoLabCollection, (a, b) => a._cTHChemoLabCollection = b, a => a.CTHChemoLabCollection, () => new CTHKimoSurveyRelations().CTHChemoLabEntityUsingChemoID, typeof(CTHChemoLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHChemoLabEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHNotificationEntity>>("CTHNotificationCollection", a => a._cTHNotificationCollection, (a, b) => a._cTHNotificationCollection = b, a => a.CTHNotificationCollection, () => new CTHKimoSurveyRelations().CTHNotificationEntityUsingKimoID, typeof(CTHNotificationEntity), (int)SStorm.CTH.DAL.EntityType.CTHNotificationEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHPatientDrugEntity>>("CTHPatientDrugCollection", a => a._cTHPatientDrugCollection, (a, b) => a._cTHPatientDrugCollection = b, a => a.CTHPatientDrugCollection, () => new CTHKimoSurveyRelations().CTHPatientDrugEntityUsingKimoID, typeof(CTHPatientDrugEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientDrugEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHPatientSymptomEntity>>("CTHPatientSymptomCollection", a => a._cTHPatientSymptomCollection, (a, b) => a._cTHPatientSymptomCollection = b, a => a.CTHPatientSymptomCollection, () => new CTHKimoSurveyRelations().CTHPatientSymptomEntityUsingChemoID, typeof(CTHPatientSymptomEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientSymptomEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHChemotherapyProtocolEntity>("CTHChemotherapyProtocolItem", "CTHKimoSurveyCollection", (a, b) => a._cTHChemotherapyProtocolItem = b, a => a._cTHChemotherapyProtocolItem, (a, b) => a.CTHChemotherapyProtocolItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHChemotherapyProtocolEntityUsingProtocolIDStatic, ()=>new CTHKimoSurveyRelations().CTHChemotherapyProtocolEntityUsingProtocolID, null, new int[] { (int)CTHKimoSurveyFieldIndex.ProtocolID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHPatientClinicalDataEntity>("CTHPatientClinicalDataItem", "CTHKimoSurveyCollection", (a, b) => a._cTHPatientClinicalDataItem = b, a => a._cTHPatientClinicalDataItem, (a, b) => a.CTHPatientClinicalDataItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHPatientClinicalDataEntityUsingPatientClinicalDataIDStatic, ()=>new CTHKimoSurveyRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID, null, new int[] { (int)CTHKimoSurveyFieldIndex.PatientClinicalDataID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHProtocolCycleEntity>("CTHProtocolCycleItem", "CTHKimoSurveyCollection", (a, b) => a._cTHProtocolCycleItem = b, a => a._cTHProtocolCycleItem, (a, b) => a.CTHProtocolCycleItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHProtocolCycleEntityUsingCycleIDStatic, ()=>new CTHKimoSurveyRelations().CTHProtocolCycleEntityUsingCycleID, null, new int[] { (int)CTHKimoSurveyFieldIndex.CycleID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHSpecialCaseEntity>("CTHSpecialCaseItem", "CTHKimoSurveyCollection", (a, b) => a._cTHSpecialCaseItem = b, a => a._cTHSpecialCaseItem, (a, b) => a.CTHSpecialCaseItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHSpecialCaseEntityUsingSpecialCaseIDStatic, ()=>new CTHKimoSurveyRelations().CTHSpecialCaseEntityUsingSpecialCaseID, null, new int[] { (int)CTHKimoSurveyFieldIndex.SpecialCaseID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHSpecialCasePartEntity>("CTHSpecialCasePartItem", "CTHKimoSurveyCollection", (a, b) => a._cTHSpecialCasePartItem = b, a => a._cTHSpecialCasePartItem, (a, b) => a.CTHSpecialCasePartItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHSpecialCasePartEntityUsingSpecialCasePartIDStatic, ()=>new CTHKimoSurveyRelations().CTHSpecialCasePartEntityUsingSpecialCasePartID, null, new int[] { (int)CTHKimoSurveyFieldIndex.SpecialCasePartID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, CTHTreatmentTypeEntity>("CTHTreatmentTypeItem", "CTHKimoSurveyCollection", (a, b) => a._cTHTreatmentTypeItem = b, a => a._cTHTreatmentTypeItem, (a, b) => a.CTHTreatmentTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHKimoSurveyRelations.CTHTreatmentTypeEntityUsingTreatementTypeIDStatic, ()=>new CTHKimoSurveyRelations().CTHTreatmentTypeEntityUsingTreatementTypeID, null, new int[] { (int)CTHKimoSurveyFieldIndex.TreatementTypeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHDoctorEntity>>("CTHDoctorCollectionViaCTHNotification", a => a._cTHDoctorCollectionViaCTHNotification, (a, b) => a._cTHDoctorCollectionViaCTHNotification = b, a => a.CTHDoctorCollectionViaCTHNotification, () => new CTHKimoSurveyRelations().CTHNotificationEntityUsingKimoID, () => new CTHNotificationRelations().CTHDoctorEntityUsingDoctorID, "CTHKimoSurveyEntity__", "CTHNotification_", typeof(CTHDoctorEntity), (int)SStorm.CTH.DAL.EntityType.CTHDoctorEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHDrugEntity>>("CTHDrugCollectionViaCTHPatientDrug", a => a._cTHDrugCollectionViaCTHPatientDrug, (a, b) => a._cTHDrugCollectionViaCTHPatientDrug = b, a => a.CTHDrugCollectionViaCTHPatientDrug, () => new CTHKimoSurveyRelations().CTHPatientDrugEntityUsingKimoID, () => new CTHPatientDrugRelations().CTHDrugEntityUsingDrugID, "CTHKimoSurveyEntity__", "CTHPatientDrug_", typeof(CTHDrugEntity), (int)SStorm.CTH.DAL.EntityType.CTHDrugEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHDrugDayEntity>>("CTHDrugDayCollectionViaCTHPatientDrug", a => a._cTHDrugDayCollectionViaCTHPatientDrug, (a, b) => a._cTHDrugDayCollectionViaCTHPatientDrug = b, a => a.CTHDrugDayCollectionViaCTHPatientDrug, () => new CTHKimoSurveyRelations().CTHPatientDrugEntityUsingKimoID, () => new CTHPatientDrugRelations().CTHDrugDayEntityUsingDrugDayID, "CTHKimoSurveyEntity__", "CTHPatientDrug_", typeof(CTHDrugDayEntity), (int)SStorm.CTH.DAL.EntityType.CTHDrugDayEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHLabDetailEntity>>("CTHLabDetailCollectionViaCTHChemoLab", a => a._cTHLabDetailCollectionViaCTHChemoLab, (a, b) => a._cTHLabDetailCollectionViaCTHChemoLab = b, a => a.CTHLabDetailCollectionViaCTHChemoLab, () => new CTHKimoSurveyRelations().CTHChemoLabEntityUsingChemoID, () => new CTHChemoLabRelations().CTHLabDetailEntityUsingLabDetailsID, "CTHKimoSurveyEntity__", "CTHChemoLab_", typeof(CTHLabDetailEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabDetailEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHPatientEntity>>("CTHPatientCollectionViaCTHNotification", a => a._cTHPatientCollectionViaCTHNotification, (a, b) => a._cTHPatientCollectionViaCTHNotification = b, a => a.CTHPatientCollectionViaCTHNotification, () => new CTHKimoSurveyRelations().CTHNotificationEntityUsingKimoID, () => new CTHNotificationRelations().CTHPatientEntityUsingPatientID, "CTHKimoSurveyEntity__", "CTHNotification_", typeof(CTHPatientEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHPatientEntity>>("CTHPatientCollectionViaCTHPatientSymptom", a => a._cTHPatientCollectionViaCTHPatientSymptom, (a, b) => a._cTHPatientCollectionViaCTHPatientSymptom = b, a => a.CTHPatientCollectionViaCTHPatientSymptom, () => new CTHKimoSurveyRelations().CTHPatientSymptomEntityUsingChemoID, () => new CTHPatientSymptomRelations().CTHPatientEntityUsingPatientID, "CTHKimoSurveyEntity__", "CTHPatientSymptom_", typeof(CTHPatientEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHPatientSymptomEntity>>("CTHPatientSymptomCollectionViaCTHNotification", a => a._cTHPatientSymptomCollectionViaCTHNotification, (a, b) => a._cTHPatientSymptomCollectionViaCTHNotification = b, a => a.CTHPatientSymptomCollectionViaCTHNotification, () => new CTHKimoSurveyRelations().CTHNotificationEntityUsingKimoID, () => new CTHNotificationRelations().CTHPatientSymptomEntityUsingPatientSymptomID, "CTHKimoSurveyEntity__", "CTHNotification_", typeof(CTHPatientSymptomEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientSymptomEntity);
				AddNavigatorMetaData<CTHKimoSurveyEntity, EntityCollection<CTHSymptomEntity>>("CTHSymptomCollectionViaCTHPatientSymptom", a => a._cTHSymptomCollectionViaCTHPatientSymptom, (a, b) => a._cTHSymptomCollectionViaCTHPatientSymptom = b, a => a.CTHSymptomCollectionViaCTHPatientSymptom, () => new CTHKimoSurveyRelations().CTHPatientSymptomEntityUsingChemoID, () => new CTHPatientSymptomRelations().CTHSymptomEntityUsingSymptomID, "CTHKimoSurveyEntity__", "CTHPatientSymptom_", typeof(CTHSymptomEntity), (int)SStorm.CTH.DAL.EntityType.CTHSymptomEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHKimoSurveyEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHKimoSurveyEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHKimoSurveyEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHKimoSurveyEntity</param>
		public CTHKimoSurveyEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHKimoSurvey which data should be fetched into this CTHKimoSurvey object</param>
		public CTHKimoSurveyEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHKimoSurvey which data should be fetched into this CTHKimoSurvey object</param>
		/// <param name="validator">The custom validator object for this CTHKimoSurveyEntity</param>
		public CTHKimoSurveyEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHKimoSurveyEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHChemoLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemoLabCollection() { return CreateRelationInfoForNavigator("CTHChemoLabCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHNotification' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHNotificationCollection() { return CreateRelationInfoForNavigator("CTHNotificationCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientDrug' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientDrugCollection() { return CreateRelationInfoForNavigator("CTHPatientDrugCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientSymptom' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientSymptomCollection() { return CreateRelationInfoForNavigator("CTHPatientSymptomCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHDoctor' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHDoctorCollectionViaCTHNotification() { return CreateRelationInfoForNavigator("CTHDoctorCollectionViaCTHNotification"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHDrug' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHDrugCollectionViaCTHPatientDrug() { return CreateRelationInfoForNavigator("CTHDrugCollectionViaCTHPatientDrug"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHDrugDay' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHDrugDayCollectionViaCTHPatientDrug() { return CreateRelationInfoForNavigator("CTHDrugDayCollectionViaCTHPatientDrug"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLabDetail' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabDetailCollectionViaCTHChemoLab() { return CreateRelationInfoForNavigator("CTHLabDetailCollectionViaCTHChemoLab"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientCollectionViaCTHNotification() { return CreateRelationInfoForNavigator("CTHPatientCollectionViaCTHNotification"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientCollectionViaCTHPatientSymptom() { return CreateRelationInfoForNavigator("CTHPatientCollectionViaCTHPatientSymptom"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientSymptom' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientSymptomCollectionViaCTHNotification() { return CreateRelationInfoForNavigator("CTHPatientSymptomCollectionViaCTHNotification"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSymptom' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSymptomCollectionViaCTHPatientSymptom() { return CreateRelationInfoForNavigator("CTHSymptomCollectionViaCTHPatientSymptom"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHChemotherapyProtocol' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemotherapyProtocolItem() { return CreateRelationInfoForNavigator("CTHChemotherapyProtocolItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataItem() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHProtocolCycle' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHProtocolCycleItem() { return CreateRelationInfoForNavigator("CTHProtocolCycleItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHSpecialCase' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCaseItem() { return CreateRelationInfoForNavigator("CTHSpecialCaseItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHSpecialCasePart' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCasePartItem() { return CreateRelationInfoForNavigator("CTHSpecialCasePartItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHTreatmentType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTreatmentTypeItem() { return CreateRelationInfoForNavigator("CTHTreatmentTypeItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHKimoSurveyEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHKimoSurveyRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemoLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemoLabCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHChemoLabCollection", CommonEntityBase.CreateEntityCollection<CTHChemoLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHNotification' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHNotificationCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHNotificationCollection", CommonEntityBase.CreateEntityCollection<CTHNotificationEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientDrug' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientDrugCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientDrugCollection", CommonEntityBase.CreateEntityCollection<CTHPatientDrugEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientSymptom' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientSymptomCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientSymptomCollection", CommonEntityBase.CreateEntityCollection<CTHPatientSymptomEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHDoctor' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHDoctorCollectionViaCTHNotification { get { return _staticMetaData.GetPrefetchPathElement("CTHDoctorCollectionViaCTHNotification", CommonEntityBase.CreateEntityCollection<CTHDoctorEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHDrug' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHDrugCollectionViaCTHPatientDrug { get { return _staticMetaData.GetPrefetchPathElement("CTHDrugCollectionViaCTHPatientDrug", CommonEntityBase.CreateEntityCollection<CTHDrugEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHDrugDay' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHDrugDayCollectionViaCTHPatientDrug { get { return _staticMetaData.GetPrefetchPathElement("CTHDrugDayCollectionViaCTHPatientDrug", CommonEntityBase.CreateEntityCollection<CTHDrugDayEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLabDetail' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabDetailCollectionViaCTHChemoLab { get { return _staticMetaData.GetPrefetchPathElement("CTHLabDetailCollectionViaCTHChemoLab", CommonEntityBase.CreateEntityCollection<CTHLabDetailEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientCollectionViaCTHNotification { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientCollectionViaCTHNotification", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientCollectionViaCTHPatientSymptom { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientCollectionViaCTHPatientSymptom", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientSymptom' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientSymptomCollectionViaCTHNotification { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientSymptomCollectionViaCTHNotification", CommonEntityBase.CreateEntityCollection<CTHPatientSymptomEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSymptom' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSymptomCollectionViaCTHPatientSymptom { get { return _staticMetaData.GetPrefetchPathElement("CTHSymptomCollectionViaCTHPatientSymptom", CommonEntityBase.CreateEntityCollection<CTHSymptomEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemotherapyProtocol' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemotherapyProtocolItem { get { return _staticMetaData.GetPrefetchPathElement("CTHChemotherapyProtocolItem", CommonEntityBase.CreateEntityCollection<CTHChemotherapyProtocolEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataItem { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataItem", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHProtocolCycle' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHProtocolCycleItem { get { return _staticMetaData.GetPrefetchPathElement("CTHProtocolCycleItem", CommonEntityBase.CreateEntityCollection<CTHProtocolCycleEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCase' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCaseItem { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCaseItem", CommonEntityBase.CreateEntityCollection<CTHSpecialCaseEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCasePart' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCasePartItem { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCasePartItem", CommonEntityBase.CreateEntityCollection<CTHSpecialCasePartEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTreatmentType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTreatmentTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHTreatmentTypeItem", CommonEntityBase.CreateEntityCollection<CTHTreatmentTypeEntity>()); } }

		/// <summary>The AdjustBodyWeight property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."AdjustBodyWeight".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> AdjustBodyWeight
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.AdjustBodyWeight, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.AdjustBodyWeight, value); }
		}

		/// <summary>The BodyMassIndex property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."BodyMassIndex".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> BodyMassIndex
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.BodyMassIndex, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.BodyMassIndex, value); }
		}

		/// <summary>The BodySurfaceArea property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."BodySurfaceArea".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> BodySurfaceArea
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.BodySurfaceArea, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.BodySurfaceArea, value); }
		}

		/// <summary>The BodySurfaceAreaInAdultAmputees property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."BodySurfaceAreaInAdultAmputees".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> BodySurfaceAreaInAdultAmputees
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.BodySurfaceAreaInAdultAmputees, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.BodySurfaceAreaInAdultAmputees, value); }
		}

		/// <summary>The CRCL property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."CRCL".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> CRCL
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.CRCL, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.CRCL, value); }
		}

		/// <summary>The CycleID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."CycleID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CycleID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.CycleID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.CycleID, value); }
		}

		/// <summary>The CycleNum property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."CycleNum".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CycleNum
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.CycleNum, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.CycleNum, value); }
		}

		/// <summary>The Date property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."Date".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> Date
		{
			get { return (Nullable<System.DateTime>)GetValue((int)CTHKimoSurveyFieldIndex.Date, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.Date, value); }
		}

		/// <summary>The Days property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."Days".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> Days
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.Days, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.Days, value); }
		}

		/// <summary>The Height property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."Height".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> Height
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.Height, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.Height, value); }
		}

		/// <summary>The ID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHKimoSurveyFieldIndex.ID, true); }
			set { SetValue((int)CTHKimoSurveyFieldIndex.ID, value); }		}

		/// <summary>The IsSpecialCase property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."IsSpecialCase".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Boolean> IsSpecialCase
		{
			get { return (Nullable<System.Boolean>)GetValue((int)CTHKimoSurveyFieldIndex.IsSpecialCase, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.IsSpecialCase, value); }
		}

		/// <summary>The LeanBodyWeight property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."LeanBodyWeight".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> LeanBodyWeight
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.LeanBodyWeight, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.LeanBodyWeight, value); }
		}

		/// <summary>The PatientClinicalDataID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."PatientClinicalDataID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> PatientClinicalDataID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.PatientClinicalDataID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.PatientClinicalDataID, value); }
		}

		/// <summary>The ProtocolID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."ProtocolID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ProtocolID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.ProtocolID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.ProtocolID, value); }
		}

		/// <summary>The SerumCreatinine property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."SerumCreatinine".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> SerumCreatinine
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.SerumCreatinine, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.SerumCreatinine, value); }
		}

		/// <summary>The SpecialCaseID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."SpecialCaseID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> SpecialCaseID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.SpecialCaseID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.SpecialCaseID, value); }
		}

		/// <summary>The SpecialCasePartID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."SpecialCasePartID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> SpecialCasePartID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.SpecialCasePartID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.SpecialCasePartID, value); }
		}

		/// <summary>The TreatementTypeID property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."TreatementTypeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> TreatementTypeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHKimoSurveyFieldIndex.TreatementTypeID, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.TreatementTypeID, value); }
		}

		/// <summary>The Weight property of the Entity CTHKimoSurvey<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHKimoSurvey"."Weight".<br/>Table field type characteristics (type, precision, scale, length): Decimal, 18, 3, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> Weight
		{
			get { return (Nullable<System.Decimal>)GetValue((int)CTHKimoSurveyFieldIndex.Weight, false); }
			set	{ SetValue((int)CTHKimoSurveyFieldIndex.Weight, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHChemoLabEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHChemoLabEntity))]
		public virtual EntityCollection<CTHChemoLabEntity> CTHChemoLabCollection { get { return GetOrCreateEntityCollection<CTHChemoLabEntity, CTHChemoLabEntityFactory>("CTHKimoSurveyItem", true, false, ref _cTHChemoLabCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHNotificationEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHNotificationEntity))]
		public virtual EntityCollection<CTHNotificationEntity> CTHNotificationCollection { get { return GetOrCreateEntityCollection<CTHNotificationEntity, CTHNotificationEntityFactory>("CTHKimoSurveyItem", true, false, ref _cTHNotificationCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientDrugEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientDrugEntity))]
		public virtual EntityCollection<CTHPatientDrugEntity> CTHPatientDrugCollection { get { return GetOrCreateEntityCollection<CTHPatientDrugEntity, CTHPatientDrugEntityFactory>("CTHKimoSurveyItem", true, false, ref _cTHPatientDrugCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientSymptomEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientSymptomEntity))]
		public virtual EntityCollection<CTHPatientSymptomEntity> CTHPatientSymptomCollection { get { return GetOrCreateEntityCollection<CTHPatientSymptomEntity, CTHPatientSymptomEntityFactory>("CTHKimoSurveyItem", true, false, ref _cTHPatientSymptomCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHDoctorEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHDoctorEntity))]
		public virtual EntityCollection<CTHDoctorEntity> CTHDoctorCollectionViaCTHNotification { get { return GetOrCreateEntityCollection<CTHDoctorEntity, CTHDoctorEntityFactory>("CTHKimoSurveyCollectionViaCTHNotification", false, true, ref _cTHDoctorCollectionViaCTHNotification); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHDrugEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHDrugEntity))]
		public virtual EntityCollection<CTHDrugEntity> CTHDrugCollectionViaCTHPatientDrug { get { return GetOrCreateEntityCollection<CTHDrugEntity, CTHDrugEntityFactory>("CTHKimoSurveyCollectionViaCTHPatientDrug", false, true, ref _cTHDrugCollectionViaCTHPatientDrug); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHDrugDayEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHDrugDayEntity))]
		public virtual EntityCollection<CTHDrugDayEntity> CTHDrugDayCollectionViaCTHPatientDrug { get { return GetOrCreateEntityCollection<CTHDrugDayEntity, CTHDrugDayEntityFactory>("CTHKimoSurveyCollectionViaCTHPatientDrug", false, true, ref _cTHDrugDayCollectionViaCTHPatientDrug); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabDetailEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabDetailEntity))]
		public virtual EntityCollection<CTHLabDetailEntity> CTHLabDetailCollectionViaCTHChemoLab { get { return GetOrCreateEntityCollection<CTHLabDetailEntity, CTHLabDetailEntityFactory>("CTHKimoSurveyCollectionViaCTHChemoLab", false, true, ref _cTHLabDetailCollectionViaCTHChemoLab); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientEntity))]
		public virtual EntityCollection<CTHPatientEntity> CTHPatientCollectionViaCTHNotification { get { return GetOrCreateEntityCollection<CTHPatientEntity, CTHPatientEntityFactory>("CTHKimoSurveyCollectionViaCTHNotification", false, true, ref _cTHPatientCollectionViaCTHNotification); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientEntity))]
		public virtual EntityCollection<CTHPatientEntity> CTHPatientCollectionViaCTHPatientSymptom { get { return GetOrCreateEntityCollection<CTHPatientEntity, CTHPatientEntityFactory>("CTHKimoSurveyCollectionViaCTHPatientSymptom", false, true, ref _cTHPatientCollectionViaCTHPatientSymptom); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientSymptomEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientSymptomEntity))]
		public virtual EntityCollection<CTHPatientSymptomEntity> CTHPatientSymptomCollectionViaCTHNotification { get { return GetOrCreateEntityCollection<CTHPatientSymptomEntity, CTHPatientSymptomEntityFactory>("CTHKimoSurveyCollectionViaCTHNotification", false, true, ref _cTHPatientSymptomCollectionViaCTHNotification); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSymptomEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSymptomEntity))]
		public virtual EntityCollection<CTHSymptomEntity> CTHSymptomCollectionViaCTHPatientSymptom { get { return GetOrCreateEntityCollection<CTHSymptomEntity, CTHSymptomEntityFactory>("CTHKimoSurveyCollectionViaCTHPatientSymptom", false, true, ref _cTHSymptomCollectionViaCTHPatientSymptom); } }

		/// <summary>Gets / sets related entity of type 'CTHChemotherapyProtocolEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHChemotherapyProtocolEntity CTHChemotherapyProtocolItem
		{
			get { return _cTHChemotherapyProtocolItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHChemotherapyProtocolItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHPatientClinicalDataEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHPatientClinicalDataEntity CTHPatientClinicalDataItem
		{
			get { return _cTHPatientClinicalDataItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHPatientClinicalDataItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHProtocolCycleEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHProtocolCycleEntity CTHProtocolCycleItem
		{
			get { return _cTHProtocolCycleItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHProtocolCycleItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHSpecialCaseEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHSpecialCaseEntity CTHSpecialCaseItem
		{
			get { return _cTHSpecialCaseItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHSpecialCaseItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHSpecialCasePartEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHSpecialCasePartEntity CTHSpecialCasePartItem
		{
			get { return _cTHSpecialCasePartItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHSpecialCasePartItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHTreatmentTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHTreatmentTypeEntity CTHTreatmentTypeItem
		{
			get { return _cTHTreatmentTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHTreatmentTypeItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHKimoSurveyFieldIndex
	{
		///<summary>AdjustBodyWeight. </summary>
		AdjustBodyWeight,
		///<summary>BodyMassIndex. </summary>
		BodyMassIndex,
		///<summary>BodySurfaceArea. </summary>
		BodySurfaceArea,
		///<summary>BodySurfaceAreaInAdultAmputees. </summary>
		BodySurfaceAreaInAdultAmputees,
		///<summary>CRCL. </summary>
		CRCL,
		///<summary>CycleID. </summary>
		CycleID,
		///<summary>CycleNum. </summary>
		CycleNum,
		///<summary>Date. </summary>
		Date,
		///<summary>Days. </summary>
		Days,
		///<summary>Height. </summary>
		Height,
		///<summary>ID. </summary>
		ID,
		///<summary>IsSpecialCase. </summary>
		IsSpecialCase,
		///<summary>LeanBodyWeight. </summary>
		LeanBodyWeight,
		///<summary>PatientClinicalDataID. </summary>
		PatientClinicalDataID,
		///<summary>ProtocolID. </summary>
		ProtocolID,
		///<summary>SerumCreatinine. </summary>
		SerumCreatinine,
		///<summary>SpecialCaseID. </summary>
		SpecialCaseID,
		///<summary>SpecialCasePartID. </summary>
		SpecialCasePartID,
		///<summary>TreatementTypeID. </summary>
		TreatementTypeID,
		///<summary>Weight. </summary>
		Weight,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHKimoSurvey. </summary>
	public partial class CTHKimoSurveyRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHChemoLabEntity over the 1:n relation they have, using the relation between the fields: CTHKimoSurvey.ID - CTHChemoLab.ChemoID</summary>
		public virtual IEntityRelation CTHChemoLabEntityUsingChemoID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHChemoLabCollection", true, new[] { CTHKimoSurveyFields.ID, CTHChemoLabFields.ChemoID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHNotificationEntity over the 1:n relation they have, using the relation between the fields: CTHKimoSurvey.ID - CTHNotification.KimoID</summary>
		public virtual IEntityRelation CTHNotificationEntityUsingKimoID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHNotificationCollection", true, new[] { CTHKimoSurveyFields.ID, CTHNotificationFields.KimoID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHPatientDrugEntity over the 1:n relation they have, using the relation between the fields: CTHKimoSurvey.ID - CTHPatientDrug.KimoID</summary>
		public virtual IEntityRelation CTHPatientDrugEntityUsingKimoID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientDrugCollection", true, new[] { CTHKimoSurveyFields.ID, CTHPatientDrugFields.KimoID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHPatientSymptomEntity over the 1:n relation they have, using the relation between the fields: CTHKimoSurvey.ID - CTHPatientSymptom.ChemoID</summary>
		public virtual IEntityRelation CTHPatientSymptomEntityUsingChemoID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientSymptomCollection", true, new[] { CTHKimoSurveyFields.ID, CTHPatientSymptomFields.ChemoID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHChemotherapyProtocolEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.ProtocolID - CTHChemotherapyProtocol.ID</summary>
		public virtual IEntityRelation CTHChemotherapyProtocolEntityUsingProtocolID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHChemotherapyProtocolItem", false, new[] { CTHChemotherapyProtocolFields.ID, CTHKimoSurveyFields.ProtocolID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHPatientClinicalDataEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.PatientClinicalDataID - CTHPatientClinicalData.ID</summary>
		public virtual IEntityRelation CTHPatientClinicalDataEntityUsingPatientClinicalDataID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHPatientClinicalDataItem", false, new[] { CTHPatientClinicalDataFields.ID, CTHKimoSurveyFields.PatientClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHProtocolCycleEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.CycleID - CTHProtocolCycle.ID</summary>
		public virtual IEntityRelation CTHProtocolCycleEntityUsingCycleID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHProtocolCycleItem", false, new[] { CTHProtocolCycleFields.ID, CTHKimoSurveyFields.CycleID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHSpecialCaseEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.SpecialCaseID - CTHSpecialCase.ID</summary>
		public virtual IEntityRelation CTHSpecialCaseEntityUsingSpecialCaseID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHSpecialCaseItem", false, new[] { CTHSpecialCaseFields.ID, CTHKimoSurveyFields.SpecialCaseID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHSpecialCasePartEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.SpecialCasePartID - CTHSpecialCasePart.ID</summary>
		public virtual IEntityRelation CTHSpecialCasePartEntityUsingSpecialCasePartID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHSpecialCasePartItem", false, new[] { CTHSpecialCasePartFields.ID, CTHKimoSurveyFields.SpecialCasePartID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHKimoSurveyEntity and CTHTreatmentTypeEntity over the m:1 relation they have, using the relation between the fields: CTHKimoSurvey.TreatementTypeID - CTHTreatmentType.ID</summary>
		public virtual IEntityRelation CTHTreatmentTypeEntityUsingTreatementTypeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHTreatmentTypeItem", false, new[] { CTHTreatmentTypeFields.ID, CTHKimoSurveyFields.TreatementTypeID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHKimoSurveyRelations
	{
		internal static readonly IEntityRelation CTHChemoLabEntityUsingChemoIDStatic = new CTHKimoSurveyRelations().CTHChemoLabEntityUsingChemoID;
		internal static readonly IEntityRelation CTHNotificationEntityUsingKimoIDStatic = new CTHKimoSurveyRelations().CTHNotificationEntityUsingKimoID;
		internal static readonly IEntityRelation CTHPatientDrugEntityUsingKimoIDStatic = new CTHKimoSurveyRelations().CTHPatientDrugEntityUsingKimoID;
		internal static readonly IEntityRelation CTHPatientSymptomEntityUsingChemoIDStatic = new CTHKimoSurveyRelations().CTHPatientSymptomEntityUsingChemoID;
		internal static readonly IEntityRelation CTHChemotherapyProtocolEntityUsingProtocolIDStatic = new CTHKimoSurveyRelations().CTHChemotherapyProtocolEntityUsingProtocolID;
		internal static readonly IEntityRelation CTHPatientClinicalDataEntityUsingPatientClinicalDataIDStatic = new CTHKimoSurveyRelations().CTHPatientClinicalDataEntityUsingPatientClinicalDataID;
		internal static readonly IEntityRelation CTHProtocolCycleEntityUsingCycleIDStatic = new CTHKimoSurveyRelations().CTHProtocolCycleEntityUsingCycleID;
		internal static readonly IEntityRelation CTHSpecialCaseEntityUsingSpecialCaseIDStatic = new CTHKimoSurveyRelations().CTHSpecialCaseEntityUsingSpecialCaseID;
		internal static readonly IEntityRelation CTHSpecialCasePartEntityUsingSpecialCasePartIDStatic = new CTHKimoSurveyRelations().CTHSpecialCasePartEntityUsingSpecialCasePartID;
		internal static readonly IEntityRelation CTHTreatmentTypeEntityUsingTreatementTypeIDStatic = new CTHKimoSurveyRelations().CTHTreatmentTypeEntityUsingTreatementTypeID;

		/// <summary>CTor</summary>
		static StaticCTHKimoSurveyRelations() { }
	}
}
