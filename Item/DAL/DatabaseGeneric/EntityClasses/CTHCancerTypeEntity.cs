//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHCancerType'.<br/><br/></summary>
	[Serializable]
	public partial class CTHCancerTypeEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHCancerHistologicEntity> _cTHCancerHistologicCollection;
		private EntityCollection<CTHCancerMolecularEntity> _cTHCancerMolecularCollection;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollection;
		private EntityCollection<CTHChemotherapyProtocolEntity> _cTHChemotherapyProtocolCollection;
		private EntityCollection<CTHPatientClinicalDataEntity> _cTHPatientClinicalDataCollection;
		private EntityCollection<CTHStagingEntity> _cTHStagingCollection;
		private EntityCollection<CTHSurgeryTypeEntity> _cTHSurgeryTypeCollection;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollection;
		private EntityCollection<CTHTNMStagingMatrixEntity> _cTHTNMStagingMatrixCollection;
		private EntityCollection<CTHCancerHistologicEntity> _cTHCancerHistologicCollectionViaCTHCancerHistologic;
		private EntityCollection<CTHCancerHistologicEntity> _cTHCancerHistologicCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerMolecularEntity> _cTHCancerMolecularCollectionViaCTHCancerMolecular;
		private EntityCollection<CTHCancerMolecularEntity> _cTHCancerMolecularCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerSideEntity> _cTHCancerSideCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHPatientEntity> _cTHPatientCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHPreMedicationEntity> _cTHPreMedicationCollectionViaCTHChemotherapyProtocol;
		private EntityCollection<CTHStagingEntity> _cTHStagingCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHStagingEntity> _cTHStagingCollectionViaCTHTNMStagingMatrix;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix1;
		private EntityCollection<CTHTNMStagingEntity> _cTHTNMStagingCollectionViaCTHTNMStagingMatrix2;
		private EntityCollection<CTHTNMTypeEntity> _cTHTNMTypeCollectionViaCTHTNMStaging;
		private EntityCollection<CTHTumorGradeEntity> _cTHTumorGradeCollectionViaCTHPatientClinicalData;
		private CTHCancerTypeEntity _cTHCancerTypeItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHCancerTypeEntityStaticMetaData _staticMetaData = new CTHCancerTypeEntityStaticMetaData();
		private static CTHCancerTypeRelations _relationsFactory = new CTHCancerTypeRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHCancerTypeItem</summary>
			public static readonly string CTHCancerTypeItem = "CTHCancerTypeItem";
			/// <summary>Member name CTHCancerHistologicCollection</summary>
			public static readonly string CTHCancerHistologicCollection = "CTHCancerHistologicCollection";
			/// <summary>Member name CTHCancerMolecularCollection</summary>
			public static readonly string CTHCancerMolecularCollection = "CTHCancerMolecularCollection";
			/// <summary>Member name CTHCancerTypeCollection</summary>
			public static readonly string CTHCancerTypeCollection = "CTHCancerTypeCollection";
			/// <summary>Member name CTHChemotherapyProtocolCollection</summary>
			public static readonly string CTHChemotherapyProtocolCollection = "CTHChemotherapyProtocolCollection";
			/// <summary>Member name CTHPatientClinicalDataCollection</summary>
			public static readonly string CTHPatientClinicalDataCollection = "CTHPatientClinicalDataCollection";
			/// <summary>Member name CTHStagingCollection</summary>
			public static readonly string CTHStagingCollection = "CTHStagingCollection";
			/// <summary>Member name CTHSurgeryTypeCollection</summary>
			public static readonly string CTHSurgeryTypeCollection = "CTHSurgeryTypeCollection";
			/// <summary>Member name CTHTNMStagingCollection</summary>
			public static readonly string CTHTNMStagingCollection = "CTHTNMStagingCollection";
			/// <summary>Member name CTHTNMStagingMatrixCollection</summary>
			public static readonly string CTHTNMStagingMatrixCollection = "CTHTNMStagingMatrixCollection";
			/// <summary>Member name CTHCancerHistologicCollectionViaCTHCancerHistologic</summary>
			public static readonly string CTHCancerHistologicCollectionViaCTHCancerHistologic = "CTHCancerHistologicCollectionViaCTHCancerHistologic";
			/// <summary>Member name CTHCancerHistologicCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerHistologicCollectionViaCTHPatientClinicalData = "CTHCancerHistologicCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerMolecularCollectionViaCTHCancerMolecular</summary>
			public static readonly string CTHCancerMolecularCollectionViaCTHCancerMolecular = "CTHCancerMolecularCollectionViaCTHCancerMolecular";
			/// <summary>Member name CTHCancerMolecularCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerMolecularCollectionViaCTHPatientClinicalData = "CTHCancerMolecularCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerSideCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerSideCollectionViaCTHPatientClinicalData = "CTHCancerSideCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHPatientCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHPatientCollectionViaCTHPatientClinicalData = "CTHPatientCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHPreMedicationCollectionViaCTHChemotherapyProtocol</summary>
			public static readonly string CTHPreMedicationCollectionViaCTHChemotherapyProtocol = "CTHPreMedicationCollectionViaCTHChemotherapyProtocol";
			/// <summary>Member name CTHStagingCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHStagingCollectionViaCTHPatientClinicalData = "CTHStagingCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHStagingCollectionViaCTHTNMStagingMatrix</summary>
			public static readonly string CTHStagingCollectionViaCTHTNMStagingMatrix = "CTHStagingCollectionViaCTHTNMStagingMatrix";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix1</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix1 = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix1";
			/// <summary>Member name CTHTNMStagingCollectionViaCTHTNMStagingMatrix2</summary>
			public static readonly string CTHTNMStagingCollectionViaCTHTNMStagingMatrix2 = "CTHTNMStagingCollectionViaCTHTNMStagingMatrix2";
			/// <summary>Member name CTHTNMTypeCollectionViaCTHTNMStaging</summary>
			public static readonly string CTHTNMTypeCollectionViaCTHTNMStaging = "CTHTNMTypeCollectionViaCTHTNMStaging";
			/// <summary>Member name CTHTumorGradeCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHTumorGradeCollectionViaCTHPatientClinicalData = "CTHTumorGradeCollectionViaCTHPatientClinicalData";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHCancerTypeEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHCancerTypeEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHCancerTypeEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity, typeof(CTHCancerTypeEntity), typeof(CTHCancerTypeEntityFactory), false);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerHistologicEntity>>("CTHCancerHistologicCollection", a => a._cTHCancerHistologicCollection, (a, b) => a._cTHCancerHistologicCollection = b, a => a.CTHCancerHistologicCollection, () => new CTHCancerTypeRelations().CTHCancerHistologicEntityUsingCanerID, typeof(CTHCancerHistologicEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerMolecularEntity>>("CTHCancerMolecularCollection", a => a._cTHCancerMolecularCollection, (a, b) => a._cTHCancerMolecularCollection = b, a => a.CTHCancerMolecularCollection, () => new CTHCancerTypeRelations().CTHCancerMolecularEntityUsingCanerID, typeof(CTHCancerMolecularEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollection", a => a._cTHCancerTypeCollection, (a, b) => a._cTHCancerTypeCollection = b, a => a.CTHCancerTypeCollection, () => new CTHCancerTypeRelations().CTHCancerTypeEntityUsingParentID, typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHChemotherapyProtocolEntity>>("CTHChemotherapyProtocolCollection", a => a._cTHChemotherapyProtocolCollection, (a, b) => a._cTHChemotherapyProtocolCollection = b, a => a.CTHChemotherapyProtocolCollection, () => new CTHCancerTypeRelations().CTHChemotherapyProtocolEntityUsingCancerTypeID, typeof(CTHChemotherapyProtocolEntity), (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHPatientClinicalDataEntity>>("CTHPatientClinicalDataCollection", a => a._cTHPatientClinicalDataCollection, (a, b) => a._cTHPatientClinicalDataCollection = b, a => a.CTHPatientClinicalDataCollection, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, typeof(CTHPatientClinicalDataEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHStagingEntity>>("CTHStagingCollection", a => a._cTHStagingCollection, (a, b) => a._cTHStagingCollection = b, a => a.CTHStagingCollection, () => new CTHCancerTypeRelations().CTHStagingEntityUsingCancerTypeID, typeof(CTHStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHSurgeryTypeEntity>>("CTHSurgeryTypeCollection", a => a._cTHSurgeryTypeCollection, (a, b) => a._cTHSurgeryTypeCollection = b, a => a.CTHSurgeryTypeCollection, () => new CTHCancerTypeRelations().CTHSurgeryTypeEntityUsingCancerTypeID, typeof(CTHSurgeryTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHSurgeryTypeEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollection", a => a._cTHTNMStagingCollection, (a, b) => a._cTHTNMStagingCollection = b, a => a.CTHTNMStagingCollection, () => new CTHCancerTypeRelations().CTHTNMStagingEntityUsingCancerTypeID, typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMStagingMatrixEntity>>("CTHTNMStagingMatrixCollection", a => a._cTHTNMStagingMatrixCollection, (a, b) => a._cTHTNMStagingMatrixCollection = b, a => a.CTHTNMStagingMatrixCollection, () => new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID, typeof(CTHTNMStagingMatrixEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingMatrixEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, CTHCancerTypeEntity>("CTHCancerTypeItem", "CTHCancerTypeCollection", (a, b) => a._cTHCancerTypeItem = b, a => a._cTHCancerTypeItem, (a, b) => a.CTHCancerTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHCancerTypeRelations.CTHCancerTypeEntityUsingIDParentIDStatic, ()=>new CTHCancerTypeRelations().CTHCancerTypeEntityUsingIDParentID, null, new int[] { (int)CTHCancerTypeFieldIndex.ParentID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerHistologicEntity>>("CTHCancerHistologicCollectionViaCTHCancerHistologic", a => a._cTHCancerHistologicCollectionViaCTHCancerHistologic, (a, b) => a._cTHCancerHistologicCollectionViaCTHCancerHistologic = b, a => a.CTHCancerHistologicCollectionViaCTHCancerHistologic, () => new CTHCancerTypeRelations().CTHCancerHistologicEntityUsingCanerID, () => new CTHCancerHistologicRelations().CTHCancerHistologicEntityUsingParentID, "CTHCancerTypeEntity__", "CTHCancerHistologic_", typeof(CTHCancerHistologicEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerHistologicEntity>>("CTHCancerHistologicCollectionViaCTHPatientClinicalData", a => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerHistologicCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHCancerHistologicEntityUsingCancerHistologicalID, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHCancerHistologicEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerMolecularEntity>>("CTHCancerMolecularCollectionViaCTHCancerMolecular", a => a._cTHCancerMolecularCollectionViaCTHCancerMolecular, (a, b) => a._cTHCancerMolecularCollectionViaCTHCancerMolecular = b, a => a.CTHCancerMolecularCollectionViaCTHCancerMolecular, () => new CTHCancerTypeRelations().CTHCancerMolecularEntityUsingCanerID, () => new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingParentID, "CTHCancerTypeEntity__", "CTHCancerMolecular_", typeof(CTHCancerMolecularEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerMolecularEntity>>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", a => a._cTHCancerMolecularCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerMolecularCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerMolecularCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHCancerMolecularEntityUsingCancerMolecularID, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHCancerMolecularEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHCancerSideEntity>>("CTHCancerSideCollectionViaCTHPatientClinicalData", a => a._cTHCancerSideCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerSideCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerSideCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHCancerSideEntityUsingCancerSideId, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHCancerSideEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerSideEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHPatientEntity>>("CTHPatientCollectionViaCTHPatientClinicalData", a => a._cTHPatientCollectionViaCTHPatientClinicalData, (a, b) => a._cTHPatientCollectionViaCTHPatientClinicalData = b, a => a.CTHPatientCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHPatientEntityUsingPatientID, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHPatientEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHPreMedicationEntity>>("CTHPreMedicationCollectionViaCTHChemotherapyProtocol", a => a._cTHPreMedicationCollectionViaCTHChemotherapyProtocol, (a, b) => a._cTHPreMedicationCollectionViaCTHChemotherapyProtocol = b, a => a.CTHPreMedicationCollectionViaCTHChemotherapyProtocol, () => new CTHCancerTypeRelations().CTHChemotherapyProtocolEntityUsingCancerTypeID, () => new CTHChemotherapyProtocolRelations().CTHPreMedicationEntityUsingPremedicationID, "CTHCancerTypeEntity__", "CTHChemotherapyProtocol_", typeof(CTHPreMedicationEntity), (int)SStorm.CTH.DAL.EntityType.CTHPreMedicationEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHStagingEntity>>("CTHStagingCollectionViaCTHPatientClinicalData", a => a._cTHStagingCollectionViaCTHPatientClinicalData, (a, b) => a._cTHStagingCollectionViaCTHPatientClinicalData = b, a => a.CTHStagingCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHStagingEntityUsingStageGradeID, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHStagingEntity>>("CTHStagingCollectionViaCTHTNMStagingMatrix", a => a._cTHStagingCollectionViaCTHTNMStagingMatrix, (a, b) => a._cTHStagingCollectionViaCTHTNMStagingMatrix = b, a => a.CTHStagingCollectionViaCTHTNMStagingMatrix, () => new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID, () => new CTHTNMStagingMatrixRelations().CTHStagingEntityUsingStageID, "CTHCancerTypeEntity__", "CTHTNMStagingMatrix_", typeof(CTHStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix, () => new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingMID, "CTHCancerTypeEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix1, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix1 = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix1, () => new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingNID, "CTHCancerTypeEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMStagingEntity>>("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2", a => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix2, (a, b) => a._cTHTNMStagingCollectionViaCTHTNMStagingMatrix2 = b, a => a.CTHTNMStagingCollectionViaCTHTNMStagingMatrix2, () => new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID, () => new CTHTNMStagingMatrixRelations().CTHTNMStagingEntityUsingTID, "CTHCancerTypeEntity__", "CTHTNMStagingMatrix_", typeof(CTHTNMStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMStagingEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTNMTypeEntity>>("CTHTNMTypeCollectionViaCTHTNMStaging", a => a._cTHTNMTypeCollectionViaCTHTNMStaging, (a, b) => a._cTHTNMTypeCollectionViaCTHTNMStaging = b, a => a.CTHTNMTypeCollectionViaCTHTNMStaging, () => new CTHCancerTypeRelations().CTHTNMStagingEntityUsingCancerTypeID, () => new CTHTNMStagingRelations().CTHTNMTypeEntityUsingTNMTypeID, "CTHCancerTypeEntity__", "CTHTNMStaging_", typeof(CTHTNMTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTNMTypeEntity);
				AddNavigatorMetaData<CTHCancerTypeEntity, EntityCollection<CTHTumorGradeEntity>>("CTHTumorGradeCollectionViaCTHPatientClinicalData", a => a._cTHTumorGradeCollectionViaCTHPatientClinicalData, (a, b) => a._cTHTumorGradeCollectionViaCTHPatientClinicalData = b, a => a.CTHTumorGradeCollectionViaCTHPatientClinicalData, () => new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID, () => new CTHPatientClinicalDataRelations().CTHTumorGradeEntityUsingTumorGradeID, "CTHCancerTypeEntity__", "CTHPatientClinicalData_", typeof(CTHTumorGradeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHCancerTypeEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHCancerTypeEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHCancerTypeEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHCancerTypeEntity</param>
		public CTHCancerTypeEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCancerType which data should be fetched into this CTHCancerType object</param>
		public CTHCancerTypeEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCancerType which data should be fetched into this CTHCancerType object</param>
		/// <param name="validator">The custom validator object for this CTHCancerTypeEntity</param>
		public CTHCancerTypeEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHCancerTypeEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicCollection() { return CreateRelationInfoForNavigator("CTHCancerHistologicCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularCollection() { return CreateRelationInfoForNavigator("CTHCancerMolecularCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollection() { return CreateRelationInfoForNavigator("CTHCancerTypeCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHChemotherapyProtocol' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemotherapyProtocolCollection() { return CreateRelationInfoForNavigator("CTHChemotherapyProtocolCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataCollection() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHStagingCollection() { return CreateRelationInfoForNavigator("CTHStagingCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSurgeryType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSurgeryTypeCollection() { return CreateRelationInfoForNavigator("CTHSurgeryTypeCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollection() { return CreateRelationInfoForNavigator("CTHTNMStagingCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStagingMatrix' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingMatrixCollection() { return CreateRelationInfoForNavigator("CTHTNMStagingMatrixCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicCollectionViaCTHCancerHistologic() { return CreateRelationInfoForNavigator("CTHCancerHistologicCollectionViaCTHCancerHistologic"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerHistologicCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularCollectionViaCTHCancerMolecular() { return CreateRelationInfoForNavigator("CTHCancerMolecularCollectionViaCTHCancerMolecular"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerMolecularCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerSide' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerSideCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerSideCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHPatientCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPreMedication' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPreMedicationCollectionViaCTHChemotherapyProtocol() { return CreateRelationInfoForNavigator("CTHPreMedicationCollectionViaCTHChemotherapyProtocol"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHStagingCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHStagingCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHStagingCollectionViaCTHTNMStagingMatrix() { return CreateRelationInfoForNavigator("CTHStagingCollectionViaCTHTNMStagingMatrix"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix1() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMStagingCollectionViaCTHTNMStagingMatrix2() { return CreateRelationInfoForNavigator("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTNMType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTNMTypeCollectionViaCTHTNMStaging() { return CreateRelationInfoForNavigator("CTHTNMTypeCollectionViaCTHTNMStaging"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTumorGrade' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTumorGradeCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHTumorGradeCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeItem() { return CreateRelationInfoForNavigator("CTHCancerTypeItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHCancerTypeEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHCancerTypeRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicCollection", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularCollection", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollection", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemotherapyProtocol' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemotherapyProtocolCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHChemotherapyProtocolCollection", CommonEntityBase.CreateEntityCollection<CTHChemotherapyProtocolEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataCollection", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHStagingCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHStagingCollection", CommonEntityBase.CreateEntityCollection<CTHStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSurgeryType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSurgeryTypeCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHSurgeryTypeCollection", CommonEntityBase.CreateEntityCollection<CTHSurgeryTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollection", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStagingMatrix' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingMatrixCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingMatrixCollection", CommonEntityBase.CreateEntityCollection<CTHTNMStagingMatrixEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicCollectionViaCTHCancerHistologic { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicCollectionViaCTHCancerHistologic", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularCollectionViaCTHCancerMolecular { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularCollectionViaCTHCancerMolecular", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerSide' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerSideCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerSideCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerSideEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPreMedication' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPreMedicationCollectionViaCTHChemotherapyProtocol { get { return _staticMetaData.GetPrefetchPathElement("CTHPreMedicationCollectionViaCTHChemotherapyProtocol", CommonEntityBase.CreateEntityCollection<CTHPreMedicationEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHStagingCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHStagingCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHStagingCollectionViaCTHTNMStagingMatrix { get { return _staticMetaData.GetPrefetchPathElement("CTHStagingCollectionViaCTHTNMStagingMatrix", CommonEntityBase.CreateEntityCollection<CTHStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix1 { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix1", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMStagingCollectionViaCTHTNMStagingMatrix2 { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMStagingCollectionViaCTHTNMStagingMatrix2", CommonEntityBase.CreateEntityCollection<CTHTNMStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTNMType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTNMTypeCollectionViaCTHTNMStaging { get { return _staticMetaData.GetPrefetchPathElement("CTHTNMTypeCollectionViaCTHTNMStaging", CommonEntityBase.CreateEntityCollection<CTHTNMTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTumorGrade' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTumorGradeCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHTumorGradeCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHTumorGradeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeItem", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>The ArICDCode property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."ArICDCode".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArICDCode
		{
			get { return (System.String)GetValue((int)CTHCancerTypeFieldIndex.ArICDCode, true); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.ArICDCode, value); }
		}

		/// <summary>The ArTypeName property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."ArTypeName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArTypeName
		{
			get { return (System.String)GetValue((int)CTHCancerTypeFieldIndex.ArTypeName, true); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.ArTypeName, value); }
		}

		/// <summary>The ICDCode property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."ICDCode".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ICDCode
		{
			get { return (System.String)GetValue((int)CTHCancerTypeFieldIndex.ICDCode, true); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.ICDCode, value); }
		}

		/// <summary>The ID property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHCancerTypeFieldIndex.ID, true); }
			set { SetValue((int)CTHCancerTypeFieldIndex.ID, value); }		}

		/// <summary>The IsParent property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."IsParent".<br/>Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Boolean> IsParent
		{
			get { return (Nullable<System.Boolean>)GetValue((int)CTHCancerTypeFieldIndex.IsParent, false); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.IsParent, value); }
		}

		/// <summary>The ParentID property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."ParentID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ParentID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHCancerTypeFieldIndex.ParentID, false); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.ParentID, value); }
		}

		/// <summary>The TypeName property of the Entity CTHCancerType<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerType"."TypeName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String TypeName
		{
			get { return (System.String)GetValue((int)CTHCancerTypeFieldIndex.TypeName, true); }
			set	{ SetValue((int)CTHCancerTypeFieldIndex.TypeName, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerHistologicEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerHistologicEntity))]
		public virtual EntityCollection<CTHCancerHistologicEntity> CTHCancerHistologicCollection { get { return GetOrCreateEntityCollection<CTHCancerHistologicEntity, CTHCancerHistologicEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHCancerHistologicCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerMolecularEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerMolecularEntity))]
		public virtual EntityCollection<CTHCancerMolecularEntity> CTHCancerMolecularCollection { get { return GetOrCreateEntityCollection<CTHCancerMolecularEntity, CTHCancerMolecularEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHCancerMolecularCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollection { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHCancerTypeCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHChemotherapyProtocolEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHChemotherapyProtocolEntity))]
		public virtual EntityCollection<CTHChemotherapyProtocolEntity> CTHChemotherapyProtocolCollection { get { return GetOrCreateEntityCollection<CTHChemotherapyProtocolEntity, CTHChemotherapyProtocolEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHChemotherapyProtocolCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientClinicalDataEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientClinicalDataEntity))]
		public virtual EntityCollection<CTHPatientClinicalDataEntity> CTHPatientClinicalDataCollection { get { return GetOrCreateEntityCollection<CTHPatientClinicalDataEntity, CTHPatientClinicalDataEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHPatientClinicalDataCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHStagingEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHStagingEntity))]
		public virtual EntityCollection<CTHStagingEntity> CTHStagingCollection { get { return GetOrCreateEntityCollection<CTHStagingEntity, CTHStagingEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHStagingCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSurgeryTypeEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSurgeryTypeEntity))]
		public virtual EntityCollection<CTHSurgeryTypeEntity> CTHSurgeryTypeCollection { get { return GetOrCreateEntityCollection<CTHSurgeryTypeEntity, CTHSurgeryTypeEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHSurgeryTypeCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollection { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHTNMStagingCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingMatrixEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingMatrixEntity))]
		public virtual EntityCollection<CTHTNMStagingMatrixEntity> CTHTNMStagingMatrixCollection { get { return GetOrCreateEntityCollection<CTHTNMStagingMatrixEntity, CTHTNMStagingMatrixEntityFactory>("CTHCancerTypeItem", true, false, ref _cTHTNMStagingMatrixCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerHistologicEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerHistologicEntity))]
		public virtual EntityCollection<CTHCancerHistologicEntity> CTHCancerHistologicCollectionViaCTHCancerHistologic { get { return GetOrCreateEntityCollection<CTHCancerHistologicEntity, CTHCancerHistologicEntityFactory>("CTHCancerTypeCollectionViaCTHCancerHistologic", false, true, ref _cTHCancerHistologicCollectionViaCTHCancerHistologic); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerHistologicEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerHistologicEntity))]
		public virtual EntityCollection<CTHCancerHistologicEntity> CTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerHistologicEntity, CTHCancerHistologicEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerHistologicCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerMolecularEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerMolecularEntity))]
		public virtual EntityCollection<CTHCancerMolecularEntity> CTHCancerMolecularCollectionViaCTHCancerMolecular { get { return GetOrCreateEntityCollection<CTHCancerMolecularEntity, CTHCancerMolecularEntityFactory>("CTHCancerTypeCollectionViaCTHCancerMolecular", false, true, ref _cTHCancerMolecularCollectionViaCTHCancerMolecular); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerMolecularEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerMolecularEntity))]
		public virtual EntityCollection<CTHCancerMolecularEntity> CTHCancerMolecularCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerMolecularEntity, CTHCancerMolecularEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerMolecularCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerSideEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerSideEntity))]
		public virtual EntityCollection<CTHCancerSideEntity> CTHCancerSideCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerSideEntity, CTHCancerSideEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerSideCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientEntity))]
		public virtual EntityCollection<CTHPatientEntity> CTHPatientCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHPatientEntity, CTHPatientEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHPatientCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPreMedicationEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPreMedicationEntity))]
		public virtual EntityCollection<CTHPreMedicationEntity> CTHPreMedicationCollectionViaCTHChemotherapyProtocol { get { return GetOrCreateEntityCollection<CTHPreMedicationEntity, CTHPreMedicationEntityFactory>("CTHCancerTypeCollectionViaCTHChemotherapyProtocol", false, true, ref _cTHPreMedicationCollectionViaCTHChemotherapyProtocol); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHStagingEntity))]
		public virtual EntityCollection<CTHStagingEntity> CTHStagingCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHStagingEntity, CTHStagingEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHStagingCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHStagingEntity))]
		public virtual EntityCollection<CTHStagingEntity> CTHStagingCollectionViaCTHTNMStagingMatrix { get { return GetOrCreateEntityCollection<CTHStagingEntity, CTHStagingEntityFactory>("CTHCancerTypeCollectionViaCTHTNMStagingMatrix", false, true, ref _cTHStagingCollectionViaCTHTNMStagingMatrix); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHCancerTypeCollectionViaCTHTNMStagingMatrix", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix1 { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHCancerTypeCollectionViaCTHTNMStagingMatrix1", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix1); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMStagingEntity))]
		public virtual EntityCollection<CTHTNMStagingEntity> CTHTNMStagingCollectionViaCTHTNMStagingMatrix2 { get { return GetOrCreateEntityCollection<CTHTNMStagingEntity, CTHTNMStagingEntityFactory>("CTHCancerTypeCollectionViaCTHTNMStagingMatrix2", false, true, ref _cTHTNMStagingCollectionViaCTHTNMStagingMatrix2); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTNMTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTNMTypeEntity))]
		public virtual EntityCollection<CTHTNMTypeEntity> CTHTNMTypeCollectionViaCTHTNMStaging { get { return GetOrCreateEntityCollection<CTHTNMTypeEntity, CTHTNMTypeEntityFactory>("CTHCancerTypeCollectionViaCTHTNMStaging", false, true, ref _cTHTNMTypeCollectionViaCTHTNMStaging); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTumorGradeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTumorGradeEntity))]
		public virtual EntityCollection<CTHTumorGradeEntity> CTHTumorGradeCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHTumorGradeEntity, CTHTumorGradeEntityFactory>("CTHCancerTypeCollectionViaCTHPatientClinicalData", false, true, ref _cTHTumorGradeCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets / sets related entity of type 'CTHCancerTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerTypeEntity CTHCancerTypeItem
		{
			get { return _cTHCancerTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerTypeItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHCancerTypeFieldIndex
	{
		///<summary>ArICDCode. </summary>
		ArICDCode,
		///<summary>ArTypeName. </summary>
		ArTypeName,
		///<summary>ICDCode. </summary>
		ICDCode,
		///<summary>ID. </summary>
		ID,
		///<summary>IsParent. </summary>
		IsParent,
		///<summary>ParentID. </summary>
		ParentID,
		///<summary>TypeName. </summary>
		TypeName,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHCancerType. </summary>
	public partial class CTHCancerTypeRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHCancerHistologicEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHCancerHistologic.CanerID</summary>
		public virtual IEntityRelation CTHCancerHistologicEntityUsingCanerID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHCancerHistologicCollection", true, new[] { CTHCancerTypeFields.ID, CTHCancerHistologicFields.CanerID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHCancerMolecularEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHCancerMolecular.CanerID</summary>
		public virtual IEntityRelation CTHCancerMolecularEntityUsingCanerID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHCancerMolecularCollection", true, new[] { CTHCancerTypeFields.ID, CTHCancerMolecularFields.CanerID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHCancerTypeEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHCancerType.ParentID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingParentID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHCancerTypeCollection", true, new[] { CTHCancerTypeFields.ID, CTHCancerTypeFields.ParentID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHChemotherapyProtocolEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHChemotherapyProtocol.CancerTypeID</summary>
		public virtual IEntityRelation CTHChemotherapyProtocolEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHChemotherapyProtocolCollection", true, new[] { CTHCancerTypeFields.ID, CTHChemotherapyProtocolFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHPatientClinicalDataEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHPatientClinicalData.CancerTypeID</summary>
		public virtual IEntityRelation CTHPatientClinicalDataEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientClinicalDataCollection", true, new[] { CTHCancerTypeFields.ID, CTHPatientClinicalDataFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHStagingEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHStaging.CancerTypeID</summary>
		public virtual IEntityRelation CTHStagingEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHStagingCollection", true, new[] { CTHCancerTypeFields.ID, CTHStagingFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHSurgeryTypeEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHSurgeryType.CancerTypeID</summary>
		public virtual IEntityRelation CTHSurgeryTypeEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHSurgeryTypeCollection", true, new[] { CTHCancerTypeFields.ID, CTHSurgeryTypeFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHTNMStagingEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHTNMStaging.CancerTypeID</summary>
		public virtual IEntityRelation CTHTNMStagingEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHTNMStagingCollection", true, new[] { CTHCancerTypeFields.ID, CTHTNMStagingFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHTNMStagingMatrixEntity over the 1:n relation they have, using the relation between the fields: CTHCancerType.ID - CTHTNMStagingMatrix.CancerTypeID</summary>
		public virtual IEntityRelation CTHTNMStagingMatrixEntityUsingCancerTypeID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHTNMStagingMatrixCollection", true, new[] { CTHCancerTypeFields.ID, CTHTNMStagingMatrixFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerTypeEntity and CTHCancerTypeEntity over the m:1 relation they have, using the relation between the fields: CTHCancerType.ParentID - CTHCancerType.ID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingIDParentID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerTypeItem", false, new[] { CTHCancerTypeFields.ID, CTHCancerTypeFields.ParentID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHCancerTypeRelations
	{
		internal static readonly IEntityRelation CTHCancerHistologicEntityUsingCanerIDStatic = new CTHCancerTypeRelations().CTHCancerHistologicEntityUsingCanerID;
		internal static readonly IEntityRelation CTHCancerMolecularEntityUsingCanerIDStatic = new CTHCancerTypeRelations().CTHCancerMolecularEntityUsingCanerID;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingParentIDStatic = new CTHCancerTypeRelations().CTHCancerTypeEntityUsingParentID;
		internal static readonly IEntityRelation CTHChemotherapyProtocolEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHChemotherapyProtocolEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHPatientClinicalDataEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHPatientClinicalDataEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHStagingEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHStagingEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHSurgeryTypeEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHSurgeryTypeEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHTNMStagingEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHTNMStagingEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHTNMStagingMatrixEntityUsingCancerTypeIDStatic = new CTHCancerTypeRelations().CTHTNMStagingMatrixEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingIDParentIDStatic = new CTHCancerTypeRelations().CTHCancerTypeEntityUsingIDParentID;

		/// <summary>CTor</summary>
		static StaticCTHCancerTypeRelations() { }
	}
}
