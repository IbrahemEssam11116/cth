//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHCancerMolecular'.<br/><br/></summary>
	[Serializable]
	public partial class CTHCancerMolecularEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHCancerMolecularEntity> _cTHCancerMolecularCollection;
		private EntityCollection<CTHPatientClinicalDataEntity> _cTHPatientClinicalDataCollection;
		private EntityCollection<CTHCancerHistologicEntity> _cTHCancerHistologicCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerSideEntity> _cTHCancerSideCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollectionViaCTHCancerMolecular;
		private EntityCollection<CTHCancerTypeEntity> _cTHCancerTypeCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHPatientEntity> _cTHPatientCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHStagingEntity> _cTHStagingCollectionViaCTHPatientClinicalData;
		private EntityCollection<CTHTumorGradeEntity> _cTHTumorGradeCollectionViaCTHPatientClinicalData;
		private CTHCancerMolecularEntity _cTHCancerMolecularItem;
		private CTHCancerTypeEntity _cTHCancerTypeItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHCancerMolecularEntityStaticMetaData _staticMetaData = new CTHCancerMolecularEntityStaticMetaData();
		private static CTHCancerMolecularRelations _relationsFactory = new CTHCancerMolecularRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHCancerMolecularItem</summary>
			public static readonly string CTHCancerMolecularItem = "CTHCancerMolecularItem";
			/// <summary>Member name CTHCancerTypeItem</summary>
			public static readonly string CTHCancerTypeItem = "CTHCancerTypeItem";
			/// <summary>Member name CTHCancerMolecularCollection</summary>
			public static readonly string CTHCancerMolecularCollection = "CTHCancerMolecularCollection";
			/// <summary>Member name CTHPatientClinicalDataCollection</summary>
			public static readonly string CTHPatientClinicalDataCollection = "CTHPatientClinicalDataCollection";
			/// <summary>Member name CTHCancerHistologicCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerHistologicCollectionViaCTHPatientClinicalData = "CTHCancerHistologicCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerSideCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerSideCollectionViaCTHPatientClinicalData = "CTHCancerSideCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHCancerTypeCollectionViaCTHCancerMolecular</summary>
			public static readonly string CTHCancerTypeCollectionViaCTHCancerMolecular = "CTHCancerTypeCollectionViaCTHCancerMolecular";
			/// <summary>Member name CTHCancerTypeCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHCancerTypeCollectionViaCTHPatientClinicalData = "CTHCancerTypeCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHPatientCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHPatientCollectionViaCTHPatientClinicalData = "CTHPatientCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHStagingCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHStagingCollectionViaCTHPatientClinicalData = "CTHStagingCollectionViaCTHPatientClinicalData";
			/// <summary>Member name CTHTumorGradeCollectionViaCTHPatientClinicalData</summary>
			public static readonly string CTHTumorGradeCollectionViaCTHPatientClinicalData = "CTHTumorGradeCollectionViaCTHPatientClinicalData";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHCancerMolecularEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHCancerMolecularEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHCancerMolecularEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity, typeof(CTHCancerMolecularEntity), typeof(CTHCancerMolecularEntityFactory), false);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHCancerMolecularEntity>>("CTHCancerMolecularCollection", a => a._cTHCancerMolecularCollection, (a, b) => a._cTHCancerMolecularCollection = b, a => a.CTHCancerMolecularCollection, () => new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingParentID, typeof(CTHCancerMolecularEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHPatientClinicalDataEntity>>("CTHPatientClinicalDataCollection", a => a._cTHPatientClinicalDataCollection, (a, b) => a._cTHPatientClinicalDataCollection = b, a => a.CTHPatientClinicalDataCollection, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, typeof(CTHPatientClinicalDataEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, CTHCancerMolecularEntity>("CTHCancerMolecularItem", "CTHCancerMolecularCollection", (a, b) => a._cTHCancerMolecularItem = b, a => a._cTHCancerMolecularItem, (a, b) => a.CTHCancerMolecularItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHCancerMolecularRelations.CTHCancerMolecularEntityUsingIDParentIDStatic, ()=>new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingIDParentID, null, new int[] { (int)CTHCancerMolecularFieldIndex.ParentID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, CTHCancerTypeEntity>("CTHCancerTypeItem", "CTHCancerMolecularCollection", (a, b) => a._cTHCancerTypeItem = b, a => a._cTHCancerTypeItem, (a, b) => a.CTHCancerTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHCancerMolecularRelations.CTHCancerTypeEntityUsingCanerIDStatic, ()=>new CTHCancerMolecularRelations().CTHCancerTypeEntityUsingCanerID, null, new int[] { (int)CTHCancerMolecularFieldIndex.CanerID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHCancerHistologicEntity>>("CTHCancerHistologicCollectionViaCTHPatientClinicalData", a => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerHistologicCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerHistologicCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHCancerHistologicEntityUsingCancerHistologicalID, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHCancerHistologicEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHCancerSideEntity>>("CTHCancerSideCollectionViaCTHPatientClinicalData", a => a._cTHCancerSideCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerSideCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerSideCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHCancerSideEntityUsingCancerSideId, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHCancerSideEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerSideEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollectionViaCTHCancerMolecular", a => a._cTHCancerTypeCollectionViaCTHCancerMolecular, (a, b) => a._cTHCancerTypeCollectionViaCTHCancerMolecular = b, a => a.CTHCancerTypeCollectionViaCTHCancerMolecular, () => new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingParentID, () => new CTHCancerMolecularRelations().CTHCancerTypeEntityUsingCanerID, "CTHCancerMolecularEntity__", "CTHCancerMolecular_", typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHCancerTypeEntity>>("CTHCancerTypeCollectionViaCTHPatientClinicalData", a => a._cTHCancerTypeCollectionViaCTHPatientClinicalData, (a, b) => a._cTHCancerTypeCollectionViaCTHPatientClinicalData = b, a => a.CTHCancerTypeCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHCancerTypeEntityUsingCancerTypeID, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHCancerTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHPatientEntity>>("CTHPatientCollectionViaCTHPatientClinicalData", a => a._cTHPatientCollectionViaCTHPatientClinicalData, (a, b) => a._cTHPatientCollectionViaCTHPatientClinicalData = b, a => a.CTHPatientCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHPatientEntityUsingPatientID, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHPatientEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHStagingEntity>>("CTHStagingCollectionViaCTHPatientClinicalData", a => a._cTHStagingCollectionViaCTHPatientClinicalData, (a, b) => a._cTHStagingCollectionViaCTHPatientClinicalData = b, a => a.CTHStagingCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHStagingEntityUsingStageGradeID, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHStagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity);
				AddNavigatorMetaData<CTHCancerMolecularEntity, EntityCollection<CTHTumorGradeEntity>>("CTHTumorGradeCollectionViaCTHPatientClinicalData", a => a._cTHTumorGradeCollectionViaCTHPatientClinicalData, (a, b) => a._cTHTumorGradeCollectionViaCTHPatientClinicalData = b, a => a.CTHTumorGradeCollectionViaCTHPatientClinicalData, () => new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID, () => new CTHPatientClinicalDataRelations().CTHTumorGradeEntityUsingTumorGradeID, "CTHCancerMolecularEntity__", "CTHPatientClinicalData_", typeof(CTHTumorGradeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHCancerMolecularEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHCancerMolecularEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHCancerMolecularEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHCancerMolecularEntity</param>
		public CTHCancerMolecularEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCancerMolecular which data should be fetched into this CTHCancerMolecular object</param>
		public CTHCancerMolecularEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHCancerMolecular which data should be fetched into this CTHCancerMolecular object</param>
		/// <param name="validator">The custom validator object for this CTHCancerMolecularEntity</param>
		public CTHCancerMolecularEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHCancerMolecularEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularCollection() { return CreateRelationInfoForNavigator("CTHCancerMolecularCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientClinicalData' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientClinicalDataCollection() { return CreateRelationInfoForNavigator("CTHPatientClinicalDataCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerHistologicCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerSide' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerSideCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerSideCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollectionViaCTHCancerMolecular() { return CreateRelationInfoForNavigator("CTHCancerTypeCollectionViaCTHCancerMolecular"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHCancerTypeCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHPatientCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHStagingCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHStagingCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTumorGrade' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTumorGradeCollectionViaCTHPatientClinicalData() { return CreateRelationInfoForNavigator("CTHTumorGradeCollectionViaCTHPatientClinicalData"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularItem() { return CreateRelationInfoForNavigator("CTHCancerMolecularItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeItem() { return CreateRelationInfoForNavigator("CTHCancerTypeItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHCancerMolecularEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHCancerMolecularRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularCollection", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientClinicalData' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientClinicalDataCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientClinicalDataCollection", CommonEntityBase.CreateEntityCollection<CTHPatientClinicalDataEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerSide' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerSideCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerSideCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerSideEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollectionViaCTHCancerMolecular { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollectionViaCTHCancerMolecular", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHStagingCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHStagingCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTumorGrade' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTumorGradeCollectionViaCTHPatientClinicalData { get { return _staticMetaData.GetPrefetchPathElement("CTHTumorGradeCollectionViaCTHPatientClinicalData", CommonEntityBase.CreateEntityCollection<CTHTumorGradeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularItem", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeItem", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>The ArName property of the Entity CTHCancerMolecular<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerMolecular"."ArName".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String ArName
		{
			get { return (System.String)GetValue((int)CTHCancerMolecularFieldIndex.ArName, true); }
			set	{ SetValue((int)CTHCancerMolecularFieldIndex.ArName, value); }
		}

		/// <summary>The CanerID property of the Entity CTHCancerMolecular<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerMolecular"."CanerID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CanerID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHCancerMolecularFieldIndex.CanerID, false); }
			set	{ SetValue((int)CTHCancerMolecularFieldIndex.CanerID, value); }
		}

		/// <summary>The ID property of the Entity CTHCancerMolecular<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerMolecular"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHCancerMolecularFieldIndex.ID, true); }
			set { SetValue((int)CTHCancerMolecularFieldIndex.ID, value); }		}

		/// <summary>The Name property of the Entity CTHCancerMolecular<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerMolecular"."Name".<br/>Table field type characteristics (type, precision, scale, length): NVarChar, 0, 0, 2147483647.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Name
		{
			get { return (System.String)GetValue((int)CTHCancerMolecularFieldIndex.Name, true); }
			set	{ SetValue((int)CTHCancerMolecularFieldIndex.Name, value); }
		}

		/// <summary>The ParentID property of the Entity CTHCancerMolecular<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHCancerMolecular"."ParentID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> ParentID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHCancerMolecularFieldIndex.ParentID, false); }
			set	{ SetValue((int)CTHCancerMolecularFieldIndex.ParentID, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerMolecularEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerMolecularEntity))]
		public virtual EntityCollection<CTHCancerMolecularEntity> CTHCancerMolecularCollection { get { return GetOrCreateEntityCollection<CTHCancerMolecularEntity, CTHCancerMolecularEntityFactory>("CTHCancerMolecularItem", true, false, ref _cTHCancerMolecularCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientClinicalDataEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientClinicalDataEntity))]
		public virtual EntityCollection<CTHPatientClinicalDataEntity> CTHPatientClinicalDataCollection { get { return GetOrCreateEntityCollection<CTHPatientClinicalDataEntity, CTHPatientClinicalDataEntityFactory>("CTHCancerMolecularItem", true, false, ref _cTHPatientClinicalDataCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerHistologicEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerHistologicEntity))]
		public virtual EntityCollection<CTHCancerHistologicEntity> CTHCancerHistologicCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerHistologicEntity, CTHCancerHistologicEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerHistologicCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerSideEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerSideEntity))]
		public virtual EntityCollection<CTHCancerSideEntity> CTHCancerSideCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerSideEntity, CTHCancerSideEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerSideCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollectionViaCTHCancerMolecular { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHCancerMolecularCollectionViaCTHCancerMolecular", false, true, ref _cTHCancerTypeCollectionViaCTHCancerMolecular); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHCancerTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHCancerTypeEntity))]
		public virtual EntityCollection<CTHCancerTypeEntity> CTHCancerTypeCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHCancerTypeEntity, CTHCancerTypeEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHCancerTypeCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientEntity))]
		public virtual EntityCollection<CTHPatientEntity> CTHPatientCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHPatientEntity, CTHPatientEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHPatientCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHStagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHStagingEntity))]
		public virtual EntityCollection<CTHStagingEntity> CTHStagingCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHStagingEntity, CTHStagingEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHStagingCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTumorGradeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTumorGradeEntity))]
		public virtual EntityCollection<CTHTumorGradeEntity> CTHTumorGradeCollectionViaCTHPatientClinicalData { get { return GetOrCreateEntityCollection<CTHTumorGradeEntity, CTHTumorGradeEntityFactory>("CTHCancerMolecularCollectionViaCTHPatientClinicalData", false, true, ref _cTHTumorGradeCollectionViaCTHPatientClinicalData); } }

		/// <summary>Gets / sets related entity of type 'CTHCancerMolecularEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerMolecularEntity CTHCancerMolecularItem
		{
			get { return _cTHCancerMolecularItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerMolecularItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHCancerTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerTypeEntity CTHCancerTypeItem
		{
			get { return _cTHCancerTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerTypeItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHCancerMolecularFieldIndex
	{
		///<summary>ArName. </summary>
		ArName,
		///<summary>CanerID. </summary>
		CanerID,
		///<summary>ID. </summary>
		ID,
		///<summary>Name. </summary>
		Name,
		///<summary>ParentID. </summary>
		ParentID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHCancerMolecular. </summary>
	public partial class CTHCancerMolecularRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHCancerMolecularEntity and CTHCancerMolecularEntity over the 1:n relation they have, using the relation between the fields: CTHCancerMolecular.ID - CTHCancerMolecular.ParentID</summary>
		public virtual IEntityRelation CTHCancerMolecularEntityUsingParentID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHCancerMolecularCollection", true, new[] { CTHCancerMolecularFields.ID, CTHCancerMolecularFields.ParentID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerMolecularEntity and CTHPatientClinicalDataEntity over the 1:n relation they have, using the relation between the fields: CTHCancerMolecular.ID - CTHPatientClinicalData.CancerMolecularID</summary>
		public virtual IEntityRelation CTHPatientClinicalDataEntityUsingCancerMolecularID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientClinicalDataCollection", true, new[] { CTHCancerMolecularFields.ID, CTHPatientClinicalDataFields.CancerMolecularID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerMolecularEntity and CTHCancerMolecularEntity over the m:1 relation they have, using the relation between the fields: CTHCancerMolecular.ParentID - CTHCancerMolecular.ID</summary>
		public virtual IEntityRelation CTHCancerMolecularEntityUsingIDParentID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerMolecularItem", false, new[] { CTHCancerMolecularFields.ID, CTHCancerMolecularFields.ParentID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHCancerMolecularEntity and CTHCancerTypeEntity over the m:1 relation they have, using the relation between the fields: CTHCancerMolecular.CanerID - CTHCancerType.ID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingCanerID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerTypeItem", false, new[] { CTHCancerTypeFields.ID, CTHCancerMolecularFields.CanerID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHCancerMolecularRelations
	{
		internal static readonly IEntityRelation CTHCancerMolecularEntityUsingParentIDStatic = new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingParentID;
		internal static readonly IEntityRelation CTHPatientClinicalDataEntityUsingCancerMolecularIDStatic = new CTHCancerMolecularRelations().CTHPatientClinicalDataEntityUsingCancerMolecularID;
		internal static readonly IEntityRelation CTHCancerMolecularEntityUsingIDParentIDStatic = new CTHCancerMolecularRelations().CTHCancerMolecularEntityUsingIDParentID;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingCanerIDStatic = new CTHCancerMolecularRelations().CTHCancerTypeEntityUsingCanerID;

		/// <summary>CTor</summary>
		static StaticCTHCancerMolecularRelations() { }
	}
}
