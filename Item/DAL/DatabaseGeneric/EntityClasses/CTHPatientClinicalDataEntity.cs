//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SStorm.CTH.DAL.HelperClasses;
using SStorm.CTH.DAL.FactoryClasses;
using SStorm.CTH.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SStorm.CTH.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'CTHPatientClinicalData'.<br/><br/></summary>
	[Serializable]
	public partial class CTHPatientClinicalDataEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		private EntityCollection<CTHKimoSurveyEntity> _cTHKimoSurveyCollection;
		private EntityCollection<CTHPatientImagingEntity> _cTHPatientImagingCollection;
		private EntityCollection<CTHPatientIntialLabEntity> _cTHPatientIntialLabCollection;
		private EntityCollection<CTHPatientPathologyReportEntity> _cTHPatientPathologyReportCollection;
		private EntityCollection<CTHPatientSurgeryEntity> _cTHPatientSurgeryCollection;
		private EntityCollection<CTHChemotherapyProtocolEntity> _cTHChemotherapyProtocolCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHImagingEntity> _cTHImagingCollectionViaCTHPatientImaging;
		private EntityCollection<CTHLabEntity> _cTHLabCollectionViaCTHPatientIntialLab;
		private EntityCollection<CTHPathologyReportTypeEntity> _cTHPathologyReportTypeCollectionViaCTHPatientPathologyReport;
		private EntityCollection<CTHProtocolCycleEntity> _cTHProtocolCycleCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHSpecialCaseEntity> _cTHSpecialCaseCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHSpecialCasePartEntity> _cTHSpecialCasePartCollectionViaCTHKimoSurvey;
		private EntityCollection<CTHSurgeryTypeEntity> _cTHSurgeryTypeCollectionViaCTHPatientSurgery;
		private EntityCollection<CTHTreatmentTypeEntity> _cTHTreatmentTypeCollectionViaCTHKimoSurvey;
		private CTHCancerHistologicEntity _cTHCancerHistologicItem;
		private CTHCancerMolecularEntity _cTHCancerMolecularItem;
		private CTHCancerSideEntity _cTHCancerSideItem;
		private CTHCancerTypeEntity _cTHCancerTypeItem;
		private CTHPatientEntity _cTHPatientItem;
		private CTHStagingEntity _cTHStagingItem;
		private CTHTumorGradeEntity _cTHTumorGradeItem;
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static CTHPatientClinicalDataEntityStaticMetaData _staticMetaData = new CTHPatientClinicalDataEntityStaticMetaData();
		private static CTHPatientClinicalDataRelations _relationsFactory = new CTHPatientClinicalDataRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CTHCancerHistologicItem</summary>
			public static readonly string CTHCancerHistologicItem = "CTHCancerHistologicItem";
			/// <summary>Member name CTHCancerMolecularItem</summary>
			public static readonly string CTHCancerMolecularItem = "CTHCancerMolecularItem";
			/// <summary>Member name CTHCancerSideItem</summary>
			public static readonly string CTHCancerSideItem = "CTHCancerSideItem";
			/// <summary>Member name CTHCancerTypeItem</summary>
			public static readonly string CTHCancerTypeItem = "CTHCancerTypeItem";
			/// <summary>Member name CTHPatientItem</summary>
			public static readonly string CTHPatientItem = "CTHPatientItem";
			/// <summary>Member name CTHStagingItem</summary>
			public static readonly string CTHStagingItem = "CTHStagingItem";
			/// <summary>Member name CTHTumorGradeItem</summary>
			public static readonly string CTHTumorGradeItem = "CTHTumorGradeItem";
			/// <summary>Member name CTHKimoSurveyCollection</summary>
			public static readonly string CTHKimoSurveyCollection = "CTHKimoSurveyCollection";
			/// <summary>Member name CTHPatientImagingCollection</summary>
			public static readonly string CTHPatientImagingCollection = "CTHPatientImagingCollection";
			/// <summary>Member name CTHPatientIntialLabCollection</summary>
			public static readonly string CTHPatientIntialLabCollection = "CTHPatientIntialLabCollection";
			/// <summary>Member name CTHPatientPathologyReportCollection</summary>
			public static readonly string CTHPatientPathologyReportCollection = "CTHPatientPathologyReportCollection";
			/// <summary>Member name CTHPatientSurgeryCollection</summary>
			public static readonly string CTHPatientSurgeryCollection = "CTHPatientSurgeryCollection";
			/// <summary>Member name CTHChemotherapyProtocolCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHChemotherapyProtocolCollectionViaCTHKimoSurvey = "CTHChemotherapyProtocolCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHImagingCollectionViaCTHPatientImaging</summary>
			public static readonly string CTHImagingCollectionViaCTHPatientImaging = "CTHImagingCollectionViaCTHPatientImaging";
			/// <summary>Member name CTHLabCollectionViaCTHPatientIntialLab</summary>
			public static readonly string CTHLabCollectionViaCTHPatientIntialLab = "CTHLabCollectionViaCTHPatientIntialLab";
			/// <summary>Member name CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport</summary>
			public static readonly string CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport = "CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport";
			/// <summary>Member name CTHProtocolCycleCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHProtocolCycleCollectionViaCTHKimoSurvey = "CTHProtocolCycleCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHSpecialCaseCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHSpecialCaseCollectionViaCTHKimoSurvey = "CTHSpecialCaseCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHSpecialCasePartCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHSpecialCasePartCollectionViaCTHKimoSurvey = "CTHSpecialCasePartCollectionViaCTHKimoSurvey";
			/// <summary>Member name CTHSurgeryTypeCollectionViaCTHPatientSurgery</summary>
			public static readonly string CTHSurgeryTypeCollectionViaCTHPatientSurgery = "CTHSurgeryTypeCollectionViaCTHPatientSurgery";
			/// <summary>Member name CTHTreatmentTypeCollectionViaCTHKimoSurvey</summary>
			public static readonly string CTHTreatmentTypeCollectionViaCTHKimoSurvey = "CTHTreatmentTypeCollectionViaCTHKimoSurvey";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CTHPatientClinicalDataEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CTHPatientClinicalDataEntityStaticMetaData()
			{
				SetEntityCoreInfo("CTHPatientClinicalDataEntity", InheritanceHierarchyType.None, false, (int)SStorm.CTH.DAL.EntityType.CTHPatientClinicalDataEntity, typeof(CTHPatientClinicalDataEntity), typeof(CTHPatientClinicalDataEntityFactory), false);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHKimoSurveyEntity>>("CTHKimoSurveyCollection", a => a._cTHKimoSurveyCollection, (a, b) => a._cTHKimoSurveyCollection = b, a => a.CTHKimoSurveyCollection, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, typeof(CTHKimoSurveyEntity), (int)SStorm.CTH.DAL.EntityType.CTHKimoSurveyEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHPatientImagingEntity>>("CTHPatientImagingCollection", a => a._cTHPatientImagingCollection, (a, b) => a._cTHPatientImagingCollection = b, a => a.CTHPatientImagingCollection, () => new CTHPatientClinicalDataRelations().CTHPatientImagingEntityUsingPatientClinicalDataID, typeof(CTHPatientImagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientImagingEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHPatientIntialLabEntity>>("CTHPatientIntialLabCollection", a => a._cTHPatientIntialLabCollection, (a, b) => a._cTHPatientIntialLabCollection = b, a => a.CTHPatientIntialLabCollection, () => new CTHPatientClinicalDataRelations().CTHPatientIntialLabEntityUsingPatientClinicalDataID, typeof(CTHPatientIntialLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientIntialLabEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHPatientPathologyReportEntity>>("CTHPatientPathologyReportCollection", a => a._cTHPatientPathologyReportCollection, (a, b) => a._cTHPatientPathologyReportCollection = b, a => a.CTHPatientPathologyReportCollection, () => new CTHPatientClinicalDataRelations().CTHPatientPathologyReportEntityUsingPatienClinicalDataID, typeof(CTHPatientPathologyReportEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientPathologyReportEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHPatientSurgeryEntity>>("CTHPatientSurgeryCollection", a => a._cTHPatientSurgeryCollection, (a, b) => a._cTHPatientSurgeryCollection = b, a => a.CTHPatientSurgeryCollection, () => new CTHPatientClinicalDataRelations().CTHPatientSurgeryEntityUsingPatientClinicalDataID, typeof(CTHPatientSurgeryEntity), (int)SStorm.CTH.DAL.EntityType.CTHPatientSurgeryEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHCancerHistologicEntity>("CTHCancerHistologicItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHCancerHistologicItem = b, a => a._cTHCancerHistologicItem, (a, b) => a.CTHCancerHistologicItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHCancerHistologicEntityUsingCancerHistologicalIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHCancerHistologicEntityUsingCancerHistologicalID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.CancerHistologicalID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerHistologicEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHCancerMolecularEntity>("CTHCancerMolecularItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHCancerMolecularItem = b, a => a._cTHCancerMolecularItem, (a, b) => a.CTHCancerMolecularItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHCancerMolecularEntityUsingCancerMolecularIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHCancerMolecularEntityUsingCancerMolecularID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.CancerMolecularID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerMolecularEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHCancerSideEntity>("CTHCancerSideItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHCancerSideItem = b, a => a._cTHCancerSideItem, (a, b) => a.CTHCancerSideItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHCancerSideEntityUsingCancerSideIdStatic, ()=>new CTHPatientClinicalDataRelations().CTHCancerSideEntityUsingCancerSideId, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.CancerSideId }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerSideEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHCancerTypeEntity>("CTHCancerTypeItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHCancerTypeItem = b, a => a._cTHCancerTypeItem, (a, b) => a.CTHCancerTypeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHCancerTypeEntityUsingCancerTypeIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHCancerTypeEntityUsingCancerTypeID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.CancerTypeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHCancerTypeEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHPatientEntity>("CTHPatientItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHPatientItem = b, a => a._cTHPatientItem, (a, b) => a.CTHPatientItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHPatientEntityUsingPatientIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHPatientEntityUsingPatientID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.PatientID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHPatientEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHStagingEntity>("CTHStagingItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHStagingItem = b, a => a._cTHStagingItem, (a, b) => a.CTHStagingItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHStagingEntityUsingStageGradeIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHStagingEntityUsingStageGradeID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.StageGradeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHStagingEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, CTHTumorGradeEntity>("CTHTumorGradeItem", "CTHPatientClinicalDataCollection", (a, b) => a._cTHTumorGradeItem = b, a => a._cTHTumorGradeItem, (a, b) => a.CTHTumorGradeItem = b, SStorm.CTH.DAL.RelationClasses.StaticCTHPatientClinicalDataRelations.CTHTumorGradeEntityUsingTumorGradeIDStatic, ()=>new CTHPatientClinicalDataRelations().CTHTumorGradeEntityUsingTumorGradeID, null, new int[] { (int)CTHPatientClinicalDataFieldIndex.TumorGradeID }, null, true, (int)SStorm.CTH.DAL.EntityType.CTHTumorGradeEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHChemotherapyProtocolEntity>>("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", a => a._cTHChemotherapyProtocolCollectionViaCTHKimoSurvey, (a, b) => a._cTHChemotherapyProtocolCollectionViaCTHKimoSurvey = b, a => a.CTHChemotherapyProtocolCollectionViaCTHKimoSurvey, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, () => new CTHKimoSurveyRelations().CTHChemotherapyProtocolEntityUsingProtocolID, "CTHPatientClinicalDataEntity__", "CTHKimoSurvey_", typeof(CTHChemotherapyProtocolEntity), (int)SStorm.CTH.DAL.EntityType.CTHChemotherapyProtocolEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHImagingEntity>>("CTHImagingCollectionViaCTHPatientImaging", a => a._cTHImagingCollectionViaCTHPatientImaging, (a, b) => a._cTHImagingCollectionViaCTHPatientImaging = b, a => a.CTHImagingCollectionViaCTHPatientImaging, () => new CTHPatientClinicalDataRelations().CTHPatientImagingEntityUsingPatientClinicalDataID, () => new CTHPatientImagingRelations().CTHImagingEntityUsingImagingTypeID, "CTHPatientClinicalDataEntity__", "CTHPatientImaging_", typeof(CTHImagingEntity), (int)SStorm.CTH.DAL.EntityType.CTHImagingEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHLabEntity>>("CTHLabCollectionViaCTHPatientIntialLab", a => a._cTHLabCollectionViaCTHPatientIntialLab, (a, b) => a._cTHLabCollectionViaCTHPatientIntialLab = b, a => a.CTHLabCollectionViaCTHPatientIntialLab, () => new CTHPatientClinicalDataRelations().CTHPatientIntialLabEntityUsingPatientClinicalDataID, () => new CTHPatientIntialLabRelations().CTHLabEntityUsingLabID, "CTHPatientClinicalDataEntity__", "CTHPatientIntialLab_", typeof(CTHLabEntity), (int)SStorm.CTH.DAL.EntityType.CTHLabEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHPathologyReportTypeEntity>>("CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport", a => a._cTHPathologyReportTypeCollectionViaCTHPatientPathologyReport, (a, b) => a._cTHPathologyReportTypeCollectionViaCTHPatientPathologyReport = b, a => a.CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport, () => new CTHPatientClinicalDataRelations().CTHPatientPathologyReportEntityUsingPatienClinicalDataID, () => new CTHPatientPathologyReportRelations().CTHPathologyReportTypeEntityUsingReportTypeID, "CTHPatientClinicalDataEntity__", "CTHPatientPathologyReport_", typeof(CTHPathologyReportTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHPathologyReportTypeEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHProtocolCycleEntity>>("CTHProtocolCycleCollectionViaCTHKimoSurvey", a => a._cTHProtocolCycleCollectionViaCTHKimoSurvey, (a, b) => a._cTHProtocolCycleCollectionViaCTHKimoSurvey = b, a => a.CTHProtocolCycleCollectionViaCTHKimoSurvey, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, () => new CTHKimoSurveyRelations().CTHProtocolCycleEntityUsingCycleID, "CTHPatientClinicalDataEntity__", "CTHKimoSurvey_", typeof(CTHProtocolCycleEntity), (int)SStorm.CTH.DAL.EntityType.CTHProtocolCycleEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHSpecialCaseEntity>>("CTHSpecialCaseCollectionViaCTHKimoSurvey", a => a._cTHSpecialCaseCollectionViaCTHKimoSurvey, (a, b) => a._cTHSpecialCaseCollectionViaCTHKimoSurvey = b, a => a.CTHSpecialCaseCollectionViaCTHKimoSurvey, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, () => new CTHKimoSurveyRelations().CTHSpecialCaseEntityUsingSpecialCaseID, "CTHPatientClinicalDataEntity__", "CTHKimoSurvey_", typeof(CTHSpecialCaseEntity), (int)SStorm.CTH.DAL.EntityType.CTHSpecialCaseEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHSpecialCasePartEntity>>("CTHSpecialCasePartCollectionViaCTHKimoSurvey", a => a._cTHSpecialCasePartCollectionViaCTHKimoSurvey, (a, b) => a._cTHSpecialCasePartCollectionViaCTHKimoSurvey = b, a => a.CTHSpecialCasePartCollectionViaCTHKimoSurvey, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, () => new CTHKimoSurveyRelations().CTHSpecialCasePartEntityUsingSpecialCasePartID, "CTHPatientClinicalDataEntity__", "CTHKimoSurvey_", typeof(CTHSpecialCasePartEntity), (int)SStorm.CTH.DAL.EntityType.CTHSpecialCasePartEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHSurgeryTypeEntity>>("CTHSurgeryTypeCollectionViaCTHPatientSurgery", a => a._cTHSurgeryTypeCollectionViaCTHPatientSurgery, (a, b) => a._cTHSurgeryTypeCollectionViaCTHPatientSurgery = b, a => a.CTHSurgeryTypeCollectionViaCTHPatientSurgery, () => new CTHPatientClinicalDataRelations().CTHPatientSurgeryEntityUsingPatientClinicalDataID, () => new CTHPatientSurgeryRelations().CTHSurgeryTypeEntityUsingSurgeryTypeId, "CTHPatientClinicalDataEntity__", "CTHPatientSurgery_", typeof(CTHSurgeryTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHSurgeryTypeEntity);
				AddNavigatorMetaData<CTHPatientClinicalDataEntity, EntityCollection<CTHTreatmentTypeEntity>>("CTHTreatmentTypeCollectionViaCTHKimoSurvey", a => a._cTHTreatmentTypeCollectionViaCTHKimoSurvey, (a, b) => a._cTHTreatmentTypeCollectionViaCTHKimoSurvey = b, a => a.CTHTreatmentTypeCollectionViaCTHKimoSurvey, () => new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID, () => new CTHKimoSurveyRelations().CTHTreatmentTypeEntityUsingTreatementTypeID, "CTHPatientClinicalDataEntity__", "CTHKimoSurvey_", typeof(CTHTreatmentTypeEntity), (int)SStorm.CTH.DAL.EntityType.CTHTreatmentTypeEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CTHPatientClinicalDataEntity()
		{
		}

		/// <summary> CTor</summary>
		public CTHPatientClinicalDataEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CTHPatientClinicalDataEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CTHPatientClinicalDataEntity</param>
		public CTHPatientClinicalDataEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPatientClinicalData which data should be fetched into this CTHPatientClinicalData object</param>
		public CTHPatientClinicalDataEntity(System.Int32 iD) : this(iD, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="iD">PK value for CTHPatientClinicalData which data should be fetched into this CTHPatientClinicalData object</param>
		/// <param name="validator">The custom validator object for this CTHPatientClinicalDataEntity</param>
		public CTHPatientClinicalDataEntity(System.Int32 iD, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.ID = iD;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CTHPatientClinicalDataEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHKimoSurvey' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHKimoSurveyCollection() { return CreateRelationInfoForNavigator("CTHKimoSurveyCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientImaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientImagingCollection() { return CreateRelationInfoForNavigator("CTHPatientImagingCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientIntialLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientIntialLabCollection() { return CreateRelationInfoForNavigator("CTHPatientIntialLabCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientPathologyReport' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientPathologyReportCollection() { return CreateRelationInfoForNavigator("CTHPatientPathologyReportCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPatientSurgery' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientSurgeryCollection() { return CreateRelationInfoForNavigator("CTHPatientSurgeryCollection"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHChemotherapyProtocol' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHChemotherapyProtocolCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHImaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHImagingCollectionViaCTHPatientImaging() { return CreateRelationInfoForNavigator("CTHImagingCollectionViaCTHPatientImaging"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHLab' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHLabCollectionViaCTHPatientIntialLab() { return CreateRelationInfoForNavigator("CTHLabCollectionViaCTHPatientIntialLab"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHPathologyReportType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPathologyReportTypeCollectionViaCTHPatientPathologyReport() { return CreateRelationInfoForNavigator("CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHProtocolCycle' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHProtocolCycleCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHProtocolCycleCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSpecialCase' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCaseCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHSpecialCaseCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSpecialCasePart' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSpecialCasePartCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHSpecialCasePartCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHSurgeryType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHSurgeryTypeCollectionViaCTHPatientSurgery() { return CreateRelationInfoForNavigator("CTHSurgeryTypeCollectionViaCTHPatientSurgery"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CTHTreatmentType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTreatmentTypeCollectionViaCTHKimoSurvey() { return CreateRelationInfoForNavigator("CTHTreatmentTypeCollectionViaCTHKimoSurvey"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerHistologic' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerHistologicItem() { return CreateRelationInfoForNavigator("CTHCancerHistologicItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerMolecular' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerMolecularItem() { return CreateRelationInfoForNavigator("CTHCancerMolecularItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerSide' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerSideItem() { return CreateRelationInfoForNavigator("CTHCancerSideItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHCancerType' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHCancerTypeItem() { return CreateRelationInfoForNavigator("CTHCancerTypeItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHPatient' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHPatientItem() { return CreateRelationInfoForNavigator("CTHPatientItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHStaging' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHStagingItem() { return CreateRelationInfoForNavigator("CTHStagingItem"); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'CTHTumorGrade' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCTHTumorGradeItem() { return CreateRelationInfoForNavigator("CTHTumorGradeItem"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CTHPatientClinicalDataEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CTHPatientClinicalDataRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHKimoSurvey' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHKimoSurveyCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHKimoSurveyCollection", CommonEntityBase.CreateEntityCollection<CTHKimoSurveyEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientImaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientImagingCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientImagingCollection", CommonEntityBase.CreateEntityCollection<CTHPatientImagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientIntialLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientIntialLabCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientIntialLabCollection", CommonEntityBase.CreateEntityCollection<CTHPatientIntialLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientPathologyReport' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientPathologyReportCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientPathologyReportCollection", CommonEntityBase.CreateEntityCollection<CTHPatientPathologyReportEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatientSurgery' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientSurgeryCollection { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientSurgeryCollection", CommonEntityBase.CreateEntityCollection<CTHPatientSurgeryEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHChemotherapyProtocol' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHChemotherapyProtocolCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHChemotherapyProtocolCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHChemotherapyProtocolEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHImaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHImagingCollectionViaCTHPatientImaging { get { return _staticMetaData.GetPrefetchPathElement("CTHImagingCollectionViaCTHPatientImaging", CommonEntityBase.CreateEntityCollection<CTHImagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHLab' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHLabCollectionViaCTHPatientIntialLab { get { return _staticMetaData.GetPrefetchPathElement("CTHLabCollectionViaCTHPatientIntialLab", CommonEntityBase.CreateEntityCollection<CTHLabEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPathologyReportType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPathologyReportTypeCollectionViaCTHPatientPathologyReport { get { return _staticMetaData.GetPrefetchPathElement("CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport", CommonEntityBase.CreateEntityCollection<CTHPathologyReportTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHProtocolCycle' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHProtocolCycleCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHProtocolCycleCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHProtocolCycleEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCase' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCaseCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCaseCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHSpecialCaseEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSpecialCasePart' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSpecialCasePartCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHSpecialCasePartCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHSpecialCasePartEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHSurgeryType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHSurgeryTypeCollectionViaCTHPatientSurgery { get { return _staticMetaData.GetPrefetchPathElement("CTHSurgeryTypeCollectionViaCTHPatientSurgery", CommonEntityBase.CreateEntityCollection<CTHSurgeryTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTreatmentType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTreatmentTypeCollectionViaCTHKimoSurvey { get { return _staticMetaData.GetPrefetchPathElement("CTHTreatmentTypeCollectionViaCTHKimoSurvey", CommonEntityBase.CreateEntityCollection<CTHTreatmentTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerHistologic' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerHistologicItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerHistologicItem", CommonEntityBase.CreateEntityCollection<CTHCancerHistologicEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerMolecular' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerMolecularItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerMolecularItem", CommonEntityBase.CreateEntityCollection<CTHCancerMolecularEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerSide' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerSideItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerSideItem", CommonEntityBase.CreateEntityCollection<CTHCancerSideEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHCancerType' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHCancerTypeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHCancerTypeItem", CommonEntityBase.CreateEntityCollection<CTHCancerTypeEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHPatient' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHPatientItem { get { return _staticMetaData.GetPrefetchPathElement("CTHPatientItem", CommonEntityBase.CreateEntityCollection<CTHPatientEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHStaging' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHStagingItem { get { return _staticMetaData.GetPrefetchPathElement("CTHStagingItem", CommonEntityBase.CreateEntityCollection<CTHStagingEntity>()); } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CTHTumorGrade' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCTHTumorGradeItem { get { return _staticMetaData.GetPrefetchPathElement("CTHTumorGradeItem", CommonEntityBase.CreateEntityCollection<CTHTumorGradeEntity>()); } }

		/// <summary>The CancerHistologicalID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."CancerHistologicalID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerHistologicalID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.CancerHistologicalID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.CancerHistologicalID, value); }
		}

		/// <summary>The CancerMolecularID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."CancerMolecularID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerMolecularID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.CancerMolecularID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.CancerMolecularID, value); }
		}

		/// <summary>The CancerSideId property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."CancerSideId".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerSideId
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.CancerSideId, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.CancerSideId, value); }
		}

		/// <summary>The CancerTypeID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."CancerTypeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> CancerTypeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.CancerTypeID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.CancerTypeID, value); }
		}

		/// <summary>The DataDate property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."DataDate".<br/>Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.DateTime> DataDate
		{
			get { return (Nullable<System.DateTime>)GetValue((int)CTHPatientClinicalDataFieldIndex.DataDate, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.DataDate, value); }
		}

		/// <summary>The ID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."ID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int32 ID
		{
			get { return (System.Int32)GetValue((int)CTHPatientClinicalDataFieldIndex.ID, true); }
			set { SetValue((int)CTHPatientClinicalDataFieldIndex.ID, value); }		}

		/// <summary>The PatientID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."PatientID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> PatientID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.PatientID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.PatientID, value); }
		}

		/// <summary>The StageGradeID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."StageGradeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> StageGradeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.StageGradeID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.StageGradeID, value); }
		}

		/// <summary>The TumorGradeID property of the Entity CTHPatientClinicalData<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CTHPatientClinicalData"."TumorGradeID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Int32> TumorGradeID
		{
			get { return (Nullable<System.Int32>)GetValue((int)CTHPatientClinicalDataFieldIndex.TumorGradeID, false); }
			set	{ SetValue((int)CTHPatientClinicalDataFieldIndex.TumorGradeID, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHKimoSurveyEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHKimoSurveyEntity))]
		public virtual EntityCollection<CTHKimoSurveyEntity> CTHKimoSurveyCollection { get { return GetOrCreateEntityCollection<CTHKimoSurveyEntity, CTHKimoSurveyEntityFactory>("CTHPatientClinicalDataItem", true, false, ref _cTHKimoSurveyCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientImagingEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientImagingEntity))]
		public virtual EntityCollection<CTHPatientImagingEntity> CTHPatientImagingCollection { get { return GetOrCreateEntityCollection<CTHPatientImagingEntity, CTHPatientImagingEntityFactory>("CTHPatientClinicalDataItem", true, false, ref _cTHPatientImagingCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientIntialLabEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientIntialLabEntity))]
		public virtual EntityCollection<CTHPatientIntialLabEntity> CTHPatientIntialLabCollection { get { return GetOrCreateEntityCollection<CTHPatientIntialLabEntity, CTHPatientIntialLabEntityFactory>("CTHPatientClinicalDataItem", true, false, ref _cTHPatientIntialLabCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientPathologyReportEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientPathologyReportEntity))]
		public virtual EntityCollection<CTHPatientPathologyReportEntity> CTHPatientPathologyReportCollection { get { return GetOrCreateEntityCollection<CTHPatientPathologyReportEntity, CTHPatientPathologyReportEntityFactory>("CTHPatientClinicalDataItem", true, false, ref _cTHPatientPathologyReportCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPatientSurgeryEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPatientSurgeryEntity))]
		public virtual EntityCollection<CTHPatientSurgeryEntity> CTHPatientSurgeryCollection { get { return GetOrCreateEntityCollection<CTHPatientSurgeryEntity, CTHPatientSurgeryEntityFactory>("CTHPatientClinicalDataItem", true, false, ref _cTHPatientSurgeryCollection); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHChemotherapyProtocolEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHChemotherapyProtocolEntity))]
		public virtual EntityCollection<CTHChemotherapyProtocolEntity> CTHChemotherapyProtocolCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHChemotherapyProtocolEntity, CTHChemotherapyProtocolEntityFactory>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", false, true, ref _cTHChemotherapyProtocolCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHImagingEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHImagingEntity))]
		public virtual EntityCollection<CTHImagingEntity> CTHImagingCollectionViaCTHPatientImaging { get { return GetOrCreateEntityCollection<CTHImagingEntity, CTHImagingEntityFactory>("CTHPatientClinicalDataCollectionViaCTHPatientImaging", false, true, ref _cTHImagingCollectionViaCTHPatientImaging); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHLabEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHLabEntity))]
		public virtual EntityCollection<CTHLabEntity> CTHLabCollectionViaCTHPatientIntialLab { get { return GetOrCreateEntityCollection<CTHLabEntity, CTHLabEntityFactory>("CTHPatientClinicalDataCollectionViaCTHPatientIntialLab", false, true, ref _cTHLabCollectionViaCTHPatientIntialLab); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHPathologyReportTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHPathologyReportTypeEntity))]
		public virtual EntityCollection<CTHPathologyReportTypeEntity> CTHPathologyReportTypeCollectionViaCTHPatientPathologyReport { get { return GetOrCreateEntityCollection<CTHPathologyReportTypeEntity, CTHPathologyReportTypeEntityFactory>("CTHPatientClinicalDataCollectionViaCTHPatientPathologyReport", false, true, ref _cTHPathologyReportTypeCollectionViaCTHPatientPathologyReport); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHProtocolCycleEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHProtocolCycleEntity))]
		public virtual EntityCollection<CTHProtocolCycleEntity> CTHProtocolCycleCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHProtocolCycleEntity, CTHProtocolCycleEntityFactory>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", false, true, ref _cTHProtocolCycleCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSpecialCaseEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSpecialCaseEntity))]
		public virtual EntityCollection<CTHSpecialCaseEntity> CTHSpecialCaseCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHSpecialCaseEntity, CTHSpecialCaseEntityFactory>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", false, true, ref _cTHSpecialCaseCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSpecialCasePartEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSpecialCasePartEntity))]
		public virtual EntityCollection<CTHSpecialCasePartEntity> CTHSpecialCasePartCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHSpecialCasePartEntity, CTHSpecialCasePartEntityFactory>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", false, true, ref _cTHSpecialCasePartCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHSurgeryTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHSurgeryTypeEntity))]
		public virtual EntityCollection<CTHSurgeryTypeEntity> CTHSurgeryTypeCollectionViaCTHPatientSurgery { get { return GetOrCreateEntityCollection<CTHSurgeryTypeEntity, CTHSurgeryTypeEntityFactory>("CTHPatientClinicalDataCollectionViaCTHPatientSurgery", false, true, ref _cTHSurgeryTypeCollectionViaCTHPatientSurgery); } }

		/// <summary>Gets the EntityCollection with the related entities of type 'CTHTreatmentTypeEntity' which are related to this entity via a relation of type 'm:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CTHTreatmentTypeEntity))]
		public virtual EntityCollection<CTHTreatmentTypeEntity> CTHTreatmentTypeCollectionViaCTHKimoSurvey { get { return GetOrCreateEntityCollection<CTHTreatmentTypeEntity, CTHTreatmentTypeEntityFactory>("CTHPatientClinicalDataCollectionViaCTHKimoSurvey", false, true, ref _cTHTreatmentTypeCollectionViaCTHKimoSurvey); } }

		/// <summary>Gets / sets related entity of type 'CTHCancerHistologicEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerHistologicEntity CTHCancerHistologicItem
		{
			get { return _cTHCancerHistologicItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerHistologicItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHCancerMolecularEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerMolecularEntity CTHCancerMolecularItem
		{
			get { return _cTHCancerMolecularItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerMolecularItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHCancerSideEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerSideEntity CTHCancerSideItem
		{
			get { return _cTHCancerSideItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerSideItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHCancerTypeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHCancerTypeEntity CTHCancerTypeItem
		{
			get { return _cTHCancerTypeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHCancerTypeItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHPatientEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHPatientEntity CTHPatientItem
		{
			get { return _cTHPatientItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHPatientItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHStagingEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHStagingEntity CTHStagingItem
		{
			get { return _cTHStagingItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHStagingItem"); }
		}

		/// <summary>Gets / sets related entity of type 'CTHTumorGradeEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(false)]
		public virtual CTHTumorGradeEntity CTHTumorGradeItem
		{
			get { return _cTHTumorGradeItem; }
			set { SetSingleRelatedEntityNavigator(value, "CTHTumorGradeItem"); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace SStorm.CTH.DAL
{
	public enum CTHPatientClinicalDataFieldIndex
	{
		///<summary>CancerHistologicalID. </summary>
		CancerHistologicalID,
		///<summary>CancerMolecularID. </summary>
		CancerMolecularID,
		///<summary>CancerSideId. </summary>
		CancerSideId,
		///<summary>CancerTypeID. </summary>
		CancerTypeID,
		///<summary>DataDate. </summary>
		DataDate,
		///<summary>ID. </summary>
		ID,
		///<summary>PatientID. </summary>
		PatientID,
		///<summary>StageGradeID. </summary>
		StageGradeID,
		///<summary>TumorGradeID. </summary>
		TumorGradeID,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SStorm.CTH.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CTHPatientClinicalData. </summary>
	public partial class CTHPatientClinicalDataRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHKimoSurveyEntity over the 1:n relation they have, using the relation between the fields: CTHPatientClinicalData.ID - CTHKimoSurvey.PatientClinicalDataID</summary>
		public virtual IEntityRelation CTHKimoSurveyEntityUsingPatientClinicalDataID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHKimoSurveyCollection", true, new[] { CTHPatientClinicalDataFields.ID, CTHKimoSurveyFields.PatientClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHPatientImagingEntity over the 1:n relation they have, using the relation between the fields: CTHPatientClinicalData.ID - CTHPatientImaging.PatientClinicalDataID</summary>
		public virtual IEntityRelation CTHPatientImagingEntityUsingPatientClinicalDataID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientImagingCollection", true, new[] { CTHPatientClinicalDataFields.ID, CTHPatientImagingFields.PatientClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHPatientIntialLabEntity over the 1:n relation they have, using the relation between the fields: CTHPatientClinicalData.ID - CTHPatientIntialLab.PatientClinicalDataID</summary>
		public virtual IEntityRelation CTHPatientIntialLabEntityUsingPatientClinicalDataID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientIntialLabCollection", true, new[] { CTHPatientClinicalDataFields.ID, CTHPatientIntialLabFields.PatientClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHPatientPathologyReportEntity over the 1:n relation they have, using the relation between the fields: CTHPatientClinicalData.ID - CTHPatientPathologyReport.PatienClinicalDataID</summary>
		public virtual IEntityRelation CTHPatientPathologyReportEntityUsingPatienClinicalDataID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientPathologyReportCollection", true, new[] { CTHPatientClinicalDataFields.ID, CTHPatientPathologyReportFields.PatienClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHPatientSurgeryEntity over the 1:n relation they have, using the relation between the fields: CTHPatientClinicalData.ID - CTHPatientSurgery.PatientClinicalDataID</summary>
		public virtual IEntityRelation CTHPatientSurgeryEntityUsingPatientClinicalDataID
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CTHPatientSurgeryCollection", true, new[] { CTHPatientClinicalDataFields.ID, CTHPatientSurgeryFields.PatientClinicalDataID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHCancerHistologicEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.CancerHistologicalID - CTHCancerHistologic.ID</summary>
		public virtual IEntityRelation CTHCancerHistologicEntityUsingCancerHistologicalID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerHistologicItem", false, new[] { CTHCancerHistologicFields.ID, CTHPatientClinicalDataFields.CancerHistologicalID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHCancerMolecularEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.CancerMolecularID - CTHCancerMolecular.ID</summary>
		public virtual IEntityRelation CTHCancerMolecularEntityUsingCancerMolecularID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerMolecularItem", false, new[] { CTHCancerMolecularFields.ID, CTHPatientClinicalDataFields.CancerMolecularID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHCancerSideEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.CancerSideId - CTHCancerSide.ID</summary>
		public virtual IEntityRelation CTHCancerSideEntityUsingCancerSideId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerSideItem", false, new[] { CTHCancerSideFields.ID, CTHPatientClinicalDataFields.CancerSideId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHCancerTypeEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.CancerTypeID - CTHCancerType.ID</summary>
		public virtual IEntityRelation CTHCancerTypeEntityUsingCancerTypeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHCancerTypeItem", false, new[] { CTHCancerTypeFields.ID, CTHPatientClinicalDataFields.CancerTypeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHPatientEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.PatientID - CTHPatient.ID</summary>
		public virtual IEntityRelation CTHPatientEntityUsingPatientID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHPatientItem", false, new[] { CTHPatientFields.ID, CTHPatientClinicalDataFields.PatientID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHStagingEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.StageGradeID - CTHStaging.ID</summary>
		public virtual IEntityRelation CTHStagingEntityUsingStageGradeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHStagingItem", false, new[] { CTHStagingFields.ID, CTHPatientClinicalDataFields.StageGradeID }); }
		}

		/// <summary>Returns a new IEntityRelation object, between CTHPatientClinicalDataEntity and CTHTumorGradeEntity over the m:1 relation they have, using the relation between the fields: CTHPatientClinicalData.TumorGradeID - CTHTumorGrade.ID</summary>
		public virtual IEntityRelation CTHTumorGradeEntityUsingTumorGradeID
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "CTHTumorGradeItem", false, new[] { CTHTumorGradeFields.ID, CTHPatientClinicalDataFields.TumorGradeID }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCTHPatientClinicalDataRelations
	{
		internal static readonly IEntityRelation CTHKimoSurveyEntityUsingPatientClinicalDataIDStatic = new CTHPatientClinicalDataRelations().CTHKimoSurveyEntityUsingPatientClinicalDataID;
		internal static readonly IEntityRelation CTHPatientImagingEntityUsingPatientClinicalDataIDStatic = new CTHPatientClinicalDataRelations().CTHPatientImagingEntityUsingPatientClinicalDataID;
		internal static readonly IEntityRelation CTHPatientIntialLabEntityUsingPatientClinicalDataIDStatic = new CTHPatientClinicalDataRelations().CTHPatientIntialLabEntityUsingPatientClinicalDataID;
		internal static readonly IEntityRelation CTHPatientPathologyReportEntityUsingPatienClinicalDataIDStatic = new CTHPatientClinicalDataRelations().CTHPatientPathologyReportEntityUsingPatienClinicalDataID;
		internal static readonly IEntityRelation CTHPatientSurgeryEntityUsingPatientClinicalDataIDStatic = new CTHPatientClinicalDataRelations().CTHPatientSurgeryEntityUsingPatientClinicalDataID;
		internal static readonly IEntityRelation CTHCancerHistologicEntityUsingCancerHistologicalIDStatic = new CTHPatientClinicalDataRelations().CTHCancerHistologicEntityUsingCancerHistologicalID;
		internal static readonly IEntityRelation CTHCancerMolecularEntityUsingCancerMolecularIDStatic = new CTHPatientClinicalDataRelations().CTHCancerMolecularEntityUsingCancerMolecularID;
		internal static readonly IEntityRelation CTHCancerSideEntityUsingCancerSideIdStatic = new CTHPatientClinicalDataRelations().CTHCancerSideEntityUsingCancerSideId;
		internal static readonly IEntityRelation CTHCancerTypeEntityUsingCancerTypeIDStatic = new CTHPatientClinicalDataRelations().CTHCancerTypeEntityUsingCancerTypeID;
		internal static readonly IEntityRelation CTHPatientEntityUsingPatientIDStatic = new CTHPatientClinicalDataRelations().CTHPatientEntityUsingPatientID;
		internal static readonly IEntityRelation CTHStagingEntityUsingStageGradeIDStatic = new CTHPatientClinicalDataRelations().CTHStagingEntityUsingStageGradeID;
		internal static readonly IEntityRelation CTHTumorGradeEntityUsingTumorGradeIDStatic = new CTHPatientClinicalDataRelations().CTHTumorGradeEntityUsingTumorGradeID;

		/// <summary>CTor</summary>
		static StaticCTHPatientClinicalDataRelations() { }
	}
}
